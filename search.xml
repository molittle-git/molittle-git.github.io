<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>杂谈笔记</title>
      <link href="/posts/5f473243.html"/>
      <url>/posts/5f473243.html</url>
      
        <content type="html"><![CDATA[<h2 id="之前一些函数名笔记">之前一些函数名笔记</h2><p><em>一些matlab函数名；</em></p><p><em>可能python也适合用</em></p><p><strong>矩阵运算操作求矩阵的转置 (A)'；</strong><br><strong>求矩阵的逆 inv(A)；</strong><br><strong>求矩阵的模det(A)；</strong><br><strong>2.数运算操作e的次方 exp(A)指数函数；</strong><br><strong>exp(x) 以e为底数 ；对数函数 log(x) 自然对数，即以e为底数的对数；</strong><br><strong>log10(x) 常用对数，即以10为底数的对数； log2(x) 以2为底数的x的对数；</strong><br><strong>开方函数 sqrt(x) 表示x的算术平方根； 绝对值函数 abs(x) 表示实数的绝对值以及复数的模；</strong><br><strong>三角函数（自变量的单位为弧度）</strong><br><strong>sin(x) 正弦函数 ；cos(x) 余弦函数； tan(x) 正切函数 ；cot(x) 余切函数 ；sec(x) 正割函数 ；csc(x) 余割函数；</strong><br><strong>反三角函数 asin(x) 反正弦函数； acos(x) 反余弦函数 ；atan(x) 反正切函数 ；acot(x) 反余切函数 ；asec(x) 反正割函数； acsc(x) 反余割函数；</strong><br><strong>双曲函数 sinh(x) 双曲正弦函数； cosh(x) 双曲余弦函数； tanh(x) 双曲正切函数； coth(x) 双曲余切函数； sech(x) 双曲正割函数 ；csch(x) 双曲余割函数； 反双曲函数 asinh(x) 反双曲正弦函数； acosh(x) 反双曲余弦函数； atanh(x) 反双曲正切函数； acoth(x) 反双曲余切函数 ；asech(x) 反双曲正割函数； acsch(x) 反双曲余割函数 ；</strong><br><strong>求角度函数 atan2(y,x) 以坐标原点为顶点，x轴正半轴为始边，从原点到点（x，y）的射线为终边的角，其单位为弧度；</strong><br><strong>数论函数 gcd(a,b) 两个整数的最大公约数 ；lcm(a,b) 两个整数的最小公倍数 ；</strong><br><strong>排列组合函数 factorial(n) 阶乘函数，表示n的阶乘；</strong><br><strong>复数函数 real(z) 实部函数；imag(z) 虚部函数 ；abs(z) 求复数z的模； angle(z) 求复数z的辐角；conj(z) 求复数z的共轭复数 ；</strong><br><strong>求整函数与截尾函数 ceil(x) 表示大于或等于实数x的最小整数 ；</strong><br><strong>floor(x) 表示小于或等于实数x的最大整数；</strong><br><strong>round(x) 最接近x的整数；</strong><br><strong>最大、最小函数 max([a，b，c，．．．])</strong><br><strong>求最大数 ；min([a，b，c，．．])</strong><br><strong>求最小数 ；符号函数 sign(x)</strong></p><h2 id="一些简短的算法笔记">一些简短的算法笔记</h2><p><strong>n第k位数字：n&gt;&gt;k&amp;1</strong><br><strong>返回n的最后一位1：lowbit(n) = n &amp; -n</strong><br><strong>C++的nth_element函数，cin.tie(0)或者ios::sync_with_stdio(false);</strong></p><p><strong>KMP扩展：BM算法;Sunday算法。</strong></p><p><strong>并查集按秩合并</strong><br><strong>Arrays.fill(arr,-1);C++memset();memcopy</strong><br><strong>c++reference</strong><br><strong>Character.isDigit(‘c’)—false</strong><br><strong>需要注意的是 在windows中按一下回车键 一共有两个字符 “\n\r” 而read()只能读取一个字符，所以如要要用read来达到吸收回车的目的，需要用两个read(); 如果用readLine()的话会将&quot;\n\r&quot;全部吸收 ， 所以只需要一个readLine()来吸收回车.</strong><br><strong>readLine()用回车来进行下一步操作//cin.sval;只适合吸收非数字字符，不吸收空格。</strong><br><strong>int num2 = Integer.parseInt(str);</strong><br><strong>String ss = String.valueOf(n);</strong><br><strong>数字字符串用BufferedReader</strong></p><p><strong>//字符串转化字符数组过程中从下表零开始</strong><br><strong>并查集按秩合并</strong></p><pre><code>cin.nextToken();String st=cin.sval;str=st.toCharArray();int res = Integer.MAX_VALUE;g[i][j] = Integer.parseInt(String.valueOf(s.charAt(j)));in.readLine();g[i][j] = s.charAt(j) - '0';浮点数//double a;//String str=String.format(&quot;%.2f&quot;,a)//!!!!!!!//cout.print(str);//或者 cout,printf(&quot;%.6f&quot;,a);//检查Segm fault错误System.exit(0);//全新输入 String []str=in.readLine().split(&quot; &quot;);n=Integer.parseInt(str[0]);m=Integer.parseInt(str[1])</code></pre>]]></content>
      
      
      <categories>
          
          <category> program </category>
          
          <category> 算法刷题路线 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/posts/4a17b156.html"/>
      <url>/posts/4a17b156.html</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start">Quick Start</h2><h3 id="Create-a-new-post">Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server">Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files">Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites">Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>math</title>
      <link href="/posts/a927044d.html"/>
      <url>/posts/a927044d.html</url>
      
        <content type="html"><![CDATA[<h3 id="求100-的约数个数和约数之和">求100!的约数个数和约数之和</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><code class="hljs 代码">package lanqiao;<br>import java.util.*;<br>public class math0 &#123;<br>    static List&lt;Integer&gt;primes=new LinkedList&lt;Integer&gt;();<br>    static void sPrime(int n) &#123;<br>        boolean[]st=new boolean[n+1];<br>        for(int i=2;i&lt;=n;i++) &#123;<br>            if(!st[i])primes.add(i);<br>            for(int j=0;primes.get(j)*i&lt;=n;j++) &#123;<br>                st[primes.get(j)*i]=true;<br>                if(i%primes.get(j)==0)break;<br>            &#125;<br>        &#125;<br>    &#125;<br>    static int minc(int n,int p) &#123;<br>        int rxp=0;<br>        while(n&gt;0) &#123;<br>            n/=p;<br>            rxp+=n;<br>        &#125;<br>        return rxp;<br>    &#125;<br>    static long qui(long a,long b) &#123;<br>        long res=1;<br>        while(b&gt;0) &#123;<br>            if((b&amp;1)==1) &#123;<br>                res*=a;<br>            &#125;<br>            a=a*a;<br>            b/=2;<br>        &#125;<br>        return res;<br>    &#125;<br>    public static void main(String[] args) &#123;<br>        Scanner scan=new Scanner(System.in);<br>        int n=100;<br>        sPrime(n);<br>        int []exp=new int[primes.size()];<br>        for(int i=0;i&lt;primes.size();i++) &#123;<br>            int p=primes.get(i);<br>            exp[i]=minc(n,p);<br>        &#125;<br>        int numy=1;<br>        for(int e:exp) &#123;<br>            numy*=(e+1);<br>        &#125;<br>        long sumy=1L;<br>        for(int i=0;i&lt;primes.size();i++) &#123;<br>            int p=primes.get(i);<br>            int e=exp[i];<br>            sumy*=(qui(p,e+1)-1)/(p-1);<br>        &#125;<br>        System.out.println(numy+&quot;  &quot;+sumy);<br>        scan.close();<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="质因数分解">质因数分解</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">import java.util.HashMap;<br>import java.util.Map;<br><br>public class PrimeFactorization &#123;<br>    public static void main(String[] args) &#123;<br>        int x = 100; // 待分解的数<br>        Map&lt;Integer, Integer&gt; primeFactors = divide(x);<br><br>        // 输出质因数及其次数<br>        for (Map.Entry&lt;Integer, Integer&gt; entry : primeFactors.entrySet()) &#123;<br>            System.out.println(entry.getKey() + &quot; &quot; + entry.getValue());<br>        &#125;<br>    &#125;<br><br>    public static Map&lt;Integer, Integer&gt; divide(int x) &#123;<br>        Map&lt;Integer, Integer&gt; primeFactors = new HashMap&lt;&gt;();<br><br>        for (int i = 2; i &lt;= x / i; i++) &#123;<br>            if (x % i == 0) &#123;<br>                int count = 0;<br>                while (x % i == 0) &#123;<br>                    x /= i;<br>                    count++;<br>                &#125;<br>                primeFactors.put(i, count);<br>            &#125;<br>        &#125;<br><br>        // 如果最后剩下的x &gt; 1，说明它本身是质数<br>        if (x &gt; 1) &#123;<br>            primeFactors.put(x, 1);<br>        &#125;<br><br>        return primeFactors;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="欧拉函数（Euler’s-Totient-Function）">欧拉函数（Euler’s Totient Function）</h4><p>欧拉函数 ϕ(n)<em>ϕ</em>(<em>n</em>) 表示小于或等于 n_n_ 的正整数中与 n_n_ 互质的数的个数。 <strong>性质</strong>：</p><ul><li>若 <em>n_是质数，ϕ(n)=n−1_ϕ</em>(<em>n</em>)=_n_−1。</li><li>若 n=pk_n_=*p<strong>k_，ϕ(n)=pk−pk−1_ϕ_(<em>n</em>)=_p</strong>k_−_p*_k_−1。</li><li>若 n=a×b_n_=<em>a_×_b</em> 且 a_a_ 和 b_b_ 互质，ϕ(n)=ϕ(a)×ϕ(b)<em>ϕ</em>(<em>n</em>)=<em>ϕ</em>(<em>a</em>)×_ϕ_(<em>b</em>)。</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">public class EulerTotient &#123;<br>    public static int eulerTotient(int n) &#123;<br>        int result = n;<br>        for (int p = 2; p * p &lt;= n; p++) &#123;<br>            if (n % p == 0) &#123;<br>                while (n % p == 0) &#123;<br>                    n /= p;<br>                &#125;<br>                result -= result / p;<br>            &#125;<br>        &#125;<br>        if (n &gt; 1) &#123;<br>            result -= result / n;<br>        &#125;<br>        return result;<br>    &#125;<br><br>    public static void main(String[] args) &#123;<br>        int n = 10;<br>        System.out.println(&quot;欧拉函数φ(&quot; + n + &quot;) = &quot; + eulerTotient(n));<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p><strong><em>别考，求！</em></strong></p><h3 id="卢卡斯定理（Lucas-Theorem）及其适用性"><strong>卢卡斯定理（Lucas Theorem）及其适用性</strong></h3><h4 id="卢卡斯定理的表述"><strong>卢卡斯定理的表述</strong></h4><p>若 p_p_ 是质数，则对于任意整数 1≤m≤n1≤_m_≤_n_，组合数 C(n,m)<em>C</em>(<em>n</em>,<em>m</em>) 满足：</p><p>C(n,m)≡C(n mod p,m mod p)×C(⌊np⌋,⌊mp⌋)(modp)<em>C</em>(<em>n</em>,<em>m</em>)≡_C_(<em>n_mod_p</em>,<em>m_mod_p</em>)×_C_(⌊*p<strong>n_⌋,⌊_p</strong>m_⌋)(mod_p*)</p><p>其中：</p><ul><li>C(n mod p,m mod p)<em>C</em>(<em>n_mod_p</em>,<em>m_mod_p</em>) 是 <strong>小规模组合数</strong>（直接用公式计算）。</li><li>C(⌊np⌋,⌊mp⌋)<em>C</em>(⌊*p<strong>n_⌋,⌊_p</strong>m*⌋) 是 <strong>递归计算的组合数</strong>。</li></ul><h4 id="适用条件"><strong>适用条件</strong></h4><ol><li><strong>p*p* 必须是质数</strong>，否则卢卡斯定理不成立。</li><li><strong>适用于 n*n* 和 m*m* 较大的情况</strong>（如 n,m≤1018_n_,<em>m_≤1018，但 p_p</em> 较小）。</li><li><strong>不适用于非质数模数</strong>（如 p=4_p_=4 或 p=109+7_p_=109+7 但非质数）。</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">若p是质数，则对于任意整数 1 &lt;= m &lt;= n，有：<br>    C(n, m) = C(n % p, m % p) * C(n / p, m / p) (mod p)<br><br>int qmi(int a, int k, int p)  // 快速幂模板<br>&#123;<br>    int res = 1 % p;<br>    while (k)<br>    &#123;<br>        if (k &amp; 1) res = (LL)res * a % p;<br>        a = (LL)a * a % p;<br>        k &gt;&gt;= 1;<br>    &#125;<br>    return res;<br>&#125;<br><br>int C(int a, int b, int p)  // 通过定理求组合数C(a, b)<br>&#123;<br>    if (a &lt; b) return 0;<br><br>    LL x = 1, y = 1;  // x是分子，y是分母<br>    for (int i = a, j = 1; j &lt;= b; i --, j ++ )<br>    &#123;<br>        x = (LL)x * i % p;<br>        y = (LL) y * j % p;<br>    &#125;<br><br>    return x * (LL)qmi(y, p - 2, p) % p;<br>&#125;<br><br>int lucas(LL a, LL b, int p)<br>&#123;<br>    if (a &lt; p &amp;&amp; b &lt; p) return C(a, b, p);<br>    return (LL)C(a % p, b % p, p) * lucas(a / p, b / p, p) % p;<br>&#125;<br></code></pre></td></tr></table></figure><p><strong>扩展卢卡斯定理（Lucas Theorem）</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">import java.util.ArrayList;<br>import java.util.HashMap;<br>import java.util.List;<br>import java.util.Map;<br><br>public class ExLucas &#123;<br><br>    // 质因数分解 p = p1^k1 * p2^k2 * ... * pm^km<br>    public static Map&lt;Integer, Integer&gt; factorize(int p) &#123;<br>        Map&lt;Integer, Integer&gt; factors = new HashMap&lt;&gt;();<br>        for (int i = 2; i * i &lt;= p; i++) &#123;<br>            while (p % i == 0) &#123;<br>                factors.put(i, factors.getOrDefault(i, 0) + 1);<br>                p /= i;<br>            &#125;<br>        &#125;<br>        if (p &gt; 1) factors.put(p, 1);<br>        return factors;<br>    &#125;<br><br>    // 计算 n! 中去除 p 的因子后的值 mod p^k<br>    public static int factorialMod(int n, int p, int pk) &#123;<br>        if (n == 0) return 1;<br>        int res = 1;<br>        for (int i = 1; i &lt;= pk; i++) &#123;<br>            if (i % p == 0) continue; // 跳过 p 的倍数<br>            res = (res * i) % pk;<br>        &#125;<br>        res = powMod(res, n / pk, pk);<br>        for (int i = 1; i &lt;= n % pk; i++) &#123;<br>            if (i % p == 0) continue;<br>            res = (res * i) % pk;<br>        &#125;<br>        return (res * factorialMod(n / p, p, pk)) % pk;<br>    &#125;<br><br>    // 快速幂算法<br>    public static int powMod(int base, int exp, int mod) &#123;<br>        int result = 1;<br>        base = base % mod;<br>        while (exp &gt; 0) &#123;<br>            if (exp % 2 == 1) &#123;<br>                result = (result * base) % mod;<br>            &#125;<br>            exp = exp &gt;&gt; 1;<br>            base = (base * base) % mod;<br>        &#125;<br>        return result;<br>    &#125;<br><br>    // 计算 n! 中 p 的幂次<br>    public static int countP(int n, int p) &#123;<br>        int count = 0;<br>        while (n &gt; 0) &#123;<br>            n /= p;<br>            count += n;<br>        &#125;<br>        return count;<br>    &#125;<br><br>    // 计算 C(n, m) mod p^k<br>    public static int combModPk(int n, int m, int p, int pk) &#123;<br>        if (m &gt; n) return 0;<br>        int num = factorialMod(n, p, pk);<br>        int den1 = factorialMod(m, p, pk);<br>        int den2 = factorialMod(n - m, p, pk);<br>        int den = (den1 * den2) % pk;<br>        int invDen = modInverse(den, pk); // 逆元<br>        int powP = countP(n, p) - countP(m, p) - countP(n - m, p);<br>        return (num * invDen % pk * powMod(p, powP, pk)) % pk;<br>    &#125;<br><br>    // 计算模逆元<br>    public static int modInverse(int a, int m) &#123;<br>        return powMod(a, m - 2, m);<br>    &#125;<br><br>    // 中国剩余定理（CRT）合并同余方程<br>    public static int crt(List&lt;Integer&gt; remainders, List&lt;Integer&gt; mods) &#123;<br>        int M = 1;<br>        for (int mod : mods) &#123;<br>            M *= mod;<br>        &#125;<br>        int res = 0;<br>        for (int i = 0; i &lt; remainders.size(); i++) &#123;<br>            int mi = mods.get(i);<br>            int Mi = M / mi;<br>            int invMi = modInverse(Mi, mi);<br>            res = (res + remainders.get(i) * Mi % M * invMi % M) % M;<br>        &#125;<br>        return res;<br>    &#125;<br><br>    // 扩展卢卡斯定理：计算 C(n, m) mod p（p 非质数）<br>    public static int exLucas(int n, int m, int p) &#123;<br>        Map&lt;Integer, Integer&gt; factors = factorize(p);<br>        List&lt;Integer&gt; remainders = new ArrayList&lt;&gt;();<br>        List&lt;Integer&gt; mods = new ArrayList&lt;&gt;();<br>        for (Map.Entry&lt;Integer, Integer&gt; entry : factors.entrySet()) &#123;<br>            int prime = entry.getKey();<br>            int exp = entry.getValue();<br>            int pk = (int) Math.pow(prime, exp);<br>            int rem = combModPk(n, m, prime, pk);<br>            remainders.add(rem);<br>            mods.add(pk);<br>        &#125;<br>        return crt(remainders, mods);<br>    &#125;<br><br>    public static void main(String[] args) &#123;<br>        int n = 100;<br>        int m = 50;<br>        int p = 12; // 非质数模数<br>        int result = exLucas(n, m, p);<br>        System.out.println(&quot;C(&quot; + n + &quot;, &quot; + m + &quot;) mod &quot; + p + &quot; = &quot; + result);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="并查集">并查集</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">import java.util.*;<br>public class Main&#123;<br>  static int[]father;<br>  static long[]value;<br>  public static void main(String[] args)&#123;<br>    Scanner scan=new Scanner(System.in);<br>    int N=scan.nextInt();<br>    int M=scan.nextInt();<br>    int Q=scan.nextInt();<br>    father=new int[N+1];<br>    value=new long[N+1];<br>    init(N);<br>    for(int i=0;i&lt;M;i++)&#123;<br>      int left=scan.nextInt();<br>      int right=scan.nextInt();<br>      long s=scan.nextLong();<br>      left--;<br>      union(left,right,s);<br>    &#125;<br>    for(int i=0;i&lt;Q;i++)&#123;<br>      int l=scan.nextInt();<br>      int r=scan.nextInt();<br>      l--;<br>      int lFa=find(l);<br>      int rFa=find(r);<br>      if(lFa==rFa)&#123;<br>        System.out.println(value[l]-value[r]);<br>      &#125;else&#123;<br>        System.out.println(&quot;UNKNOWN&quot;);<br>      &#125;<br>    &#125;<br>    scan.close();<br>  &#125;<br>  static void init(int N)&#123;<br>    for(int i=0;i&lt;=N;i++)&#123;<br>      father[i]=i;<br>    &#125;<br>  &#125;<br>  static int find(int x)&#123;<br>    if(x!=father[x])&#123;<br>      int tmp=father[x];<br>      father[x]=find(father[x]);<br>      value[x]+=value[tmp];<br>    &#125;<br>    return father[x];<br>  &#125;<br>  static void union(int left,int right,long s)&#123;<br>    int lF=find(left);<br>    int rF=find(right);<br>    if(lF!=rF)&#123;<br>      int min=Math.min(lF,rF);<br>      int max=Math.max(lF,rF);<br>      father[min]=max;<br>      value[min]=Math.abs(value[right]-value[left]+s);<br>    &#125;<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">import java.util.*;<br>// 1:无需package<br>// 2: 类名必须Main, 不可修改<br><br>public class Main &#123;<br>  static int N=110;<br>  static int n,Q;<br>  static long[][]cnt;<br>  static long[][]ans;<br>  static long[][]lns;<br>    public static void main(String[] args) &#123;<br>        Scanner scan = new Scanner(System.in);<br>        n=scan.nextInt();<br>        Q=scan.nextInt();<br>        cnt=new long[N][N];<br>        ans=new long[N][N];<br>        lns=new long[N][N];<br>        for(int i=1;i&lt;=n;i++)&#123;<br>          for(int j=1;j&lt;=n;j++)&#123;<br>            ans[i][j]=scan.nextLong();<br>          &#125;<br>        &#125;<br>        for(int i=1;i&lt;=n;i++)&#123;<br>          for(int j=1;j&lt;=n;j++)&#123;<br>            lns[i][j]=scan.nextInt();<br>            cnt[i][j]=lns[i][j];<br>          &#125;<br>        &#125;<br>        if(floyd()&gt;Q)&#123;<br>          System.out.println(-1);<br>          return;<br>        &#125;<br>        long l=0,r=10000010;<br>        while(l&lt;r)&#123;<br>          long mid=l+r&gt;&gt;1;<br>          if(check(mid))r=mid;//minhua<br>          else l=mid+1;<br>        &#125;<br>        System.out.println(r);<br>        scan.close();<br>    &#125;<br>    static long floyd()&#123;<br>      //最短路下线<br>      long a=0;<br>      for(int k=1;k&lt;=n;k++)&#123;<br>          for(int i=1;i&lt;=n;i++)&#123;<br>            for(int j=1;j&lt;=n;j++)&#123;<br>              cnt[i][j]=Math.min(cnt[i][j],cnt[i][k]+cnt[k][j]);<br>            &#125;<br>          &#125;<br>        &#125;<br>        for(int i=1;i&lt;=n;i++)&#123;<br>          for(int j=1;j&lt;=n;j++)&#123;<br>            a+=cnt[i][j];<br>          &#125;<br>        &#125;<br>        return a;<br>    &#125;<br>    static boolean check(long x)&#123;<br>      for(int i=1;i&lt;=n;i++)&#123;<br>        for(int j=1;j&lt;=n;j++)&#123;<br>          cnt[i][j]=ans[i][j];<br>        &#125;<br>      &#125;<br>      long h=x/n;<br>      long s=x%n;<br>      for(int i=1;i&lt;=n;i++)&#123;<br>        for(int j=1;j&lt;=n;j++)&#123;<br>          if(i==j)continue;<br>          if(i&lt;=s)cnt[i][j]=Math.max(lns[i][j],cnt[i][j]-1-h);<br>          else cnt[i][j]=Math.max(lns[i][j],cnt[i][j]-h);<br>          cnt[j][i]=cnt[i][j];<br>        &#125;<br>      &#125;<br>      return floyd()&lt;=Q;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="dij">dij</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">package lanqiao;<br>import java.util.*;<br>public class dj &#123;<br>    static int m,n;<br>    static long[][]dis;<br>    static boolean[][]st;<br>    static ArrayList&lt;long[]&gt;[][]list;<br>    public static void main(String[] args) &#123;<br>        Scanner scan=new Scanner(System.in);<br>        n=scan.nextInt();<br>        m=scan.nextInt();<br>        dis=new long[n+1][m+1];<br>        st=new boolean[n+1][m+1];<br>        int[][]a=new int[n+1][m+1];<br>        list=new ArrayList[n+1][m+1];<br>        for(int i=1;i&lt;=n;i++) &#123;<br>            for(int j=1;j&lt;=m;j++) &#123;<br>                list[i][j]=new ArrayList&lt;long[]&gt;();<br>                a[i][j]=scan.nextInt();<br>            &#125;<br>        &#125;<br>        for(int i=1;i&lt;=n;i++) &#123;<br>            for(int j=1;j&lt;=m;j++) &#123;<br>            if(i&gt;1)list[i][j].add(new long[] &#123;i-1,j,a[i-1][j]&#125;);<br>            if(j&gt;1)list[i][j].add(new long[] &#123;i,j-1,a[i][j-1]&#125;);<br>            if(i&lt;n)list[i][j].add(new long[] &#123;i+1,j,a[i+1][j]&#125;);<br>            if(j&lt;m)list[i][j].add(new long[] &#123;i,j+1,a[i][j+1]&#125;);<br>            &#125;<br>        &#125;<br>        dij(a[1][1]);<br>        long max=0;<br>        for(int i=1;i&lt;=n;i++) &#123;<br>            for(int j=1;j&lt;=m;j++) &#123;<br>                max=Math.max(dis[i][j],max);<br>            &#125;<br>        &#125;<br>        System.out.println(max);<br>        scan.close();<br>    &#125;<br>    static void dij(int start) &#123;<br>        for(int i=1;i&lt;=n;i++) &#123;<br>            Arrays.fill(dis[i],Long.MAX_VALUE);<br>        &#125;<br><br>        PriorityQueue&lt;long[]&gt;p=new PriorityQueue&lt;long[]&gt;(Comparator.comparing(k-&gt;k[2]));<br>        dis[1][1]=start;<br>        p.add(new long[]&#123;1,1,start&#125;);<br>        while(!p.isEmpty()) &#123;<br>            long[]t=p.poll();<br>            int x=(int)t[0];<br>            int y=(int)t[1];<br>            if(st[x][y])continue;<br>            st[x][y]=true;<br>            for(long[]a:list[x][y]) &#123;<br>                int x1=(int)a[0];<br>                int y1=(int)a[1];<br>                long w=a[2];<br>                if(dis[x1][y1]&gt;dis[x][y]+w) &#123;<br>                    dis[x1][y1]=dis[x][y]+w;<br>                    p.add(new long[] &#123;x1,y1,dis[x1][y1]&#125;);<br>                &#125;<br>            &#125;<br>        &#125;<br><br>    &#125;<br><br>&#125;<br></code></pre></td></tr></table></figure><h3 id="dfs">dfs</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">import java.util.*;<br>// 1:无需package<br>// 2: 类名必须Main, 不可修改<br><br>public class Main &#123;<br>  static int N=110;<br>  static int n,Q;<br>  static long[][]cnt;<br>  static long[][]ans;<br>  static long[][]lns;<br>    public static void main(String[] args) &#123;<br>        Scanner scan = new Scanner(System.in);<br>        n=scan.nextInt();<br>        Q=scan.nextInt();<br>        cnt=new long[N][N];<br>        ans=new long[N][N];<br>        lns=new long[N][N];<br>        for(int i=1;i&lt;=n;i++)&#123;<br>          for(int j=1;j&lt;=n;j++)&#123;<br>            ans[i][j]=scan.nextLong();<br>          &#125;<br>        &#125;<br>        for(int i=1;i&lt;=n;i++)&#123;<br>          for(int j=1;j&lt;=n;j++)&#123;<br>            lns[i][j]=scan.nextInt();<br>            cnt[i][j]=lns[i][j];<br>          &#125;<br>        &#125;<br>        if(floyd()&gt;Q)&#123;<br>          System.out.println(-1);<br>          return;<br>        &#125;<br>        long l=0,r=10000010;<br>        while(l&lt;r)&#123;<br>          long mid=l+r&gt;&gt;1;<br>          if(check(mid))r=mid;//minhua<br>          else l=mid+1;<br>        &#125;<br>        System.out.println(r);<br>        scan.close();<br>    &#125;<br>    static long floyd()&#123;<br>      //最短路下线<br>      long a=0;<br>      for(int k=1;k&lt;=n;k++)&#123;<br>          for(int i=1;i&lt;=n;i++)&#123;<br>            for(int j=1;j&lt;=n;j++)&#123;<br>              cnt[i][j]=Math.min(cnt[i][j],cnt[i][k]+cnt[k][j]);<br>            &#125;<br>          &#125;<br>        &#125;<br>        for(int i=1;i&lt;=n;i++)&#123;<br>          for(int j=1;j&lt;=n;j++)&#123;<br>            a+=cnt[i][j];<br>          &#125;<br>        &#125;<br>        return a;<br>    &#125;<br>    static boolean check(long x)&#123;<br>      for(int i=1;i&lt;=n;i++)&#123;<br>        for(int j=1;j&lt;=n;j++)&#123;<br>          cnt[i][j]=ans[i][j];<br>        &#125;<br>      &#125;<br>      long h=x/n;<br>      long s=x%n;<br>      for(int i=1;i&lt;=n;i++)&#123;<br>        for(int j=1;j&lt;=n;j++)&#123;<br>          if(i==j)continue;<br>          if(i&lt;=s)cnt[i][j]=Math.max(lns[i][j],cnt[i][j]-1-h);<br>          else cnt[i][j]=Math.max(lns[i][j],cnt[i][j]-h);<br>          cnt[j][i]=cnt[i][j];<br>        &#125;<br>      &#125;<br>      return floyd()&lt;=Q;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> program </category>
          
          <category> 算法模板 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>二分</title>
      <link href="/posts/9947c71c.html"/>
      <url>/posts/9947c71c.html</url>
      
        <content type="html"><![CDATA[<h3 id="最小值最大化">最小值最大化</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><code class="hljs 代码">import java.util.*;<br>public class Main&#123;<br>    static int N=100010;<br>    static int[]h=new int[N];<br>    static int[]w=new int[N];<br>    static int n,k;<br>    public static void main(String[] args) &#123;<br>        Scanner scan=new Scanner(System.in);<br>        n=scan.nextInt();<br>        k=scan.nextInt();<br>        h=new int[n];<br>        w=new int[n];<br>        for(int i=0;i&lt;n;i++) &#123;<br>            h[i]=scan.nextInt();<br>            w[i]=scan.nextInt();<br>        &#125;<br>        int l=1,r=(int)1e5+10;<br>        while(l&lt;r) &#123;<br>            int mid=(r+l+1)/2;<br>            if(check(mid))l=mid;<br>            else r=mid-1;<br>        &#125;<br>        System.out.println(l);<br>&#125;<br>    static boolean check(int x) &#123;<br>        long res=0;<br>        for(int i=0;i&lt;n;i++) &#123;<br>        res+=(h[i]/x)*(w[i]/x);<br>        &#125;<br>        if(res&gt;=k) &#123;<br>            return true;<br>        &#125;<br>        return false;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="最大值最小化">最大值最小化</h3><h5 id="题目：共n个月-给出每个月的开销-将n个月划分成m个时间段-求m个时间段中开销最大的时间段的最小开销值。">题目：共n个月,给出每个月的开销.将n个月划分成m个时间段,求m个时间段中开销最大的时间段的最小开销值。</h5><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-type">int</span> n,m;<br>vector&lt;<span class="hljs-type">int</span>&gt;a;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">check</span><span class="hljs-params">(<span class="hljs-type">int</span> M)</span></span>&#123;<br>    <span class="hljs-type">int</span> ct=<span class="hljs-number">0</span>,now=<span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;n;i++)&#123;<br>        <span class="hljs-keyword">if</span>(a[i]&gt;M) <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>        <span class="hljs-keyword">if</span>(now+a[i]&gt;M)&#123;<br>            ct++;<br>            now=<span class="hljs-number">0</span>;    <br>        &#125;    <br>        now+=a[i];<br>    &#125;<br>    <span class="hljs-keyword">return</span> ct&lt;m;<br>&#125;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;<br>    cin&gt;&gt;n&gt;&gt;m;<br>    a.<span class="hljs-built_in">resize</span>(n);<br>    <span class="hljs-type">int</span> R=<span class="hljs-number">0</span>,L=<span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;n;i++)&#123;<br>        cin&gt;&gt;a[i];<br>        R+=a[i];<br>        L=<span class="hljs-built_in">max</span>(L,a[i]);<br>    &#125;<br>    R++;    <br>    <span class="hljs-keyword">while</span>(L&lt;R)&#123;<br>        <span class="hljs-type">int</span> M=(L+R)/<span class="hljs-number">2</span>;<br>        <span class="hljs-keyword">if</span>(<span class="hljs-built_in">check</span>(M)) R=M;<br>        <span class="hljs-keyword">else</span> L=M<span class="hljs-number">+1</span>;<br>    &#125;<br>    cout&lt;&lt;L&lt;&lt;endl;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">//更安全的求最大值最小化</span><br><span class="hljs-keyword">import</span> java.util.Arrays;<br><span class="hljs-keyword">import</span> java.util.Scanner;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Main</span> &#123;<br>    <span class="hljs-keyword">static</span>  <span class="hljs-type">int</span> N=<span class="hljs-number">100010</span>,n,k,t;<br>    <span class="hljs-keyword">static</span>  <span class="hljs-type">long</span> a[]=<span class="hljs-keyword">new</span> <span class="hljs-title class_">long</span>[N];<br>    <span class="hljs-keyword">public</span>  <span class="hljs-keyword">static</span>  <span class="hljs-type">boolean</span> <span class="hljs-title function_">check</span><span class="hljs-params">(<span class="hljs-type">int</span> m)</span>&#123;<br>        <span class="hljs-type">long</span> arr[]=<span class="hljs-keyword">new</span> <span class="hljs-title class_">long</span>[m+<span class="hljs-number">5</span>];<br>        <span class="hljs-type">long</span> s[]=<span class="hljs-keyword">new</span> <span class="hljs-title class_">long</span>[m+<span class="hljs-number">5</span>];<br>        <span class="hljs-type">long</span> s_pow[]=<span class="hljs-keyword">new</span> <span class="hljs-title class_">long</span>[m+<span class="hljs-number">5</span>];<br>        <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=m;i++) arr[i]=a[i];<br>        Arrays.sort(arr,<span class="hljs-number">1</span>,m+<span class="hljs-number">1</span>);<br>        <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=m;i++)&#123;<br>            s[i]=s[i-<span class="hljs-number">1</span>]+arr[i];<br>            s_pow[i]=s_pow[i-<span class="hljs-number">1</span>]+(arr[i]*arr[i]);<br>        &#125;<br>        <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=k;i&lt;=m;i++)&#123;<br>            <span class="hljs-type">long</span> s1=s_pow[i]-s_pow[i-k];<br>            <span class="hljs-type">long</span> s2=s[i]-s[i-k];<br>            <span class="hljs-type">double</span> avg=s2*<span class="hljs-number">1.00</span>/k;<br><span class="hljs-comment">//把他给的方差公式 可以优化 成这个 提醒平方差公式</span><br>            <span class="hljs-type">double</span> res=(s1-<span class="hljs-number">2</span>*avg*s2+k*avg*avg)/k;<br>            <span class="hljs-keyword">if</span>(res&lt;t) <span class="hljs-keyword">return</span>  <span class="hljs-literal">true</span>;<br>        &#125;<br>        <span class="hljs-keyword">return</span>  <span class="hljs-literal">false</span>;<br>    &#125;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> &#123;<br>        Scanner sc=<span class="hljs-keyword">new</span> <span class="hljs-title class_">Scanner</span>(System.in);<br>        n=sc.nextInt();<br>        k=sc.nextInt();<br>        t=sc.nextInt();<br>        <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)&#123;<br>            a[i]=sc.nextLong();<br>        &#125;<br>        <span class="hljs-type">int</span> l=k,r=n;<br>        <span class="hljs-type">int</span> res=-<span class="hljs-number">1</span>;<br>        <span class="hljs-keyword">while</span> (l&lt;=r)&#123;<br>            <span class="hljs-type">int</span> mid=(l+r)&gt;&gt;<span class="hljs-number">1</span>;<br>            <span class="hljs-keyword">if</span>(check(mid))&#123;<br>                r=mid-<span class="hljs-number">1</span>;<br>                res=mid;<br>            &#125;<span class="hljs-keyword">else</span>&#123;<br>                l=mid+<span class="hljs-number">1</span>;<br>            &#125;<br>        &#125;<br>        System.out.println(res);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> program </category>
          
          <category> 算法模板 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 二分 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Floyd</title>
      <link href="/posts/97c8f9ac.html"/>
      <url>/posts/97c8f9ac.html</url>
      
        <content type="html"><![CDATA[<h2 id="星际旅行">星际旅行</h2><h3 id="问题描述">问题描述</h3><p>小明国庆节准备去某星系进行星际旅行，这个星系里一共有 n_n_ 个星球，其中布置了 m_m_ 道双向传送门，第 i_i_ 道传送门可以连接 ai,bi*a<strong>i_,_b</strong>i <em>两颗星球（ai≠bi_a**i</em>\=_b**i* 且任意两颗星球之间最多只有一个传送门）。</p><p>他看中了一款 “旅游盲盒”，一共有 Q_Q_ 个盲盒，第 i_i_ 个盲盒里的旅行方案规定了旅行的起始星球 xi*x<strong>i _和最多可以使用传送门的次数 yi_y</strong>i*。只要从起始星球出发，使用传送门不超过规定次数能到达的所有星球都可以去旅行。</p><p>小明关心在每个方案中有多少个星球可以旅行到。小明只能在这些盲盒里随机选一个购买，他想知道能旅行到的不同星球的数量的期望是多少。</p><h3 id="输入格式">输入格式</h3><p>输入共 m+Q+1_m_+<em>Q</em>+1 行。</p><p>第一行为三个正整数 n,m,Q_n_,<em>m</em>,<em>Q</em> 。</p><p>后面 m_m_ 行，每行两个正整数 ai,bi*a<strong>i_,_b</strong>i* 。</p><p>后面 Q_Q_ 行，每行两个整数 xi,yi*x<strong>i_,_y</strong>i* 。</p><h3 id="输出格式">输出格式</h3><p>输出共一行，一个浮点数（四舍五入保留两位小数）。</p><h3 id="样例输入">样例输入</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs text">3 2 3<br>1 2<br>2 3<br>2 1<br>2 0<br>1 1<br></code></pre></td></tr></table></figure><h3 id="样例输出">样例输出</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs text">2.00<br></code></pre></td></tr></table></figure><h3 id="样例说明">样例说明</h3><p>第一个盲盒可以旅行到 1,2,31,2,3。</p><p>第二个盲盒可以旅行到 22。</p><p>第三个盲盒可以旅行到 1,21,2。</p><p>所以期望是 (3+1+2)/3=2.00(3+1+2)/3=2.00。</p><h3 id="解决">解决</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">import</span> java.util.*;<br><span class="hljs-comment">// 1:无需package</span><br><span class="hljs-comment">// 2: 类名必须Main, 不可修改</span><br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Main</span> &#123;<br>  <span class="hljs-keyword">static</span> <span class="hljs-type">int</span> n,m,q;<br>  <span class="hljs-keyword">static</span> <span class="hljs-type">int</span>[][]con;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> &#123;<br>        <span class="hljs-type">Scanner</span> <span class="hljs-variable">sc</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Scanner</span>(System.in);<br>        n=sc.nextInt();<br>        m=sc.nextInt();<br>        q=sc.nextInt();<br>        con=<span class="hljs-keyword">new</span> <span class="hljs-title class_">int</span>[n+<span class="hljs-number">1</span>][n+<span class="hljs-number">1</span>];<br>        <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)&#123;<br>          Arrays.fill(con[i],<span class="hljs-number">3010</span>);<br>        &#125;<br>        <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)&#123;<br>          con[i][i]=<span class="hljs-number">0</span>;<br>        &#125;<br>        <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;m;i++)&#123;<br>          <span class="hljs-type">int</span> a=sc.nextInt();<br>          <span class="hljs-type">int</span> b=sc.nextInt();<br>          con[a][b]=<span class="hljs-number">1</span>;<br>          con[b][a]=<span class="hljs-number">1</span>;<br>        &#125;<br>        <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> k=<span class="hljs-number">1</span>;k&lt;=n;k++)&#123;<br>          <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)&#123;<br>            <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> j=<span class="hljs-number">1</span>;j&lt;=n;j++)&#123;<br>              con[i][j]=Math.min(con[i][j],con[i][k]+con[k][j]);<br>            &#125;<br>          &#125;<br>        &#125;<br>        <span class="hljs-type">int</span> ans=<span class="hljs-number">0</span>;<br>        <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;q;i++)&#123;<br>          <span class="hljs-type">int</span> x=sc.nextInt();<br>          <span class="hljs-type">int</span> y=sc.nextInt();<br>          <span class="hljs-type">int</span> count=<span class="hljs-number">0</span>;<br>          <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> j=<span class="hljs-number">1</span>;j&lt;=n;j++)&#123;<br>            <span class="hljs-keyword">if</span>(con[x][j]&lt;=y)count++;<br>          &#125;<br>            ans+=count;<br>        &#125;<br>          System.out.printf(<span class="hljs-string">&quot;%.2f&quot;</span>,(<span class="hljs-type">double</span>)ans/q);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="牛的旅行">牛的旅行</h2><p><strong><em>题目链接</em></strong></p><p><a href="https://www.acwing.com/problem/content/description/1127/" title="牛的旅行">牛的旅行</a></p><h3 id="问题描述-2">问题描述</h3><p>农民John的农场里有很多牧区，有的路径连接一些特定的牧区。</p><p>一片所有连通的牧区称为一个牧场。</p><p>但是就目前而言，你能看到至少有两个牧区不连通。</p><p>现在，John想在农场里添加一条路径（注意，恰好一条）。</p><p>一个牧场的直径就是牧场中最远的两个牧区的距离（本题中所提到的所有距离指的都是最短的距离）。</p><p>考虑如下的两个牧场，每一个牧区都有自己的坐标：</p><p><img src="https://cdn.acwing.com/media/article/image/2019/10/30/19_2da2200cfa-1.png" alt="1.png"></p><p>图 1 是有 5 个牧区的牧场，牧区用“*”表示，路径用直线表示。</p><p>图 1 所示的牧场的直径大约是 12.07106, 最远的两个牧区是 A 和 E，它们之间的最短路径是 A-B-E。</p><p>图 2 是另一个牧场。</p><p>这两个牧场都在John的农场上。</p><p>John将会在两个牧场中各选一个牧区，然后用一条路径连起来，使得连通后这个新的更大的牧场有最小的直径。</p><p>注意，如果两条路径中途相交，我们不认为它们是连通的。</p><p>只有两条路径在同一个牧区相交，我们才认为它们是连通的。</p><p>现在请你编程找出一条连接两个不同牧场的路径，使得连上这条路径后，所有牧场（生成的新牧场和原有牧场）中直径最大的牧场的直径尽可能小。</p><p>输出这个直径最小可能值。</p><h4 id="输入格式-2">输入格式</h4><p>第 1 行：一个整数 N, 表示牧区数；</p><p>第 2 到 N+1 行：每行两个整数 X,Y， 表示 N 个牧区的坐标。每个牧区的坐标都是不一样的。</p><p>第 N+2 行到第 2*N+1 行：每行包括 N 个数字 ( 0或1 ) 表示一个对称邻接矩阵。</p><p>例如，题目描述中的两个牧场的矩阵描述如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">  A B C D E F G H <br>A 0 1 0 0 0 0 0 0 <br>B 1 0 1 1 1 0 0 0 <br>C 0 1 0 0 1 0 0 0 <br>D 0 1 0 0 1 0 0 0 <br>E 0 1 1 1 0 0 0 0 <br>F 0 0 0 0 0 0 1 0 <br>G 0 0 0 0 0 1 0 1 <br>H 0 0 0 0 0 0 1 0<br></code></pre></td></tr></table></figure><p>输入数据中至少包括两个不连通的牧区。</p><h4 id="输出格式-2">输出格式</h4><p>只有一行，包括一个实数，表示所求答案。</p><p>数字保留六位小数。</p><h4 id="数据范围">数据范围</h4><p>1≤N≤1501≤N≤150, 0≤X,Y≤1050≤X,Y≤105</p><h4 id="输入样例：">输入样例：</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">8<br>10 10<br>15 10<br>20 10<br>15 15<br>20 15<br>30 15<br>25 10<br>30 10<br>01000000<br>10111000<br>01001000<br>01001000<br>01110000<br>00000010<br>00000101<br>00000010<br></code></pre></td></tr></table></figure><h4 id="输出样例：">输出样例：</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">22.071068<br></code></pre></td></tr></table></figure><h3 id="解决-2">解决</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">import</span> java.util.*;<br><span class="hljs-keyword">class</span> <span class="hljs-title class_">PII</span>&#123;<br>    <span class="hljs-type">int</span> x,y;<br>    <span class="hljs-keyword">public</span> <span class="hljs-title function_">PII</span><span class="hljs-params">(<span class="hljs-type">int</span> x,<span class="hljs-type">int</span> y)</span>&#123;<br>        <span class="hljs-built_in">this</span>.x=x;<br>        <span class="hljs-built_in">this</span>.y=y;<br>    &#125;<br>&#125;<br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Main</span>&#123;<br>    <span class="hljs-keyword">static</span> <span class="hljs-type">int</span> N=<span class="hljs-number">155</span>,INF=(<span class="hljs-type">int</span>)<span class="hljs-number">1e20</span>;<br>    <span class="hljs-keyword">static</span> <span class="hljs-type">int</span> n;<br>    <span class="hljs-keyword">static</span> PII[]q=<span class="hljs-keyword">new</span> <span class="hljs-title class_">PII</span>[N];<br>    <span class="hljs-keyword">static</span> <span class="hljs-type">char</span>[][]g=<span class="hljs-keyword">new</span> <span class="hljs-title class_">char</span>[N][N];<br>    <span class="hljs-keyword">static</span> <span class="hljs-type">double</span>[][]dist=<span class="hljs-keyword">new</span> <span class="hljs-title class_">double</span>[N][N];<br>    <span class="hljs-keyword">static</span> <span class="hljs-type">double</span>[]maxd=<span class="hljs-keyword">new</span> <span class="hljs-title class_">double</span>[N];<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-type">double</span> <span class="hljs-title function_">get_dist</span><span class="hljs-params">(PII i,PII j)</span>&#123;<br>        <span class="hljs-type">int</span> dx=i.x-j.x,dy=i.y-j.y;<br>        <span class="hljs-keyword">return</span> (<span class="hljs-type">double</span>)Math.sqrt(dx*dx+dy*dy);<br>    &#125;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">floyd</span><span class="hljs-params">()</span>&#123;<br>        <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> k=<span class="hljs-number">1</span>;k&lt;=n;k++)<br>            <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)<br>                <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> j=<span class="hljs-number">1</span>;j&lt;=n;j++)&#123;<br>                    dist[i][j]=Math.min(dist[i][j],dist[i][k]+dist[k][j]);<br>                &#125;<br>    &#125;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[]args)</span>&#123;<br>        Scanner sc=<span class="hljs-keyword">new</span> <span class="hljs-title class_">Scanner</span>(System.in);<br>        n=sc.nextInt();<br>        <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)&#123;<br>            <span class="hljs-type">int</span> x=sc.nextInt();<br>            <span class="hljs-type">int</span> y=sc.nextInt();<br>            q[i]=<span class="hljs-keyword">new</span> <span class="hljs-title class_">PII</span>(x,y);<br>        &#125;<br>        <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)&#123;<br>            String s=sc.next();<br>            <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> j=<span class="hljs-number">1</span>;j&lt;=n;j++)&#123;<br>                g[i][j]=s.charAt(j-<span class="hljs-number">1</span>);<br>            &#125;<br>        &#125;<br>        <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)&#123;<br>            <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> j=<span class="hljs-number">1</span>;j&lt;=n;j++)&#123;<br>                <span class="hljs-keyword">if</span>(i!=j)&#123;<br>                    <span class="hljs-keyword">if</span>(g[i][j]==<span class="hljs-string">&#x27;1&#x27;</span>)dist[i][j]=get_dist(q[i],q[j]);<br>                    <span class="hljs-keyword">else</span> dist[i][j]=INF;<br>                &#125;<br>            &#125;<br>        &#125;<br>        floyd();<br>        <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)&#123;<br>            <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> j=<span class="hljs-number">1</span>;j&lt;=n;j++)&#123;<br>                <span class="hljs-keyword">if</span>(dist[i][j]&lt;INF)<br>                    maxd[i]=Math.max(maxd[i],dist[i][j]);<br>            &#125;<br>        &#125;<br>        <span class="hljs-type">double</span> res1=<span class="hljs-number">0</span>;<br>        <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)res1=Math.max(res1,maxd[i]);<br>        <span class="hljs-type">double</span> res2=INF;<br>        <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)&#123;<br>            <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> j=<span class="hljs-number">1</span>;j&lt;=n;j++)&#123;<br>                <span class="hljs-keyword">if</span>(dist[i][j]&gt;=INF)&#123;<br>                    res2=Math.min(res2,get_dist(q[i],q[j])+maxd[i]+maxd[j]);<br>                &#125;<br>            &#125;<br>        &#125;<br>        System.out.printf(<span class="hljs-string">&quot;%.6f&quot;</span>,Math.max(res1,res2));<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> program </category>
          
          <category> 算法模板 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Floyd </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>前缀和与差分</title>
      <link href="/posts/77a88a6b.html"/>
      <url>/posts/77a88a6b.html</url>
      
        <content type="html"><![CDATA[<h3 id="一维前缀和">一维前缀和</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">import</span> java.util.Scanner;<br><span class="hljs-comment">// 1:无需package</span><br><span class="hljs-comment">// 2: 类名必须Main, 不可修改</span><br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Main</span> &#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> &#123;<br>        <span class="hljs-type">Scanner</span> <span class="hljs-variable">sc</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Scanner</span>(System.in);<br>        <span class="hljs-type">int</span> n=sc.nextInt();<br>        <span class="hljs-type">int</span> q=sc.nextInt();<br>        <span class="hljs-type">int</span> []a=<span class="hljs-keyword">new</span> <span class="hljs-title class_">int</span>[n+<span class="hljs-number">1</span>];<br>        <span class="hljs-type">int</span> []sum=<span class="hljs-keyword">new</span> <span class="hljs-title class_">int</span>[n+<span class="hljs-number">1</span>];<br>        <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)&#123;<br>          a[i]=sc.nextInt();<br>          sum[i]=sum[i-<span class="hljs-number">1</span>]+a[i];<br>        &#125;<br>        <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;q;i++)&#123;<br>        <span class="hljs-type">int</span> l=sc.nextInt();<br>        <span class="hljs-type">int</span> r=sc.nextInt();<br>        System.out.println(sum[r]-sum[l-<span class="hljs-number">1</span>]);<br>        &#125;<br>        sc.close();<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="二维前缀和">二维前缀和</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">import java.util.Scanner;<br>// 1:无需package<br>// 2: 类名必须Main, 不可修改<br><br>public class Main &#123;<br>    public static void main(String[] args) &#123;<br>        Scanner scan = new Scanner(System.in);<br>        int n=scan.nextInt();<br>        int m=scan.nextInt();<br>        int q=scan.nextInt();<br>        int [][]a=new int[n+1][m+1];<br>        int [][]sum=new int[n+1][m+1];<br>        for(int i=1;i&lt;=n;i++)&#123;<br>          for(int j=1;j&lt;=m;j++)&#123;<br>            a[i][j]=scan.nextInt();<br>            sum[i][j]=sum[i-1][j]+sum[i][j-1]-sum[i-1][j-1]+a[i][j];<br>          &#125;<br>        &#125;<br>        for(int i=0;i&lt;q;i++)&#123;<br>          int x1=scan.nextInt();<br>          int y1=scan.nextInt();<br>          int x2=scan.nextInt();<br>          int y2=scan.nextInt();<br>          int res=sum[x2][y2]-sum[x1-1][y2]-sum[x2][y1-1]+sum[x1-1][y1-1];<br>          System.out.println(res);<br>        &#125;<br>        scan.close();<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="一维差分">一维差分</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">import java.util.Scanner;<br>// 1:无需package<br>// 2: 类名必须Main, 不可修改<br><br>public class Main &#123;<br>    public static void main(String[] args) &#123;<br>        Scanner scan = new Scanner(System.in);<br>        int n=scan.nextInt();<br>        int q=scan.nextInt();<br>        int []a=new int[n+10];<br>        int []b=new int[n+10];<br>        int []c=new int[n+10];<br>        for(int i=1;i&lt;=n;i++)&#123;<br>          a[i]=scan.nextInt();<br>          b[i]=a[i]-a[i-1];<br>        &#125;<br>        for(int i=1;i&lt;=q;i++)&#123;<br>          int l=scan.nextInt();<br>          int r=scan.nextInt();<br>          int d=scan.nextInt();<br>          b[l]+=d;<br>          b[r+1]-=d;<br>        &#125;<br>        for(int i=1;i&lt;=n;i++)&#123;<br>          c[i]=c[i-1]+b[i];<br>        &#125;<br>        for(int i=1;i&lt;=n;i++)<br>          System.out.print(c[i]+&quot; &quot;);<br>        scan.close();<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="二维差分">二维差分</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">import java.util.Scanner;<br>// 1:无需package<br>// 2: 类名必须Main, 不可修改<br><br>public class Main &#123;<br>    public static void main(String[] args) &#123;<br>        Scanner scan = new Scanner(System.in);<br>        int n=scan.nextInt();<br>        int m=scan.nextInt();<br>        int q=scan.nextInt();<br>        int [][]a=new int[n+10][m+10];<br>        int [][]b=new int[n+10][m+10];<br>        int [][]c=new int[n+10][m+10];<br><br>        for(int i=1;i&lt;=n;i++)&#123;<br>          for(int j=1;j&lt;=m;j++)&#123;<br>              a[i][j]=scan.nextInt();<br>              b[i][j]=a[i][j]-a[i-1][j]-a[i][j-1]+a[i-1][j-1];<br>          &#125;<br>        &#125;<br>        for(int i=1;i&lt;=q;i++)&#123;<br>          int x1=scan.nextInt();<br>          int y1=scan.nextInt();<br>          int x2=scan.nextInt();<br>          int y2=scan.nextInt();<br>          int d=scan.nextInt();<br>          b[x1][y1]+=d;<br>          b[x2+1][y1]-=d;<br>          b[x1][y2+1]-=d;<br>          b[x2+1][y2+1]+=d;<br>        &#125;<br>        for(int i=1;i&lt;=n;i++)&#123;<br>          for(int j=1;j&lt;=m;j++)&#123;<br>            b[i][j]=b[i][j]+b[i][j-1]+b[i-1][j]-b[i-1][j-1];<br>          &#125;<br>        &#125;<br>        for(int i=1;i&lt;=n;i++)&#123;<br>          for(int j=1;j&lt;=m;j++)&#123;<br>            System.out.print(b[i][j]+&quot; &quot;);<br>          &#125;<br>          System.out.println();<br>        &#125;<br>        scan.close();<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> program </category>
          
          <category> 算法模板 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前缀和 </tag>
            
            <tag> 差分 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Dijkstra</title>
      <link href="/posts/9c98f56c.html"/>
      <url>/posts/9c98f56c.html</url>
      
        <content type="html"><![CDATA[<p><strong>Dijkstra</strong> <a href="https://www.acwing.com/problem/content/1128/" title="最小花费">最小花费</a></p><h5 id="题目描述">题目描述</h5><p>在 n 个人中，某些人的银行账号之间可以互相转账。这些人之间转账的手续费各不相同。给定这些人之间转账时需要从转账金额里扣除百分之几的手续费，请问 A 最少需要多少钱使得转账后 B 收到 100 元。</p><h5 id="输入格式">输入格式</h5><p>第一行输入两个正整数 n,m，分别表示总人数和可以互相转账的人的对数。以下 m 行每行输入三个正整数 x,y,z，表示标号为 x 的人和标号为 y 的人之间互相转账需要扣除 z% 的手续费 ( z&lt;100 )。最后一行输入两个正整数 A,B。数据保证 A 与 B 之间可以直接或间接地转账。**</p><h5 id="输出格式">输出格式</h5><p>输出 A 使得 B 到账 100 元最少需要的总费用。 精确到小数点后 8 位。</p><h5 id="数据范围">数据范围</h5><p>1≤n≤2000, m≤105</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">import</span> java.util.*;<br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Main</span>&#123;<br>    <span class="hljs-keyword">static</span> <span class="hljs-type">int</span> N=<span class="hljs-number">2010</span>;<br>    <span class="hljs-keyword">static</span> <span class="hljs-type">int</span> M=<span class="hljs-number">100010</span>;<br>    <span class="hljs-keyword">static</span> <span class="hljs-type">int</span> INF=<span class="hljs-number">0x3f3f3f3f</span>;<br>    <span class="hljs-keyword">static</span> <span class="hljs-type">int</span> n,m,idx;<br>    <span class="hljs-keyword">static</span> <span class="hljs-type">int</span> A,B;<br>    <span class="hljs-keyword">static</span> <span class="hljs-type">int</span> []h=<span class="hljs-keyword">new</span> <span class="hljs-title class_">int</span>[N],e=<span class="hljs-keyword">new</span> <span class="hljs-title class_">int</span>[M*<span class="hljs-number">2</span>];<br>    <span class="hljs-keyword">static</span> <span class="hljs-type">int</span> []ne=<span class="hljs-keyword">new</span> <span class="hljs-title class_">int</span>[M*<span class="hljs-number">2</span>];<br>    <span class="hljs-keyword">static</span> <span class="hljs-type">double</span> []w=<span class="hljs-keyword">new</span> <span class="hljs-title class_">double</span>[M*<span class="hljs-number">2</span>];<br>    <span class="hljs-keyword">static</span> <span class="hljs-type">double</span> []dist=<span class="hljs-keyword">new</span> <span class="hljs-title class_">double</span>[N];<br>    <span class="hljs-keyword">static</span> <span class="hljs-type">boolean</span>[]st=<span class="hljs-keyword">new</span> <span class="hljs-title class_">boolean</span>[N];<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">add</span><span class="hljs-params">(<span class="hljs-type">int</span> a,<span class="hljs-type">int</span> b,<span class="hljs-type">double</span> c)</span>&#123;<br>        e[idx]=b;<br>        w[idx]=c;<br>        ne[idx]=h[a];<br>        h[a]=idx++;<br>    &#125;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-type">double</span> <span class="hljs-title function_">dj</span><span class="hljs-params">()</span>&#123;<br>        Arrays.fill(dist,INF);<br>        dist[A]=<span class="hljs-number">100</span>;<br>        PriorityQueue&lt;PII&gt;q=<span class="hljs-keyword">new</span> <span class="hljs-title class_">PriorityQueue</span>&lt;&gt;();<br>        q.offer(<span class="hljs-keyword">new</span> <span class="hljs-title class_">PII</span>(A,<span class="hljs-number">100</span>));<br>        <span class="hljs-keyword">while</span>(q.size()!=<span class="hljs-number">0</span>)&#123;<br>            PII t=q.poll();<br>            <span class="hljs-type">int</span> num=t.num;<br>            <span class="hljs-type">double</span> distence=t.distence;<br>            <span class="hljs-keyword">if</span>(st[num])<span class="hljs-keyword">continue</span>;<br>            st[num]=<span class="hljs-literal">true</span>;<br>            <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=h[num];i!=-<span class="hljs-number">1</span>;i=ne[i])&#123;<br>                <span class="hljs-type">int</span> j=e[i];<br>                <span class="hljs-keyword">if</span>(dist[j]&gt;distence/w[i])&#123;<br>                    dist[j]=distence/w[i];<br>                    q.offer(<span class="hljs-keyword">new</span> <span class="hljs-title class_">PII</span>(j,dist[j]));<br>                &#125;<br>            &#125;<br>        &#125;<br>        <span class="hljs-keyword">return</span> dist[B];<br>    &#125;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[]args)</span>&#123;<br>        Scanner scan=<span class="hljs-keyword">new</span> <span class="hljs-title class_">Scanner</span>(System.in);<br>        n=scan.nextInt();<br>        m=scan.nextInt();<br>        Arrays.fill(h,-<span class="hljs-number">1</span>);<br>        <span class="hljs-keyword">while</span>(m--&gt;<span class="hljs-number">0</span>)&#123;<br>            <span class="hljs-type">int</span> a=scan.nextInt();<br>            <span class="hljs-type">int</span> b=scan.nextInt();<br>            <span class="hljs-type">int</span> c=scan.nextInt();<br>            <span class="hljs-type">double</span> w=(<span class="hljs-number">1</span>-(<span class="hljs-type">double</span>)c/<span class="hljs-number">100</span>);<br>            add(a,b,w);<br>            add(b,a,w);<br>        &#125;<br>        A=scan.nextInt();<br>        B=scan.nextInt();<br>        <span class="hljs-type">double</span> t=dj();<br>        System.out.printf(<span class="hljs-string">&quot;%.8f&quot;</span>,t);<br>    &#125;<br>&#125;<br><span class="hljs-keyword">class</span> <span class="hljs-title class_">PII</span> <span class="hljs-keyword">implements</span> <span class="hljs-title class_">Comparable</span>&lt;PII&gt;&#123;<br>    <span class="hljs-type">int</span> num;<br>    <span class="hljs-type">double</span> distence;<br>    <span class="hljs-keyword">public</span> <span class="hljs-title function_">PII</span><span class="hljs-params">(<span class="hljs-type">int</span> num,<span class="hljs-type">double</span> distence)</span>&#123;<br>        <span class="hljs-built_in">this</span>.num=num;<br>        <span class="hljs-built_in">this</span>.distence=distence;<br>    &#125;<br>    <span class="hljs-keyword">public</span> <span class="hljs-type">int</span> <span class="hljs-title function_">compareTo</span><span class="hljs-params">(PII o)</span>&#123;<br>        <span class="hljs-keyword">return</span> Double.compare(distence,o.distence);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> program </category>
          
          <category> 算法模板 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 最短路 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>树状数组</title>
      <link href="/posts/59a0de58.html"/>
      <url>/posts/59a0de58.html</url>
      
        <content type="html"><![CDATA[<h3 id="树状数组">树状数组</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">import</span> java.util.*;<br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">ttree</span> &#123;<br>    <span class="hljs-keyword">static</span> <span class="hljs-type">int</span> n,s;<br>    <span class="hljs-keyword">static</span> <span class="hljs-type">int</span> []a;<br>    <span class="hljs-keyword">static</span> <span class="hljs-type">long</span> res=<span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">static</span> List&lt;Integer&gt;[]g;<br>    <span class="hljs-keyword">static</span> <span class="hljs-type">int</span>[]tr;<br>    <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">modify</span><span class="hljs-params">(<span class="hljs-type">int</span> i,<span class="hljs-type">int</span> val)</span> &#123;<br>        <span class="hljs-keyword">while</span>(i&lt;=n) &#123;<br>            tr[i]+=val;<br>            i+=i&amp;-i;<br>        &#125;<br>    &#125;<br>    <span class="hljs-keyword">static</span> <span class="hljs-type">int</span> <span class="hljs-title function_">query</span><span class="hljs-params">(<span class="hljs-type">int</span> i)</span> &#123;<br>        <span class="hljs-type">int</span> sum=<span class="hljs-number">0</span>;<br>        <span class="hljs-keyword">while</span>(i&gt;<span class="hljs-number">0</span>) &#123;<br>            sum+=tr[i];<br>            i-=i&amp;-i;<br>        &#125;<br>        <span class="hljs-keyword">return</span> sum;<br>    &#125;<br>    <span class="hljs-keyword">static</span> <span class="hljs-type">int</span> <span class="hljs-title function_">sum</span><span class="hljs-params">(<span class="hljs-type">int</span> i)</span> &#123;<br>        <span class="hljs-keyword">return</span> query(n)-query(i);<br>    &#125;<br>    <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">dfs</span><span class="hljs-params">(<span class="hljs-type">int</span> u,<span class="hljs-type">int</span> fa)</span> &#123;<br>        modify(a[u],<span class="hljs-number">1</span>);<br>        <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> v:g[u]) &#123;<br>            <span class="hljs-keyword">if</span>(v!=fa) &#123;<br>                dfs(v,u);<br>            &#125;<br>        &#125;<br>        <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> k=<span class="hljs-number">2</span>;k*a[u]&lt;=n;k++) &#123;<br>            <span class="hljs-type">int</span> t=k*a[u];<br>            res-=query(t)-query(t-<span class="hljs-number">1</span>);<br>        &#125;<br>        res+=sum(a[u]);<br>        modify(a[u], -<span class="hljs-number">1</span>);<br>    &#125;<br><span class="hljs-comment">//  static void dfs(int u, int p) &#123;</span><br><span class="hljs-comment">//      int before = t0.query(a[u] - 1); // 进入 u 前，&lt;a[u] 的节点数</span><br><span class="hljs-comment">//      t0.add(a[u], 1); // 记录 u</span><br><span class="hljs-comment">//      for (int v : g[u]) &#123;</span><br><span class="hljs-comment">//          if (v != p) &#123;</span><br><span class="hljs-comment">//              dfs(v, u); // 递归处理子节点</span><br><span class="hljs-comment">//          &#125;</span><br><span class="hljs-comment">//      &#125;</span><br><span class="hljs-comment">//      int after = t0.query(a[u] - 1); // 当前 &lt;a[u] 的节点数（包括子树）</span><br><span class="hljs-comment">//      res += (after - before); // 新增的 &lt;a[u] 的节点（即 u 的子节点中满足条件的）</span><br><span class="hljs-comment">//      t0.add(a[u], -1); // 回溯</span><br><span class="hljs-comment">//  &#125;</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> &#123;<br>        Scanner scan=<span class="hljs-keyword">new</span> <span class="hljs-title class_">Scanner</span>(System.in);<br>        n=scan.nextInt();<br>        s=scan.nextInt();<br>        a=<span class="hljs-keyword">new</span> <span class="hljs-title class_">int</span>[n+<span class="hljs-number">1</span>];<br>        g=<span class="hljs-keyword">new</span> <span class="hljs-title class_">ArrayList</span>[n+<span class="hljs-number">1</span>];<br>        tr=<span class="hljs-keyword">new</span> <span class="hljs-title class_">int</span>[n+<span class="hljs-number">1</span>];<br>        Arrays.fill(tr,<span class="hljs-number">0</span>);<br>        <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++) &#123;<br>            a[i]=scan.nextInt();<br>            g[i]=<span class="hljs-keyword">new</span> <span class="hljs-title class_">ArrayList</span>&lt;&gt;();<br>        &#125;<br>        <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;n-<span class="hljs-number">1</span>;i++) &#123;<br>            <span class="hljs-type">int</span> u=scan.nextInt();<br>            <span class="hljs-type">int</span> v=scan.nextInt();<br>            g[u].add(v);<br>            g[v].add(u);<br>        &#125;<br>        dfs(s,-<span class="hljs-number">1</span>);<br>        System.out.println(res);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="楼兰壁画">楼兰壁画</h3><p><a href="https://www.acwing.com/problem/content/243/" title="树状数组">树状数组</a></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">import</span> java.util.*;<br><span class="hljs-keyword">import</span> java.io.*;<br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">Tree</span> &#123;<br>    <span class="hljs-type">int</span>[] tree;<br>    <span class="hljs-type">int</span> N;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-title function_">Tree</span><span class="hljs-params">(<span class="hljs-type">int</span> N)</span> &#123;<br>        <span class="hljs-built_in">this</span>.N = N;<br>        tree = <span class="hljs-keyword">new</span> <span class="hljs-title class_">int</span>[N + <span class="hljs-number">1</span>];<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-type">int</span> <span class="hljs-title function_">lowBit</span><span class="hljs-params">(<span class="hljs-type">int</span> i)</span> &#123;<br>        <span class="hljs-keyword">return</span> i &amp; -i;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">add</span><span class="hljs-params">(<span class="hljs-type">int</span> i, <span class="hljs-type">int</span> val)</span> &#123;<br>        <span class="hljs-keyword">while</span> (i &lt;= N) &#123;<br>            tree[i] += val;<br>            i += lowBit(i);<br>        &#125;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-type">int</span> <span class="hljs-title function_">query</span><span class="hljs-params">(<span class="hljs-type">int</span> i)</span> &#123;<br>        <span class="hljs-type">int</span> <span class="hljs-variable">res</span> <span class="hljs-operator">=</span> <span class="hljs-number">0</span>;<br>        <span class="hljs-keyword">while</span> (i &gt; <span class="hljs-number">0</span>) &#123;<br>            res += tree[i];<br>            i -= lowBit(i);<br>        &#125;<br>        <span class="hljs-keyword">return</span> res;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-type">int</span> <span class="hljs-title function_">sum</span><span class="hljs-params">(<span class="hljs-type">int</span> i)</span> &#123;<br>        <span class="hljs-keyword">return</span> query(N) - query(i);<br>    &#125;<br>&#125;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Main</span> &#123;<br>    <span class="hljs-keyword">static</span> <span class="hljs-type">int</span> <span class="hljs-variable">N</span> <span class="hljs-operator">=</span> (<span class="hljs-type">int</span>) <span class="hljs-number">2e5</span> + <span class="hljs-number">10</span>;<br>    <span class="hljs-keyword">static</span> <span class="hljs-type">int</span> n;<br>    <span class="hljs-keyword">static</span> <span class="hljs-type">int</span>[] a = <span class="hljs-keyword">new</span> <span class="hljs-title class_">int</span>[N];<br>    <span class="hljs-keyword">static</span> <span class="hljs-type">int</span>[] up = <span class="hljs-keyword">new</span> <span class="hljs-title class_">int</span>[N];<br>    <span class="hljs-keyword">static</span> <span class="hljs-type">int</span>[] down = <span class="hljs-keyword">new</span> <span class="hljs-title class_">int</span>[N];<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> &#123;<br>        <span class="hljs-type">Scanner</span> <span class="hljs-variable">sc</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Scanner</span>(System.in);<br>        n = sc.nextInt();<br>        <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> <span class="hljs-variable">i</span> <span class="hljs-operator">=</span> <span class="hljs-number">1</span>; i &lt;= n; i++) &#123;<br>            a[i] = sc.nextInt();<br>        &#125;<br><br>        <span class="hljs-type">Tree</span> <span class="hljs-variable">tree0</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Tree</span>(N);<br>        <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> <span class="hljs-variable">i</span> <span class="hljs-operator">=</span> <span class="hljs-number">1</span>; i &lt;= n; i++) &#123;<br>            <span class="hljs-type">int</span> <span class="hljs-variable">y</span> <span class="hljs-operator">=</span> a[i];<br>            up[i] = tree0.sum(y); <span class="hljs-comment">// 右边比当前元素大的数的个数</span><br>            down[i] = tree0.query(y - <span class="hljs-number">1</span>); <span class="hljs-comment">// 左边比当前元素小的数的个数</span><br>            tree0.add(y, <span class="hljs-number">1</span>);<br>        &#125;<br><br>        Arrays.fill(tree0.tree, <span class="hljs-number">0</span>); <span class="hljs-comment">// 清空树状数组</span><br><br>        <span class="hljs-type">long</span> <span class="hljs-variable">res1</span> <span class="hljs-operator">=</span> <span class="hljs-number">0</span>, res2 = <span class="hljs-number">0</span>;<br>        <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> <span class="hljs-variable">i</span> <span class="hljs-operator">=</span> n; i &gt;= <span class="hljs-number">1</span>; i--) &#123;<br>            <span class="hljs-type">int</span> <span class="hljs-variable">y</span> <span class="hljs-operator">=</span> a[i];<br>            res1 += up[i] * (<span class="hljs-type">long</span>) tree0.sum(y); <span class="hljs-comment">// 右边比当前元素大的数的个数乘以左边比当前元素大的数的个数</span><br>            res2 += down[i] * (<span class="hljs-type">long</span>) tree0.query(y - <span class="hljs-number">1</span>); <span class="hljs-comment">// 左边比当前元素小的数的个数乘以右边比当前元素小的数的个数</span><br>            tree0.add(y, <span class="hljs-number">1</span>);<br>        &#125;<br><br>        System.out.println(res1 + <span class="hljs-string">&quot; &quot;</span> + res2);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p><a href="https://www.acwing.com/problem/content/248/" title="树状数组">一个树状数组问题</a></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">import</span> java.io.*;<br><span class="hljs-keyword">import</span> java.util.*;<br><span class="hljs-keyword">class</span> <span class="hljs-title class_">Tree</span>&#123;<br>    <span class="hljs-type">long</span>[]tree;<br>    <span class="hljs-type">int</span> N;<br>    <span class="hljs-keyword">public</span> <span class="hljs-title function_">Tree</span><span class="hljs-params">(<span class="hljs-type">int</span> N)</span>&#123;<br>        <span class="hljs-built_in">this</span>.N=N;<br>        tree=<span class="hljs-keyword">new</span> <span class="hljs-title class_">long</span>[N+<span class="hljs-number">1</span>];<br>    &#125;<br>    <span class="hljs-keyword">public</span> <span class="hljs-type">int</span> <span class="hljs-title function_">lowBit</span><span class="hljs-params">(<span class="hljs-type">int</span> i)</span>&#123;<br>        <span class="hljs-keyword">return</span> i&amp;-i;<br>    &#125;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">add</span><span class="hljs-params">(<span class="hljs-type">int</span> i,<span class="hljs-type">int</span> v)</span>&#123;<br>        <span class="hljs-keyword">while</span>(i&lt;=N)&#123;<br>        tree[i]+=v;<br>        i+=lowBit(i);<br>        &#125;<br>    &#125;<br>    <span class="hljs-keyword">public</span> <span class="hljs-type">long</span> <span class="hljs-title function_">query</span><span class="hljs-params">(<span class="hljs-type">int</span> i)</span>&#123;<br>        <span class="hljs-type">long</span> res=<span class="hljs-number">0</span>;<br>        <span class="hljs-keyword">while</span>(i&gt;<span class="hljs-number">0</span>)&#123;<br>        res+=tree[i];<br>        i-=lowBit(i);<br>        &#125;<br>        <span class="hljs-keyword">return</span> res;<br>    &#125;<br>    <span class="hljs-keyword">public</span> <span class="hljs-type">long</span> <span class="hljs-title function_">sum</span><span class="hljs-params">(<span class="hljs-type">int</span> i)</span>&#123;<br>        <span class="hljs-keyword">return</span> query(N)-query(i);<br>    &#125;<br>&#125;<br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Main</span>&#123;<br>    <span class="hljs-keyword">static</span> <span class="hljs-type">int</span> N=(<span class="hljs-type">int</span>)<span class="hljs-number">1e5</span>+<span class="hljs-number">10</span>;<br>    <span class="hljs-keyword">static</span> <span class="hljs-type">int</span> []a=<span class="hljs-keyword">new</span> <span class="hljs-title class_">int</span>[N];<br>    <span class="hljs-keyword">static</span> <span class="hljs-type">int</span> n,m;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span>&#123;<br>        Scanner sc=<span class="hljs-keyword">new</span> <span class="hljs-title class_">Scanner</span>(System.in);<br>        <span class="hljs-type">Tree</span> <span class="hljs-variable">tree0</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Tree</span>(N);<br>        n=sc.nextInt();<br>        m=sc.nextInt();<br>        <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)&#123;<br>            a[i]=sc.nextInt();<br>            tree0.add(i,a[i]-a[i-<span class="hljs-number">1</span>]);<br>        &#125;<br>        <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;m;i++)&#123;<br>            String s=sc.next();<br>            <span class="hljs-keyword">if</span>(s.equals(<span class="hljs-string">&quot;Q&quot;</span>))&#123;<br>                <span class="hljs-type">int</span> x=sc.nextInt();<br>                System.out.println(tree0.query(x));<br>            &#125;<span class="hljs-keyword">else</span>&#123;<br>                <span class="hljs-type">int</span> l=sc.nextInt();<br>                <span class="hljs-type">int</span> r=sc.nextInt();<br>                <span class="hljs-type">int</span> d=sc.nextInt();<br>                tree0.add(l,d);<br>                tree0.add(r+<span class="hljs-number">1</span>,-d);<br>            &#125;<br>        &#125;<br>    &#125; <br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> program </category>
          
          <category> 算法模板 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 树状数组 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SPFA</title>
      <link href="/posts/33b8c865.html"/>
      <url>/posts/33b8c865.html</url>
      
        <content type="html"><![CDATA[<p>给定一张<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">n</span></span></span></span>个点m条边的有向图，该图可以有自环与重边。</p><p>你需要判断从 1 号点出发，图中是否存在负权回路，存在输出 Yes；不存在输出 No。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">import</span> java.util.*;<br><span class="hljs-keyword">import</span> java.io.*;<br><span class="hljs-comment">// 1:无需package</span><br><span class="hljs-comment">// 2: 类名必须Main, 不可修改</span><br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Main</span> &#123;<br>    <span class="hljs-keyword">static</span> <span class="hljs-type">int</span> N=<span class="hljs-number">2010</span>;<br>    <span class="hljs-keyword">static</span> <span class="hljs-type">int</span> M=(<span class="hljs-type">int</span>)<span class="hljs-number">1e4</span>+<span class="hljs-number">10</span>;<br>    <span class="hljs-keyword">static</span> <span class="hljs-type">long</span> INF=<span class="hljs-number">0x3f3f3f3f3f3f3f3fL</span>;<br>    <span class="hljs-keyword">static</span> <span class="hljs-type">int</span>[]h=<span class="hljs-keyword">new</span> <span class="hljs-title class_">int</span>[N];<br>    <span class="hljs-keyword">static</span> <span class="hljs-type">long</span>[]dist=<span class="hljs-keyword">new</span> <span class="hljs-title class_">long</span>[N];<br>    <span class="hljs-keyword">static</span> <span class="hljs-type">int</span>[]e=<span class="hljs-keyword">new</span> <span class="hljs-title class_">int</span>[M*<span class="hljs-number">2</span>],ne=<span class="hljs-keyword">new</span> <span class="hljs-title class_">int</span>[M*<span class="hljs-number">2</span>];<br>    <span class="hljs-keyword">static</span> <span class="hljs-type">int</span>[]w=<span class="hljs-keyword">new</span> <span class="hljs-title class_">int</span>[M*<span class="hljs-number">2</span>];<br>    <span class="hljs-keyword">static</span> <span class="hljs-type">int</span>[]cnt=<span class="hljs-keyword">new</span> <span class="hljs-title class_">int</span>[M*<span class="hljs-number">2</span>];<br>    <span class="hljs-keyword">static</span> <span class="hljs-type">boolean</span>[]st=<span class="hljs-keyword">new</span> <span class="hljs-title class_">boolean</span>[N];<br>    <span class="hljs-keyword">static</span> <span class="hljs-type">int</span> idx,n,m;<br>    <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">add</span><span class="hljs-params">(<span class="hljs-type">int</span> a,<span class="hljs-type">int</span> b,<span class="hljs-type">int</span> c)</span>&#123;<br>      e[idx]=b;<br>      w[idx]=c;<br>      ne[idx]=h[a];<br>      h[a]=idx++;<br>    &#125;<br>    <span class="hljs-keyword">static</span> <span class="hljs-type">boolean</span> <span class="hljs-title function_">spfa</span><span class="hljs-params">()</span>&#123;<br>      Arrays.fill(st,<span class="hljs-literal">false</span>);<br>      Arrays.fill(dist,INF);<br>      dist[<span class="hljs-number">1</span>]=<span class="hljs-number">0</span>;<br>      Queue&lt;Integer&gt;q=<span class="hljs-keyword">new</span> <span class="hljs-title class_">LinkedList</span>&lt;&gt;();<br>      st[<span class="hljs-number">1</span>]=<span class="hljs-literal">true</span>;<br>      q.offer(<span class="hljs-number">1</span>);<br>      <span class="hljs-keyword">while</span>(!q.isEmpty())&#123;<br>        <span class="hljs-type">int</span> t=q.poll();<br>        st[t]=<span class="hljs-literal">false</span>;<br>        <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=h[t];i!=-<span class="hljs-number">1</span>;i=ne[i])&#123;<br>          <span class="hljs-type">int</span> j=e[i];<br>          <span class="hljs-keyword">if</span>(dist[j]&gt;dist[t]+w[i])&#123;<br>            dist[j]=dist[t]+w[i];<br>            cnt[j]=cnt[t]+<span class="hljs-number">1</span>;<br>            <span class="hljs-keyword">if</span>(cnt[j]&gt;=n)<span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;<br>            <span class="hljs-keyword">if</span>(!st[j])&#123;<br>              q.offer(j);<br>              st[j]=<span class="hljs-literal">true</span>;<br>            &#125;<br>          &#125;<br>        &#125;<br>      &#125;<br>      <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;<br>    &#125;<br>    <span class="hljs-keyword">static</span> BufferedReader in=<span class="hljs-keyword">new</span> <span class="hljs-title class_">BufferedReader</span>(<span class="hljs-keyword">new</span> <span class="hljs-title class_">InputStreamReader</span>(System.in));<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> <span class="hljs-keyword">throws</span> IOException&#123;<br>        Arrays.fill(h,-<span class="hljs-number">1</span>);<br>        String[]ss=in.readLine().split(<span class="hljs-string">&quot; &quot;</span>);<br>        n=Integer.parseInt(ss[<span class="hljs-number">0</span>]);<br>        m=Integer.parseInt(ss[<span class="hljs-number">1</span>]);<br>        <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=m;i++)&#123;<br>          String[]s=in.readLine().split(<span class="hljs-string">&quot; &quot;</span>);<br>          <span class="hljs-type">int</span> a=Integer.parseInt(s[<span class="hljs-number">0</span>]);<br>          <span class="hljs-type">int</span> b=Integer.parseInt(s[<span class="hljs-number">1</span>]);<br>          <span class="hljs-type">int</span> c=Integer.parseInt(s[<span class="hljs-number">2</span>]);<br>          add(a,b,c);<br>        &#125;<br>        <span class="hljs-keyword">if</span>(spfa())System.out.println(<span class="hljs-string">&quot;Yes&quot;</span>);<br>        <span class="hljs-keyword">else</span> System.out.println(<span class="hljs-string">&quot;No&quot;</span>);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> program </category>
          
          <category> 算法模板 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> spfa </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>梯度下降优化</title>
      <link href="/posts/2d61ce16.html"/>
      <url>/posts/2d61ce16.html</url>
      
        <content type="html"><![CDATA[<h2 id="梯度下降优化">梯度下降优化</h2><h3 id="1、归一化-Normalization">1、归一化 Normalization</h3><h4 id="1-1、归一化目的">1.1、归一化目的</h4><p>梯度下降的原理和应用，我们已经在前面课程中进行了学习，大家仔细观察下图。</p><p>![]()</p><p>不同方向的<strong>陡峭度</strong>是不一样的，即不同维度的数值大小是不同。也就是说梯度下降的快慢是不同的：</p><p>如果维度多了，就是<strong>超平面</strong>（了解一下霍金所说的宇宙十一维空间），很难画出来了，感受一下下面这张图的空间维度情况。</p><p>![]()</p><p>如果拿多元线性回归举例的话，因为多元线性回归的损失函数 MSE 是凸函数，所以我们可以把损失函数看成是一个碗。然后下面的图就是从碗上方去俯瞰！哪里是损失最小的地方呢？当然对应的就是碗底的地方！所以下图碗中心的地方颜色较浅的区域就是损失函数最小的地方。</p><p>![]()</p><p>上面两张图都是进行梯度下降，你有没有发现，略有不同啊？两张图形都是鸟瞰图，左边的图形做了归一化处理，右边是没有做归一化的俯瞰图。</p><p>啥是归一化呢？请带着疑问跟我走~</p><p>我们先来说一下为什么没做归一化是右侧图示，举个例子假如我们客户数据信息，有两个维度，一个是用户的年龄，一个是用户的月收入，目标变量是快乐程度。</p><p>name</p><p>age</p><p>salary</p><p>happy</p><p>路博通</p><p>36</p><p>7000</p><p>100</p><p>马老师</p><p>42</p><p>20000</p><p>180</p><p>赵老师</p><p>22</p><p>30000</p><p>164</p><p>……</p><p>……</p><p>……</p><p>……</p><p>我们可以里面写出线性回归公式， <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>y</mi><mo>=</mo><mspace linebreak="newline"></mspace><mi>t</mi><mi>h</mi><mi>e</mi><mi>t</mi><mi>a</mi><mi mathvariant="normal">_</mi><mn>1</mn><mi>x</mi><mi mathvariant="normal">_</mi><mn>1</mn><mo>+</mo><mspace linebreak="newline"></mspace><mi>t</mi><mi>h</mi><mi>e</mi><mi>t</mi><mi>a</mi><mi mathvariant="normal">_</mi><mn>2</mn><mi>x</mi><mi mathvariant="normal">_</mi><mn>2</mn><mo>+</mo><mi>b</mi></mrow><annotation encoding="application/x-tex">y = \\theta\_1x\_1 + \\theta\_2x\_2 + b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1.0044em;vertical-align:-0.31em;"></span><span class="mord mathnormal">t</span><span class="mord mathnormal">h</span><span class="mord mathnormal">e</span><span class="mord mathnormal">t</span><span class="mord mathnormal">a</span><span class="mord">_1</span><span class="mord mathnormal">x</span><span class="mord">_1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1.0044em;vertical-align:-0.31em;"></span><span class="mord mathnormal">t</span><span class="mord mathnormal">h</span><span class="mord mathnormal">e</span><span class="mord mathnormal">t</span><span class="mord mathnormal">a</span><span class="mord">_2</span><span class="mord mathnormal">x</span><span class="mord">_2</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal">b</span></span></span></span> ，那么这样每一条样本不同维度对应的数量级不同，原因是每个维度对应的物理含义不同嘛，但是计算机能理解 36 和 7000 分别是年龄和收入吗？计算机只是拿到一堆数字而已。</p><p>我们把 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi><mi mathvariant="normal">_</mi><mn>1</mn></mrow><annotation encoding="application/x-tex">x\_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9544em;vertical-align:-0.31em;"></span><span class="mord mathnormal">x</span><span class="mord">_1</span></span></span></span> 看成是年龄，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi><mi mathvariant="normal">_</mi><mn>2</mn></mrow><annotation encoding="application/x-tex">x\_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9544em;vertical-align:-0.31em;"></span><span class="mord mathnormal">x</span><span class="mord">_2</span></span></span></span> 看成是收入， y 对应着快乐程度。机器学习就是在知道 X，y的情况下解方程组调整出最优解的过程。根据公式我们也可以发现 y 是两部分贡献之和，按常理来说，一开始并不知道两个部分谁更重要的情况下，可以想象为两部分对 y 的贡献是一样的即 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mspace linebreak="newline"></mspace><mi>t</mi><mi>h</mi><mi>e</mi><mi>t</mi><mi>a</mi><mi mathvariant="normal">_</mi><mn>1</mn><mi>x</mi><mi mathvariant="normal">_</mi><mn>1</mn><mo>=</mo><mspace linebreak="newline"></mspace><mi>t</mi><mi>h</mi><mi>e</mi><mi>t</mi><mi>a</mi><mi mathvariant="normal">_</mi><mn>2</mn><mi>x</mi><mi mathvariant="normal">_</mi><mn>2</mn></mrow><annotation encoding="application/x-tex">\\theta\_1x\_1 = \\theta\_2x\_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1.0044em;vertical-align:-0.31em;"></span><span class="mord mathnormal">t</span><span class="mord mathnormal">h</span><span class="mord mathnormal">e</span><span class="mord mathnormal">t</span><span class="mord mathnormal">a</span><span class="mord">_1</span><span class="mord mathnormal">x</span><span class="mord">_1</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1.0044em;vertical-align:-0.31em;"></span><span class="mord mathnormal">t</span><span class="mord mathnormal">h</span><span class="mord mathnormal">e</span><span class="mord mathnormal">t</span><span class="mord mathnormal">a</span><span class="mord">_2</span><span class="mord mathnormal">x</span><span class="mord">_2</span></span></span></span> ，如果 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi><mi mathvariant="normal">_</mi><mn>1</mn><mspace linebreak="newline"></mspace><mi>l</mi><mi>l</mi><mi>x</mi><mi mathvariant="normal">_</mi><mn>2</mn></mrow><annotation encoding="application/x-tex">x\_1 \\ll x\_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9544em;vertical-align:-0.31em;"></span><span class="mord mathnormal">x</span><span class="mord">_1</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1.0044em;vertical-align:-0.31em;"></span><span class="mord mathnormal" style="margin-right:0.01968em;">ll</span><span class="mord mathnormal">x</span><span class="mord">_2</span></span></span></span> ，那么最终 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mspace linebreak="newline"></mspace><mi>t</mi><mi>h</mi><mi>e</mi><mi>t</mi><mi>a</mi><mi mathvariant="normal">_</mi><mn>1</mn><mspace linebreak="newline"></mspace><mi>g</mi><mi>g</mi><mspace linebreak="newline"></mspace><mi>t</mi><mi>h</mi><mi>e</mi><mi>t</mi><mi>a</mi><mi mathvariant="normal">_</mi><mn>2</mn></mrow><annotation encoding="application/x-tex">\\theta\_1 \\gg \\theta\_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1.0044em;vertical-align:-0.31em;"></span><span class="mord mathnormal">t</span><span class="mord mathnormal">h</span><span class="mord mathnormal">e</span><span class="mord mathnormal">t</span><span class="mord mathnormal">a</span><span class="mord">_1</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">gg</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1.0044em;vertical-align:-0.31em;"></span><span class="mord mathnormal">t</span><span class="mord mathnormal">h</span><span class="mord mathnormal">e</span><span class="mord mathnormal">t</span><span class="mord mathnormal">a</span><span class="mord">_2</span></span></span></span> （远大于）。</p><p>这样是不是就比较好理解为什么之前右侧示图里为什么 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mspace linebreak="newline"></mspace><mi>t</mi><mi>h</mi><mi>e</mi><mi>t</mi><mi>a</mi><mi mathvariant="normal">_</mi><mn>1</mn><mo>&gt;</mo><mspace linebreak="newline"></mspace><mi>t</mi><mi>h</mi><mi>e</mi><mi>t</mi><mi>a</mi><mi mathvariant="normal">_</mi><mn>2</mn></mrow><annotation encoding="application/x-tex">\\theta\_1 &gt; \\theta\_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1.0044em;vertical-align:-0.31em;"></span><span class="mord mathnormal">t</span><span class="mord mathnormal">h</span><span class="mord mathnormal">e</span><span class="mord mathnormal">t</span><span class="mord mathnormal">a</span><span class="mord">_1</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&gt;</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1.0044em;vertical-align:-0.31em;"></span><span class="mord mathnormal">t</span><span class="mord mathnormal">h</span><span class="mord mathnormal">e</span><span class="mord mathnormal">t</span><span class="mord mathnormal">a</span><span class="mord">_2</span></span></span></span> ，看起来就是椭圆。再思考一下，梯度下降第 1 步的操作，是不是所有的维度 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mspace linebreak="newline"></mspace><mi>t</mi><mi>h</mi><mi>e</mi><mi>t</mi><mi>a</mi></mrow><annotation encoding="application/x-tex">\\theta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal">t</span><span class="mord mathnormal">h</span><span class="mord mathnormal">e</span><span class="mord mathnormal">t</span><span class="mord mathnormal">a</span></span></span></span> 都是根据在期望 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mspace linebreak="newline"></mspace><mi>m</mi><mi>u</mi></mrow><annotation encoding="application/x-tex">\\mu</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">m</span><span class="mord mathnormal">u</span></span></span></span> 为 0 方差 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mspace linebreak="newline"></mspace><mi>s</mi><mi>i</mi><mi>g</mi><mi>m</mi><mi>a</mi></mrow><annotation encoding="application/x-tex">\\sigma</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.854em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">s</span><span class="mord mathnormal">i</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">ma</span></span></span></span> 为 1 的正太分布随机生成的，说白了就是一开始的 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mspace linebreak="newline"></mspace><mi>t</mi><mi>h</mi><mi>e</mi><mi>t</mi><mi>a</mi><mi mathvariant="normal">_</mi><mn>1</mn></mrow><annotation encoding="application/x-tex">\\theta\_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1.0044em;vertical-align:-0.31em;"></span><span class="mord mathnormal">t</span><span class="mord mathnormal">h</span><span class="mord mathnormal">e</span><span class="mord mathnormal">t</span><span class="mord mathnormal">a</span><span class="mord">_1</span></span></span></span> 和 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mspace linebreak="newline"></mspace><mi>t</mi><mi>h</mi><mi>e</mi><mi>t</mi><mi>a</mi><mi mathvariant="normal">_</mi><mn>2</mn></mrow><annotation encoding="application/x-tex">\\theta\_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1.0044em;vertical-align:-0.31em;"></span><span class="mord mathnormal">t</span><span class="mord mathnormal">h</span><span class="mord mathnormal">e</span><span class="mord mathnormal">t</span><span class="mord mathnormal">a</span><span class="mord">_2</span></span></span></span> 数值是差不多的。所以可以发现 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mspace linebreak="newline"></mspace><mi>t</mi><mi>h</mi><mi>e</mi><mi>t</mi><mi>a</mi><mi mathvariant="normal">_</mi><mn>1</mn></mrow><annotation encoding="application/x-tex">\\theta\_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1.0044em;vertical-align:-0.31em;"></span><span class="mord mathnormal">t</span><span class="mord mathnormal">h</span><span class="mord mathnormal">e</span><span class="mord mathnormal">t</span><span class="mord mathnormal">a</span><span class="mord">_1</span></span></span></span> 从初始值到目标位置 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mspace linebreak="newline"></mspace><mi>t</mi><mi>h</mi><mi>e</mi><mi>t</mi><mi>a</mi><mi mathvariant="normal">_</mi><msup><mn>1</mn><mrow><mi>t</mi><mi>a</mi><mi>r</mi><mi>g</mi><mi>e</mi><mi>t</mi></mrow></msup></mrow><annotation encoding="application/x-tex">\\theta\_1^{target}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1.1036em;vertical-align:-0.31em;"></span><span class="mord mathnormal">t</span><span class="mord mathnormal">h</span><span class="mord mathnormal">e</span><span class="mord mathnormal">t</span><span class="mord mathnormal">a</span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord"><span class="mord">1</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7936em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">g</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight">t</span></span></span></span></span></span></span></span></span></span></span></span> 的距离要远大于 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mspace linebreak="newline"></mspace><mi>t</mi><mi>h</mi><mi>e</mi><mi>t</mi><mi>a</mi><mi mathvariant="normal">_</mi><mn>2</mn></mrow><annotation encoding="application/x-tex">\\theta\_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1.0044em;vertical-align:-0.31em;"></span><span class="mord mathnormal">t</span><span class="mord mathnormal">h</span><span class="mord mathnormal">e</span><span class="mord mathnormal">t</span><span class="mord mathnormal">a</span><span class="mord">_2</span></span></span></span> 从初始值到目标位置<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mspace linebreak="newline"></mspace><mi>t</mi><mi>h</mi><mi>e</mi><mi>t</mi><mi>a</mi><mi mathvariant="normal">_</mi><msup><mn>2</mn><mrow><mi>t</mi><mi>a</mi><mi>r</mi><mi>g</mi><mi>e</mi><mi>t</mi></mrow></msup></mrow><annotation encoding="application/x-tex">\\theta\_2^{target}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1.1036em;vertical-align:-0.31em;"></span><span class="mord mathnormal">t</span><span class="mord mathnormal">h</span><span class="mord mathnormal">e</span><span class="mord mathnormal">t</span><span class="mord mathnormal">a</span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7936em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">g</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight">t</span></span></span></span></span></span></span></span></span></span></span></span>。</p><p>因为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi><mi mathvariant="normal">_</mi><mn>1</mn><mspace linebreak="newline"></mspace><mi>l</mi><mi>l</mi><mi>x</mi><mi mathvariant="normal">_</mi><mn>2</mn></mrow><annotation encoding="application/x-tex">x\_1 \\ll x\_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9544em;vertical-align:-0.31em;"></span><span class="mord mathnormal">x</span><span class="mord">_1</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1.0044em;vertical-align:-0.31em;"></span><span class="mord mathnormal" style="margin-right:0.01968em;">ll</span><span class="mord mathnormal">x</span><span class="mord">_2</span></span></span></span>，根据梯度公式 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>g</mi><mi>j</mi></msub><mo>=</mo><mo stretchy="false">(</mo><msub><mi>h</mi><mrow><mspace linebreak="newline"></mspace><mi>t</mi><mi>h</mi><mi>e</mi><mi>t</mi><mi>a</mi></mrow></msub><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>−</mo><mi>y</mi><mo stretchy="false">)</mo><mi>x</mi><mi mathvariant="normal">_</mi><mi>j</mi></mrow><annotation encoding="application/x-tex">g_j= (h_{\\theta}(x) - y)x\_j</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7167em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mspace mtight newline"></span><span class="mord mathnormal mtight">t</span><span class="mord mathnormal mtight">h</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight">t</span><span class="mord mathnormal mtight">a</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.06em;vertical-align:-0.31em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mord mathnormal">x</span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span></span></span></span> ，得出 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>g</mi><mi mathvariant="normal">_</mi><mn>1</mn><mspace linebreak="newline"></mspace><mi>l</mi><mi>l</mi><mi>g</mi><mi mathvariant="normal">_</mi><mn>2</mn></mrow><annotation encoding="application/x-tex">g\_1 \\ll g\_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9544em;vertical-align:-0.31em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord">_1</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1.0044em;vertical-align:-0.31em;"></span><span class="mord mathnormal" style="margin-right:0.01968em;">ll</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord">_2</span></span></span></span>。根据梯度下降公式：\\theta\_j^{n+1} = \\theta\_j^n - \\eta \* g\_j 可知，每次调整 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mspace linebreak="newline"></mspace><mi>t</mi><mi>h</mi><mi>e</mi><mi>t</mi><mi>a</mi><mi mathvariant="normal">_</mi><mn>1</mn></mrow><annotation encoding="application/x-tex">\\theta\_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1.0044em;vertical-align:-0.31em;"></span><span class="mord mathnormal">t</span><span class="mord mathnormal">h</span><span class="mord mathnormal">e</span><span class="mord mathnormal">t</span><span class="mord mathnormal">a</span><span class="mord">_1</span></span></span></span> 的幅度 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mspace linebreak="newline"></mspace><mi>l</mi><mi>l</mi></mrow><annotation encoding="application/x-tex">\\ll</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal" style="margin-right:0.01968em;">ll</span></span></span></span> （远小于） <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mspace linebreak="newline"></mspace><mi>t</mi><mi>h</mi><mi>e</mi><mi>t</mi><mi>a</mi><mi mathvariant="normal">_</mi><mn>2</mn></mrow><annotation encoding="application/x-tex">\\theta\_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1.0044em;vertical-align:-0.31em;"></span><span class="mord mathnormal">t</span><span class="mord mathnormal">h</span><span class="mord mathnormal">e</span><span class="mord mathnormal">t</span><span class="mord mathnormal">a</span><span class="mord">_2</span></span></span></span> 的调整幅度。</p><p>总结一下 ，根据上面得到的两个结论 ，它俩之间是互相矛盾的 ，意味着最后 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mspace linebreak="newline"></mspace><mi>t</mi><mi>h</mi><mi>e</mi><mi>t</mi><mi>a</mi><mi mathvariant="normal">_</mi><mn>2</mn></mrow><annotation encoding="application/x-tex">\\theta\_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1.0044em;vertical-align:-0.31em;"></span><span class="mord mathnormal">t</span><span class="mord mathnormal">h</span><span class="mord mathnormal">e</span><span class="mord mathnormal">t</span><span class="mord mathnormal">a</span><span class="mord">_2</span></span></span></span> 需要比 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mspace linebreak="newline"></mspace><mi>t</mi><mi>h</mi><mi>e</mi><mi>t</mi><mi>a</mi><mi mathvariant="normal">_</mi><mn>1</mn></mrow><annotation encoding="application/x-tex">\\theta\_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1.0044em;vertical-align:-0.31em;"></span><span class="mord mathnormal">t</span><span class="mord mathnormal">h</span><span class="mord mathnormal">e</span><span class="mord mathnormal">t</span><span class="mord mathnormal">a</span><span class="mord">_1</span></span></span></span> 更少的迭代次数就可以收敛，而我们要最终求得最优解，就必须每个维度 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mspace linebreak="newline"></mspace><mi>t</mi><mi>h</mi><mi>e</mi><mi>t</mi><mi>a</mi></mrow><annotation encoding="application/x-tex">\\theta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal">t</span><span class="mord mathnormal">h</span><span class="mord mathnormal">e</span><span class="mord mathnormal">t</span><span class="mord mathnormal">a</span></span></span></span> 都收敛才可以，所以会出现 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mspace linebreak="newline"></mspace><mi>t</mi><mi>h</mi><mi>e</mi><mi>t</mi><mi>a</mi><mi mathvariant="normal">_</mi><mn>2</mn></mrow><annotation encoding="application/x-tex">\\theta\_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1.0044em;vertical-align:-0.31em;"></span><span class="mord mathnormal">t</span><span class="mord mathnormal">h</span><span class="mord mathnormal">e</span><span class="mord mathnormal">t</span><span class="mord mathnormal">a</span><span class="mord">_2</span></span></span></span> 等待 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mspace linebreak="newline"></mspace><mi>t</mi><mi>h</mi><mi>e</mi><mi>t</mi><mi>a</mi><mi mathvariant="normal">_</mi><mn>1</mn></mrow><annotation encoding="application/x-tex">\\theta\_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1.0044em;vertical-align:-0.31em;"></span><span class="mord mathnormal">t</span><span class="mord mathnormal">h</span><span class="mord mathnormal">e</span><span class="mord mathnormal">t</span><span class="mord mathnormal">a</span><span class="mord">_1</span></span></span></span> 收敛的情况。讲到这里对应图大家应该可以理解为什么右图是先顺着 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mspace linebreak="newline"></mspace><mi>t</mi><mi>h</mi><mi>e</mi><mi>t</mi><mi>a</mi><mi mathvariant="normal">_</mi><mn>2</mn></mrow><annotation encoding="application/x-tex">\\theta\_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1.0044em;vertical-align:-0.31em;"></span><span class="mord mathnormal">t</span><span class="mord mathnormal">h</span><span class="mord mathnormal">e</span><span class="mord mathnormal">t</span><span class="mord mathnormal">a</span><span class="mord">_2</span></span></span></span> 的坐标轴往下走再往右走的原因了吧。</p><p><strong>结论:</strong></p><p>归一化的一个目的是，使得梯度下降在不同维度 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mspace linebreak="newline"></mspace><mi>t</mi><mi>h</mi><mi>e</mi><mi>t</mi><mi>a</mi></mrow><annotation encoding="application/x-tex">\\theta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal">t</span><span class="mord mathnormal">h</span><span class="mord mathnormal">e</span><span class="mord mathnormal">t</span><span class="mord mathnormal">a</span></span></span></span> 参数（不同数量级）上，可以步调一致协同的进行梯度下降。这就好比社会主义，一小部分人先富裕起来了，先富带后富，这需要一定的时间，先富的这批人等待其他的人富裕起来；但是，更好途经是实现共同富裕，最后每个人都不能落下， 优化的步伐是一致的。</p><p>![]()</p><p>经过归一化处理，收敛的速度，明显快了！</p><h4 id="1-2、归一化本质">1.2、归一化本质</h4><p>做归一化的目的是要实现**“共同富裕”**，而之所以梯度下降优化时不能达到步调一致的根本原因其实还是 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi><mi mathvariant="normal">_</mi><mn>1</mn></mrow><annotation encoding="application/x-tex">x\_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9544em;vertical-align:-0.31em;"></span><span class="mord mathnormal">x</span><span class="mord">_1</span></span></span></span> 和 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi><mi mathvariant="normal">_</mi><mn>2</mn></mrow><annotation encoding="application/x-tex">x\_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9544em;vertical-align:-0.31em;"></span><span class="mord mathnormal">x</span><span class="mord">_2</span></span></span></span> 的数量级不同。所以什么是归一化？</p><p>答案自然就出来了，就是把 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi><mi mathvariant="normal">_</mi><mn>1</mn></mrow><annotation encoding="application/x-tex">x\_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9544em;vertical-align:-0.31em;"></span><span class="mord mathnormal">x</span><span class="mord">_1</span></span></span></span> 和 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi><mi mathvariant="normal">_</mi><mn>2</mn></mrow><annotation encoding="application/x-tex">x\_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9544em;vertical-align:-0.31em;"></span><span class="mord mathnormal">x</span><span class="mord">_2</span></span></span></span> 的数量级统一，扩展一点说，如果有更多特征维度，就要把各个特征维度 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi><mi mathvariant="normal">_</mi><mn>1</mn><mtext>、</mtext><mi>x</mi><mi mathvariant="normal">_</mi><mn>2</mn><mtext>、</mtext><mo>…</mo><mo>…</mo><mtext>、</mtext><mi>x</mi><mi mathvariant="normal">_</mi><mi>n</mi></mrow><annotation encoding="application/x-tex">x\_1、x\_2、……、x\_n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9933em;vertical-align:-0.31em;"></span><span class="mord mathnormal">x</span><span class="mord">_1</span><span class="mord cjk_fallback">、</span><span class="mord mathnormal">x</span><span class="mord">_2</span><span class="mord cjk_fallback">、</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner">……</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord cjk_fallback">、</span><span class="mord mathnormal">x</span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord mathnormal">n</span></span></span></span> 的数量级统一，来做到无量纲化。</p><h4 id="1-3、最大值最小值归一化">1.3、最大值最小值归一化</h4><p>也称为离差标准化，是对原始数据的线性变换，<strong>使结果值映射到[0 - 1]之间</strong>。转换函数如下：</p><p>X^\* = \\frac{X - X\_min}{X\_max -X\_min}</p><p>其实我们很容易发现使用最大值最小值归一化（min-max标准化）的时候，优点是一定可以把数值归一到 0 ~ 1 之间，缺点是如果有一个离群值（比如马云的财富），正如我们举的例子一样，会使得一个数值为 1，其它数值都几乎为 0，所以受离群值的影响比较大！</p><p><strong>代码演示：</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs Python"><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<br>x_1 = np.random.randint(<span class="hljs-number">1</span>,<span class="hljs-number">10</span>,size = <span class="hljs-number">10</span>)<br>x_2 = np.random.randint(<span class="hljs-number">100</span>,<span class="hljs-number">300</span>,size = <span class="hljs-number">10</span>)<br>x = np.c_[x_1,x_2]<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;归一化之前的数据：&#x27;</span>)<br>display(x)<br>x_ = (x - x.<span class="hljs-built_in">min</span>(axis = <span class="hljs-number">0</span>)) / (x.<span class="hljs-built_in">max</span>(axis = <span class="hljs-number">0</span>) - x.<span class="hljs-built_in">min</span>(axis = <span class="hljs-number">0</span>))<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;归一化之后的数据：&#x27;</span>)<br>display(x_)<br></code></pre></td></tr></table></figure><p><strong>使用scikit-learn函数：</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs Python"><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<br><span class="hljs-keyword">from</span> sklearn.preprocessing <span class="hljs-keyword">import</span> MinMaxScaler<br>x_1 = np.random.randint(<span class="hljs-number">1</span>,<span class="hljs-number">10</span>,size = <span class="hljs-number">10</span>)<br>x_2 = np.random.randint(<span class="hljs-number">100</span>,<span class="hljs-number">300</span>,size = <span class="hljs-number">10</span>)<br>x = np.c_[x_1,x_2]<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;归一化之前的数据：&#x27;</span>)<br>display(x)<br>min_max_scaler = MinMaxScaler()<br>x_ = min_max_scaler.fit_transform(x)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;归一化之后的数据：&#x27;</span>)<br>display(x_)<br></code></pre></td></tr></table></figure><h4 id="1-4、0-均值标准化">1.4、0-均值标准化</h4><p>这种方法给予原始数据的均值（mean）和标准差（standard deviation）进行数据的标准化，也叫做Z-score标准化。经过处理的数据符合标准正态分布，即均值为0，标准差为1，转化函数为：</p><p>X^\* = \\frac{X - \\mu}{\\sigma}</p><p>其中μ为所有样本数据的均值，σ为所有样本数据的标准差。</p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mspace linebreak="newline"></mspace><mi>m</mi><mi>u</mi><mo>=</mo><mspace linebreak="newline"></mspace><mi>f</mi><mi>r</mi><mi>a</mi><mi>c</mi><mn>1</mn><mi>n</mi><mspace linebreak="newline"></mspace><mi>s</mi><mi>u</mi><mi>m</mi><mspace linebreak="newline"></mspace><mi>l</mi><mi>i</mi><mi>m</mi><mi>i</mi><mi>t</mi><mi>s</mi><mi mathvariant="normal">_</mi><msup><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></msup><mi>x</mi><mi mathvariant="normal">_</mi><mi>i</mi></mrow><annotation encoding="application/x-tex">\\mu = \\frac{1}{n}\\sum\\limits\_{i = 1}^nx\_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">m</span><span class="mord mathnormal">u</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal">a</span><span class="mord mathnormal">c</span><span class="mord"><span class="mord">1</span></span><span class="mord"><span class="mord mathnormal">n</span></span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">s</span><span class="mord mathnormal">u</span><span class="mord mathnormal">m</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1.0238em;vertical-align:-0.31em;"></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">imi</span><span class="mord mathnormal">t</span><span class="mord mathnormal">s</span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord"><span class="mord"><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">1</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7138em;"><span style="top:-3.1124em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span></span></span></span><span class="mord mathnormal">x</span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord mathnormal">i</span></span></span></span></p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mspace linebreak="newline"></mspace><mi>s</mi><mi>i</mi><mi>g</mi><mi>m</mi><mi>a</mi><mo>=</mo><mspace linebreak="newline"></mspace><mi>s</mi><mi>q</mi><mi>r</mi><mi>t</mi><mrow><mspace linebreak="newline"></mspace><mi>f</mi><mi>r</mi><mi>a</mi><mi>c</mi><mn>1</mn><mi>n</mi><mspace linebreak="newline"></mspace><mi>s</mi><mi>u</mi><mi>m</mi><mspace linebreak="newline"></mspace><mi>l</mi><mi>i</mi><mi>m</mi><mi>i</mi><mi>t</mi><mi>s</mi><mi mathvariant="normal">_</mi><msup><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></msup><mo stretchy="false">(</mo><mi>x</mi><mi mathvariant="normal">_</mi><mi>i</mi><mo>−</mo><mspace linebreak="newline"></mspace><mi>m</mi><mi>u</mi><msup><mo stretchy="false">)</mo><mn>2</mn></msup></mrow></mrow><annotation encoding="application/x-tex">\\sigma = \\sqrt{\\frac{1}{n}\\sum\\limits\_{i = 1}^n(x\_i - \\mu)^2}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.854em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">s</span><span class="mord mathnormal">i</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">ma</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1.1241em;vertical-align:-0.31em;"></span><span class="mord mathnormal">s</span><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal">t</span><span class="mord"><span class="mspace newline"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal">a</span><span class="mord mathnormal">c</span><span class="mord"><span class="mord">1</span></span><span class="mord"><span class="mord mathnormal">n</span></span><span class="mspace newline"></span><span class="mord mathnormal">s</span><span class="mord mathnormal">u</span><span class="mord mathnormal">m</span><span class="mspace newline"></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">imi</span><span class="mord mathnormal">t</span><span class="mord mathnormal">s</span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord"><span class="mord"><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">1</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7138em;"><span style="top:-3.1124em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace newline"></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal">m</span><span class="mord mathnormal">u</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span></span></p><p>相对于最大值最小值归一化来说，因为标准归一化除以了标准差，而标准差的计算会考虑到所有样本数据，所以受到离群值的影响会小一些，这就是除以方差的好处！但是，0-均值标准化不一定会把数据缩放到 0 ~ 1 之间了。既然是0均值，也就意味着，有正有负！</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs Python"><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<br>x_1 = np.random.randint(<span class="hljs-number">1</span>,<span class="hljs-number">10</span>,size = <span class="hljs-number">10</span>)<br>x_2 = np.random.randint(<span class="hljs-number">100</span>,<span class="hljs-number">300</span>,size = <span class="hljs-number">10</span>)<br>x = np.c_[x_1,x_2]<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;归一化之前的数据：&#x27;</span>)<br>display(x)<br>x_ = (x - x.mean(axis = <span class="hljs-number">0</span>)) / x.std(axis = <span class="hljs-number">0</span>)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;归一化之后的数据：&#x27;</span>)<br>display(x_)<br></code></pre></td></tr></table></figure><p><strong>使用scikit-learn函数：</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs Python"><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<br><span class="hljs-keyword">from</span> sklearn.preprocessing <span class="hljs-keyword">import</span> StandardScaler<br>x_1 = np.random.randint(<span class="hljs-number">1</span>,<span class="hljs-number">10</span>,size = <span class="hljs-number">10</span>)<br>x_2 = np.random.randint(<span class="hljs-number">100</span>,<span class="hljs-number">300</span>,size = <span class="hljs-number">10</span>)<br>x = np.c_[x_1,x_2]<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;归一化之前的数据：&#x27;</span>)<br>display(x)<br>standard_scaler = StandardScaler()<br>x_ = standard_scaler.fit_transform(x)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;归一化之后的数据：&#x27;</span>)<br>display(x_)<br></code></pre></td></tr></table></figure><p>那为什么要减去均值呢？其实做均值归一化还有一个特殊的好处（对比最大值最小值归一化，全部是正数0~1），我们来看一下梯度下降的式子，你就会发现 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mspace linebreak="newline"></mspace><mi>a</mi><mi>l</mi><mi>p</mi><mi>h</mi><mi>a</mi></mrow><annotation encoding="application/x-tex">\\alpha</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">a</span><span class="mord mathnormal">lp</span><span class="mord mathnormal">ha</span></span></span></span> 是正数，不管 A 是正还是负（ A 就是 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mspace linebreak="newline"></mspace><mi>h</mi><mi>a</mi><mi>t</mi><mi>y</mi><mo>−</mo><mi>y</mi><mo>=</mo><mi>h</mi><mi mathvariant="normal">_</mi><mrow><mspace linebreak="newline"></mspace><mi>t</mi><mi>h</mi><mi>e</mi><mi>t</mi><mi>a</mi></mrow><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>−</mo><mi>y</mi></mrow><annotation encoding="application/x-tex">\\hat{y} - y = h\_{\\theta}(x) - y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">ha</span><span class="mord mathnormal">t</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.06em;vertical-align:-0.31em;"></span><span class="mord mathnormal">h</span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord"><span class="mspace newline"></span><span class="mord mathnormal">t</span><span class="mord mathnormal">h</span><span class="mord mathnormal">e</span><span class="mord mathnormal">t</span><span class="mord mathnormal">a</span></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span></span></span>），对于所有的维度 X，比如这里的 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi><mi mathvariant="normal">_</mi><mn>1</mn></mrow><annotation encoding="application/x-tex">x\_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9544em;vertical-align:-0.31em;"></span><span class="mord mathnormal">x</span><span class="mord">_1</span></span></span></span> 和 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi><mi mathvariant="normal">_</mi><mn>2</mn></mrow><annotation encoding="application/x-tex">x\_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9544em;vertical-align:-0.31em;"></span><span class="mord mathnormal">x</span><span class="mord">_2</span></span></span></span> 来说，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mspace linebreak="newline"></mspace><mi>a</mi><mi>l</mi><mi>p</mi><mi>h</mi><mi>a</mi></mrow><annotation encoding="application/x-tex">\\alpha</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">a</span><span class="mord mathnormal">lp</span><span class="mord mathnormal">ha</span></span></span></span> 乘上 A 都是一样的符号，那么每次迭代的时候 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>w</mi><mi mathvariant="normal">_</mi><msup><mn>1</mn><mrow><mi>t</mi><mo>+</mo><mn>1</mn></mrow></msup></mrow><annotation encoding="application/x-tex">w\_1^{t+1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.1241em;vertical-align:-0.31em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord"><span class="mord">1</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span></span></span></span> 和 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>w</mi><mi mathvariant="normal">_</mi><msup><mn>2</mn><mrow><mi>t</mi><mo>+</mo><mn>1</mn></mrow></msup></mrow><annotation encoding="application/x-tex">w\_2^{t+1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.1241em;vertical-align:-0.31em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span></span></span></span> 的更新幅度符号也必然是一样的，这样就会像下图有右侧所示：要想从 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>w</mi><mi mathvariant="normal">_</mi><mi>t</mi></mrow><annotation encoding="application/x-tex">w\_t</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9251em;vertical-align:-0.31em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord mathnormal">t</span></span></span></span> 更新到 w^\* 就必然要么 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>w</mi><mi mathvariant="normal">_</mi><mn>1</mn></mrow><annotation encoding="application/x-tex">w\_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9544em;vertical-align:-0.31em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mord">_1</span></span></span></span> 和 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>w</mi><mi mathvariant="normal">_</mi><mn>2</mn></mrow><annotation encoding="application/x-tex">w\_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9544em;vertical-align:-0.31em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mord">_2</span></span></span></span> 同时变大再同时变小，或者就 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>w</mi><mi mathvariant="normal">_</mi><mn>1</mn></mrow><annotation encoding="application/x-tex">w\_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9544em;vertical-align:-0.31em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mord">_1</span></span></span></span> 和 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>w</mi><mi mathvariant="normal">_</mi><mn>2</mn></mrow><annotation encoding="application/x-tex">w\_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9544em;vertical-align:-0.31em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mord">_2</span></span></span></span> 同时变小再同时变大。不能如图上所示蓝色的最优解路径，即 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>w</mi><mi mathvariant="normal">_</mi><mn>1</mn></mrow><annotation encoding="application/x-tex">w\_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9544em;vertical-align:-0.31em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mord">_1</span></span></span></span> 变小的同时 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>w</mi><mi mathvariant="normal">_</mi><mn>2</mn></mrow><annotation encoding="application/x-tex">w\_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9544em;vertical-align:-0.31em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mord">_2</span></span></span></span> 变大！</p><p>![]()</p><p>那我们如何才能做到让 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>w</mi><mi mathvariant="normal">_</mi><mn>1</mn></mrow><annotation encoding="application/x-tex">w\_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9544em;vertical-align:-0.31em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mord">_1</span></span></span></span> 变小的时候 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>w</mi><mi mathvariant="normal">_</mi><mn>2</mn></mrow><annotation encoding="application/x-tex">w\_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9544em;vertical-align:-0.31em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mord">_2</span></span></span></span> 变大呢？归其根本还是数据集 X 矩阵（经过min-max归一化）中的数据均为正数。所以如果我们可以让 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi><mi mathvariant="normal">_</mi><mn>1</mn></mrow><annotation encoding="application/x-tex">x\_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9544em;vertical-align:-0.31em;"></span><span class="mord mathnormal">x</span><span class="mord">_1</span></span></span></span> 和 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi><mi mathvariant="normal">_</mi><mn>2</mn></mrow><annotation encoding="application/x-tex">x\_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9544em;vertical-align:-0.31em;"></span><span class="mord mathnormal">x</span><span class="mord">_2</span></span></span></span> 它们符号不同，比如有正有负，其实就可以在做梯度下降的时候有更多的可能性去让更新尽可能沿着最优解路径去走。</p><p>结论：<strong>0-均值标准化</strong>处理数据之后，属性有正有负，可以让梯度下降沿着最优路径进行~</p><p><strong>注意：</strong></p><p>我们在做特征工程的时候，很多时候如果对训练集的数据进行了预处理，比如这里讲的归一化，那么未来对测试集的时候，和模型上线来新的数据的时候，都要进行<strong>相同的</strong>数据预处理流程，而且所使用的均值和方差是来自当时训练集的均值和方差!</p><p>因为我们人工智能要干的事情就是从训练集数据中找规律，然后利用找到的规律去预测新产生的数据。这也就是说假设训练集和测试集以及未来新来的数据是属于同分布的！从代码上面来说如何去使用训练集的均值和方差呢？就需要把 scaler 对象持久化， 回头模型上线的时候再加载进来去对新来的数据进行处理。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs Python"><span class="hljs-keyword">import</span> joblib<br>joblib.dump(standard_scaler,<span class="hljs-string">&#x27;scale&#x27;</span>) <span class="hljs-comment"># 持久化</span><br>standard_scaler = joblib.load(<span class="hljs-string">&#x27;scale&#x27;</span>) <span class="hljs-comment"># 加载</span><br>standard_scaler.transform(x) <span class="hljs-comment"># 使用</span><br></code></pre></td></tr></table></figure><h3 id="2、正则化-Regularization">2、正则化 Regularization</h3><h4 id="2-1、过拟合欠拟合">2.1、过拟合欠拟合</h4><ol><li>欠拟合（under fit）：还没有拟合到位，训练集和测试集的准确率都还没有到达最高，学的还不到位。</li><li>过拟合（over fit）：拟合过度，训练集的准确率升高的同时，测试集的准确率反而降低。学的过度了（走火入魔），做过的卷子都能再次答对（死记硬背），考试碰到新的没见过的题就考不好（不会举一反三）。</li><li>恰到好处（just right）：过拟合前，训练集和测试集准确率都达到巅峰。好比，学习并不需要花费很多时间，理解的很好，考试的时候可以很好的把知识举一反三。</li></ol><p>![]()</p><p>正则化就是防止过拟合，增加模型的<strong>鲁棒性</strong>，鲁棒是 Robust 的音译，也就是强壮的意思。就像计算机软件在面临攻击、网络过载等情况下能够不死机不崩溃，这就是软件的鲁棒性。鲁棒性调优就是让模型拥有更好的鲁棒性，也就是让模型的泛化能力和推广 能力更加的强大。</p><p>举例子说明：下面两个式子描述同一条直线那个更好？</p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>y</mi><mo>=</mo><mn>0.3</mn><mi>x</mi><mi mathvariant="normal">_</mi><mn>1</mn><mo>+</mo><mn>0.4</mn><mi>x</mi><mi mathvariant="normal">_</mi><mn>2</mn><mo>+</mo><mn>0.5</mn></mrow><annotation encoding="application/x-tex">y = 0.3x\_1 + 0.4x\_2 + 0.5</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.9544em;vertical-align:-0.31em;"></span><span class="mord">0.3</span><span class="mord mathnormal">x</span><span class="mord">_1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.9544em;vertical-align:-0.31em;"></span><span class="mord">0.4</span><span class="mord mathnormal">x</span><span class="mord">_2</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0.5</span></span></span></span></p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>y</mi><mo>=</mo><mn>3</mn><mi>x</mi><mi mathvariant="normal">_</mi><mn>1</mn><mo>+</mo><mn>4</mn><mi>x</mi><mi mathvariant="normal">_</mi><mn>2</mn><mo>+</mo><mn>5</mn></mrow><annotation encoding="application/x-tex">y = 3x\_1 + 4x\_2 + 5</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.9544em;vertical-align:-0.31em;"></span><span class="mord">3</span><span class="mord mathnormal">x</span><span class="mord">_1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.9544em;vertical-align:-0.31em;"></span><span class="mord">4</span><span class="mord mathnormal">x</span><span class="mord">_2</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">5</span></span></span></span></p><p>第一个更好，因为下面的公式是上面的十倍，当 w 越小公式的容错的能力就越好。因为把测试数据带入公式中如果测试集原来是 [32, 128] 在带入的时候发生了一些偏差，比如说变成 [30, 120] ，第二个模型结果就会比第一个模型结果的偏差大的多。公式中 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>y</mi><mo>=</mo><msup><mi>W</mi><mi>T</mi></msup><mi>x</mi></mrow><annotation encoding="application/x-tex">y = W^Tx</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8413em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mord mathnormal">x</span></span></span></span> ，当 x 有一点错误，这个错误会通过 w 放大。但是 w 不能太小，当 w 太小时（比如都趋近0），模型就没有意义了，无法应用。想要有一定的容错率又要保证正确率就要由正则项来发挥作用了！</p><p>所以正则化(鲁棒性调优)的本质就是牺牲模型在训练集上的正确率来提高推广、泛化能力， W 在数值上越小越好，这样能抵抗数值的<strong>扰动</strong>。同时为了保证模型的正确率 W 又不能极小。 故而人们将原来的损失函数加上一个惩罚项，这里面损失函数就是原来固有的损失函数，比如回归的话通常是 MSE，分类的话通常是 cross entropy 交叉熵，然后在加上一部分惩罚项来使得计算出来的模型 W 相对小一些来带来泛化能力。</p><p>常用的惩罚项有L1 正则项或者 L2 正则项：</p><ul><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>L</mi><mi mathvariant="normal">_</mi><mn>1</mn><mo>=</mo><msub><mi>w</mi><mn>1</mn></msub><mo>=</mo><mspace linebreak="newline"></mspace><mi>s</mi><mi>u</mi><mi>m</mi><mspace linebreak="newline"></mspace><mi>l</mi><mi>i</mi><mi>m</mi><mi>i</mi><mi>t</mi><msubsup><mi>s</mi><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></msubsup><mi>w</mi><mi mathvariant="normal">_</mi><mi>i</mi></mrow><annotation encoding="application/x-tex">L\_1 = w_1 = \\sum\\limits_{i = 1}^nw\_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9933em;vertical-align:-0.31em;"></span><span class="mord mathnormal">L</span><span class="mord">_1</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">s</span><span class="mord mathnormal">u</span><span class="mord mathnormal">m</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1.0044em;vertical-align:-0.31em;"></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">imi</span><span class="mord mathnormal">t</span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6644em;"><span style="top:-2.4413em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2587em;"><span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord mathnormal">i</span></span></span></span>​ 对应曼哈顿距离</li><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>L</mi><mi mathvariant="normal">_</mi><mn>2</mn><mo>=</mo><msub><mi>w</mi><mn>2</mn></msub><mo>=</mo><mspace linebreak="newline"></mspace><mi>s</mi><mi>q</mi><mi>r</mi><mi>t</mi><mrow><mspace linebreak="newline"></mspace><mi>s</mi><mi>u</mi><mi>m</mi><mspace linebreak="newline"></mspace><mi>l</mi><mi>i</mi><mi>m</mi><mi>i</mi><mi>t</mi><msubsup><mi>s</mi><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></msubsup><mo stretchy="false">(</mo><mi>w</mi><mi mathvariant="normal">_</mi><mi>i</mi><msup><mo stretchy="false">)</mo><mn>2</mn></msup></mrow></mrow><annotation encoding="application/x-tex">L\_2 = w_2 = \\sqrt{\\sum\\limits_{i = 1}^n(w\_i)^2}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9933em;vertical-align:-0.31em;"></span><span class="mord mathnormal">L</span><span class="mord">_2</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1.1241em;vertical-align:-0.31em;"></span><span class="mord mathnormal">s</span><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal">t</span><span class="mord"><span class="mspace newline"></span><span class="mord mathnormal">s</span><span class="mord mathnormal">u</span><span class="mord mathnormal">m</span><span class="mspace newline"></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">imi</span><span class="mord mathnormal">t</span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6644em;"><span style="top:-2.4413em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2587em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord mathnormal">i</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span></span> 对应欧氏距离</li></ul><p>其实 L1 和 L2 正则的公式数学里面的意义就是范数，代表空间中向量到原点的距离：</p><p>L\_p = X_p = \\sqrt\[p\]{\\sum\\limits_{i = 1}^nx\_i^p} , X = (x\_1,x\_2,……x\_n)</p><p>![]()</p><p>当我们把多元线性回归损失函数加上 L2 正则的时候，就诞生了 Ridge 岭回归。当我们把多元线性回归损失函数加上 L1 正则的时候，就孕育出来了 Lasso 回归。其实 L1 和 L2 正则项惩罚项可以加到任何算法的损失函数上面去提高计算出来模型的泛化能力的。</p><h4 id="2-2、套索回归（Lasso）">2.2、套索回归（Lasso）</h4><p>先从线性回归开始，其损失函数如下：</p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>J</mi><mo stretchy="false">(</mo><mspace linebreak="newline"></mspace><mi>t</mi><mi>h</mi><mi>e</mi><mi>t</mi><mi>a</mi><mo stretchy="false">)</mo><mo>=</mo><mspace linebreak="newline"></mspace><mi>f</mi><mi>r</mi><mi>a</mi><mi>c</mi><mn>12</mn><mspace linebreak="newline"></mspace><mi>s</mi><mi>u</mi><mi>m</mi><mspace linebreak="newline"></mspace><mi>l</mi><mi>i</mi><mi>m</mi><mi>i</mi><mi>t</mi><msubsup><mi>s</mi><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></msubsup><mo stretchy="false">(</mo><msub><mi>h</mi><mrow><mspace linebreak="newline"></mspace><mi>t</mi><mi>h</mi><mi>e</mi><mi>t</mi><mi>a</mi></mrow></msub><mo stretchy="false">(</mo><msup><mi>x</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><mo stretchy="false">)</mo><mo>−</mo><msup><mi>y</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><msup><mo stretchy="false">)</mo><mn>2</mn></msup></mrow><annotation encoding="application/x-tex">J(\\theta) = \\frac{1}{2}\\sum\\limits_{i = 1}^n(h_{\\theta}(x^{(i)}) - y^{(i)})^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.09618em;">J</span><span class="mopen">(</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">t</span><span class="mord mathnormal">h</span><span class="mord mathnormal">e</span><span class="mord mathnormal">t</span><span class="mord mathnormal">a</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal">a</span><span class="mord mathnormal">c</span><span class="mord"><span class="mord">1</span></span><span class="mord"><span class="mord">2</span></span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">s</span><span class="mord mathnormal">u</span><span class="mord mathnormal">m</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1.1467em;vertical-align:-0.2587em;"></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">imi</span><span class="mord mathnormal">t</span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6644em;"><span style="top:-2.4413em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2587em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mspace mtight newline"></span><span class="mord mathnormal mtight">t</span><span class="mord mathnormal mtight">h</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight">t</span><span class="mord mathnormal mtight">a</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.888em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.138em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.888em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span></p><p>L1正则化的损失函数，令<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>J</mi><mi mathvariant="normal">_</mi><mn>0</mn><mo>=</mo><mi>J</mi><mo stretchy="false">(</mo><mspace linebreak="newline"></mspace><mi>t</mi><mi>h</mi><mi>e</mi><mi>t</mi><mi>a</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">J\_0 = J(\\theta)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9933em;vertical-align:-0.31em;"></span><span class="mord mathnormal" style="margin-right:0.09618em;">J</span><span class="mord">_0</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.09618em;">J</span><span class="mopen">(</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">t</span><span class="mord mathnormal">h</span><span class="mord mathnormal">e</span><span class="mord mathnormal">t</span><span class="mord mathnormal">a</span><span class="mclose">)</span></span></span></span>：</p><p>J = J_0 + \\alpha \* \\sum\\limits_{i = 1}^nw\_i</p><p>令 L_1 = \\alpha \* \\sum\\limits_{i = 1}^nw\_i ：</p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>J</mi><mo>=</mo><mi>J</mi><mi mathvariant="normal">_</mi><mn>0</mn><mo>+</mo><mi>L</mi><mi mathvariant="normal">_</mi><mn>1</mn></mrow><annotation encoding="application/x-tex">J = J\_0 + L\_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.09618em;">J</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.9933em;vertical-align:-0.31em;"></span><span class="mord mathnormal" style="margin-right:0.09618em;">J</span><span class="mord">_0</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.9933em;vertical-align:-0.31em;"></span><span class="mord mathnormal">L</span><span class="mord">_1</span></span></span></span></p><p>其中 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>J</mi><mi mathvariant="normal">_</mi><mn>0</mn></mrow><annotation encoding="application/x-tex">J\_0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9933em;vertical-align:-0.31em;"></span><span class="mord mathnormal" style="margin-right:0.09618em;">J</span><span class="mord">_0</span></span></span></span> 是原始的损失函数，加号后面的一项是L1正则化项， <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mspace linebreak="newline"></mspace><mi>a</mi><mi>l</mi><mi>p</mi><mi>h</mi><mi>a</mi></mrow><annotation encoding="application/x-tex">\\alpha</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">a</span><span class="mord mathnormal">lp</span><span class="mord mathnormal">ha</span></span></span></span> 是正则化系数。注意到 L1正则化是权值的绝对值之和。<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>J</mi></mrow><annotation encoding="application/x-tex">J</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.09618em;">J</span></span></span></span> 是带有绝对值符号的函数，因此 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>J</mi></mrow><annotation encoding="application/x-tex">J</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.09618em;">J</span></span></span></span> 是不完全可微的。机器学习的任务就是要通过一些方法（比如梯度下降）求出损失函数的最小值。当我们在原始损失函数 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>J</mi><mi mathvariant="normal">_</mi><mn>0</mn></mrow><annotation encoding="application/x-tex">J\_0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9933em;vertical-align:-0.31em;"></span><span class="mord mathnormal" style="margin-right:0.09618em;">J</span><span class="mord">_0</span></span></span></span> 后面添加L1正则项时，相当于对 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>J</mi><mi mathvariant="normal">_</mi><mn>0</mn></mrow><annotation encoding="application/x-tex">J\_0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9933em;vertical-align:-0.31em;"></span><span class="mord mathnormal" style="margin-right:0.09618em;">J</span><span class="mord">_0</span></span></span></span> 做了一个约束。令L_1 = \\alpha \* \\sum\\limits_{i = 1}^nw\_i ，则 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>J</mi><mo>=</mo><mi>J</mi><mi mathvariant="normal">_</mi><mn>0</mn><mo>+</mo><mi>L</mi><mi mathvariant="normal">_</mi><mn>1</mn></mrow><annotation encoding="application/x-tex">J = J\_0 + L\_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.09618em;">J</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.9933em;vertical-align:-0.31em;"></span><span class="mord mathnormal" style="margin-right:0.09618em;">J</span><span class="mord">_0</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.9933em;vertical-align:-0.31em;"></span><span class="mord mathnormal">L</span><span class="mord">_1</span></span></span></span> ，此时我们的任务变成在 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>L</mi><mi mathvariant="normal">_</mi><mn>1</mn></mrow><annotation encoding="application/x-tex">L\_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9933em;vertical-align:-0.31em;"></span><span class="mord mathnormal">L</span><span class="mord">_1</span></span></span></span> 约束下求出 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>J</mi><mi mathvariant="normal">_</mi><mn>0</mn></mrow><annotation encoding="application/x-tex">J\_0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9933em;vertical-align:-0.31em;"></span><span class="mord mathnormal" style="margin-right:0.09618em;">J</span><span class="mord">_0</span></span></span></span> 取最小值的解。<strong>考虑二维的情况</strong>，即只有两个权值 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>w</mi><mi mathvariant="normal">_</mi><mn>1</mn><mtext>、</mtext><mi>w</mi><mi mathvariant="normal">_</mi><mn>2</mn></mrow><annotation encoding="application/x-tex">w\_1、w\_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9933em;vertical-align:-0.31em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mord">_1</span><span class="mord cjk_fallback">、</span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mord">_2</span></span></span></span> ，此时 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>L</mi><mi mathvariant="normal">_</mi><mn>1</mn><mo>=</mo><mi>w</mi><mi mathvariant="normal">_</mi><mn>1</mn><mo>+</mo><mi>w</mi><mi mathvariant="normal">_</mi><mn>2</mn></mrow><annotation encoding="application/x-tex">L\_1 = w\_1 + w\_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9933em;vertical-align:-0.31em;"></span><span class="mord mathnormal">L</span><span class="mord">_1</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.9544em;vertical-align:-0.31em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mord">_1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.9544em;vertical-align:-0.31em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mord">_2</span></span></span></span>。 对于梯度下降法，求解 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>J</mi><mi mathvariant="normal">_</mi><mn>0</mn></mrow><annotation encoding="application/x-tex">J\_0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9933em;vertical-align:-0.31em;"></span><span class="mord mathnormal" style="margin-right:0.09618em;">J</span><span class="mord">_0</span></span></span></span> 过程可以画出等值线，同时 L1 正则化的函数 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>L</mi><mi mathvariant="normal">_</mi><mn>1</mn></mrow><annotation encoding="application/x-tex">L\_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9933em;vertical-align:-0.31em;"></span><span class="mord mathnormal">L</span><span class="mord">_1</span></span></span></span> 也可以在 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>w</mi><mi mathvariant="normal">_</mi><mn>1</mn><mtext>、</mtext><mi>w</mi><mi mathvariant="normal">_</mi><mn>2</mn></mrow><annotation encoding="application/x-tex">w\_1、w\_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9933em;vertical-align:-0.31em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mord">_1</span><span class="mord cjk_fallback">、</span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mord">_2</span></span></span></span>所在的平面上画出来：</p><p>![]()</p><p>图中等值线是<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>J</mi><mi mathvariant="normal">_</mi><mn>0</mn></mrow><annotation encoding="application/x-tex">J\_0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9933em;vertical-align:-0.31em;"></span><span class="mord mathnormal" style="margin-right:0.09618em;">J</span><span class="mord">_0</span></span></span></span>的等值线，是椭圆形。黑色方框是 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>L</mi><mi mathvariant="normal">_</mi><mn>1</mn></mrow><annotation encoding="application/x-tex">L\_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9933em;vertical-align:-0.31em;"></span><span class="mord mathnormal">L</span><span class="mord">_1</span></span></span></span> 函数的图形，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>L</mi><mi mathvariant="normal">_</mi><mn>1</mn><mo>=</mo><mi>w</mi><mi mathvariant="normal">_</mi><mn>1</mn><mo>+</mo><mi>w</mi><mi mathvariant="normal">_</mi><mn>2</mn></mrow><annotation encoding="application/x-tex">L\_1 = w\_1 + w\_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9933em;vertical-align:-0.31em;"></span><span class="mord mathnormal">L</span><span class="mord">_1</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.9544em;vertical-align:-0.31em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mord">_1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.9544em;vertical-align:-0.31em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mord">_2</span></span></span></span> 这个函数画出来，就是一个方框。</p><p>在图中，当 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>J</mi><mi mathvariant="normal">_</mi><mn>0</mn></mrow><annotation encoding="application/x-tex">J\_0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9933em;vertical-align:-0.31em;"></span><span class="mord mathnormal" style="margin-right:0.09618em;">J</span><span class="mord">_0</span></span></span></span> 等值线与 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>L</mi><mi mathvariant="normal">_</mi><mn>1</mn></mrow><annotation encoding="application/x-tex">L\_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9933em;vertical-align:-0.31em;"></span><span class="mord mathnormal">L</span><span class="mord">_1</span></span></span></span> 图形首次相交的地方就是最优解。上图中 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>J</mi><mi mathvariant="normal">_</mi><mn>0</mn></mrow><annotation encoding="application/x-tex">J\_0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9933em;vertical-align:-0.31em;"></span><span class="mord mathnormal" style="margin-right:0.09618em;">J</span><span class="mord">_0</span></span></span></span> 与 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>L</mi><mi mathvariant="normal">_</mi><mn>1</mn></mrow><annotation encoding="application/x-tex">L\_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9933em;vertical-align:-0.31em;"></span><span class="mord mathnormal">L</span><span class="mord">_1</span></span></span></span> 在 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>L</mi><mi mathvariant="normal">_</mi><mn>1</mn></mrow><annotation encoding="application/x-tex">L\_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9933em;vertical-align:-0.31em;"></span><span class="mord mathnormal">L</span><span class="mord">_1</span></span></span></span> 的一个顶点处相交，这个顶点就是最优解。注意到这个顶点的值是 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mi>w</mi><mi mathvariant="normal">_</mi><mn>1</mn><mo separator="true">,</mo><mi>w</mi><mi mathvariant="normal">_</mi><mn>2</mn><mo stretchy="false">)</mo><mo>=</mo><mo stretchy="false">(</mo><mn>0</mn><mo separator="true">,</mo><mi>w</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(w\_1,w\_2) = (0,w)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.06em;vertical-align:-0.31em;"></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mord">_1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mord">_2</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mclose">)</span></span></span></span> 。可以直观想象，因为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>L</mi><mi mathvariant="normal">_</mi><mn>1</mn></mrow><annotation encoding="application/x-tex">L\_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9933em;vertical-align:-0.31em;"></span><span class="mord mathnormal">L</span><span class="mord">_1</span></span></span></span> 函数有很多『突出的角』（二维情况下四个，多维情况下更多）， <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>J</mi><mi mathvariant="normal">_</mi><mn>0</mn></mrow><annotation encoding="application/x-tex">J\_0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9933em;vertical-align:-0.31em;"></span><span class="mord mathnormal" style="margin-right:0.09618em;">J</span><span class="mord">_0</span></span></span></span> 与这些角接触的机率会远大于与 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>L</mi><mi mathvariant="normal">_</mi><mn>1</mn></mrow><annotation encoding="application/x-tex">L\_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9933em;vertical-align:-0.31em;"></span><span class="mord mathnormal">L</span><span class="mord">_1</span></span></span></span> 其它部位接触的机率（这是很直觉的想象，突出的角比直线的边离等值线更近写），而在这些角上，会有很多权值等于0（因为角就在坐标轴上），这就是为什么 L1 正则化可以产生稀疏模型（很多权重等于0了），进而可以用于特征选择。</p><p>而正则化前面的系数 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mspace linebreak="newline"></mspace><mi>a</mi><mi>l</mi><mi>p</mi><mi>h</mi><mi>a</mi></mrow><annotation encoding="application/x-tex">\\alpha</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">a</span><span class="mord mathnormal">lp</span><span class="mord mathnormal">ha</span></span></span></span>，可以控制 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>L</mi><mi mathvariant="normal">_</mi><mn>1</mn></mrow><annotation encoding="application/x-tex">L\_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9933em;vertical-align:-0.31em;"></span><span class="mord mathnormal">L</span><span class="mord">_1</span></span></span></span> 图形的大小。<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mspace linebreak="newline"></mspace><mi>a</mi><mi>l</mi><mi>p</mi><mi>h</mi><mi>a</mi></mrow><annotation encoding="application/x-tex">\\alpha</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">a</span><span class="mord mathnormal">lp</span><span class="mord mathnormal">ha</span></span></span></span> 越小，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>L</mi><mi mathvariant="normal">_</mi><mn>1</mn></mrow><annotation encoding="application/x-tex">L\_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9933em;vertical-align:-0.31em;"></span><span class="mord mathnormal">L</span><span class="mord">_1</span></span></span></span> 的图形越大（上图中的黑色方框）；<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mspace linebreak="newline"></mspace><mi>a</mi><mi>l</mi><mi>p</mi><mi>h</mi><mi>a</mi></mrow><annotation encoding="application/x-tex">\\alpha</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">a</span><span class="mord mathnormal">lp</span><span class="mord mathnormal">ha</span></span></span></span> 越大，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>L</mi><mi mathvariant="normal">_</mi><mn>1</mn></mrow><annotation encoding="application/x-tex">L\_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9933em;vertical-align:-0.31em;"></span><span class="mord mathnormal">L</span><span class="mord">_1</span></span></span></span> 的图形就越小，可以小到黑色方框只超出原点范围一点点，这是最优解的值<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mi>w</mi><mi mathvariant="normal">_</mi><mn>1</mn><mo separator="true">,</mo><mi>w</mi><mi mathvariant="normal">_</mi><mn>2</mn><mo stretchy="false">)</mo><mo>=</mo><mo stretchy="false">(</mo><mn>0</mn><mo separator="true">,</mo><mi>w</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(w\_1,w\_2) = (0,w)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.06em;vertical-align:-0.31em;"></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mord">_1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mord">_2</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mclose">)</span></span></span></span> 中的 w 可以取到很小的值的原因所在。</p><p>代码演示 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mspace linebreak="newline"></mspace><mi>a</mi><mi>l</mi><mi>p</mi><mi>h</mi><mi>a</mi></mrow><annotation encoding="application/x-tex">\\alpha</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">a</span><span class="mord mathnormal">lp</span><span class="mord mathnormal">ha</span></span></span></span> 取值大小对黑色方框的尺寸影响：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs Python"><span class="hljs-keyword">import</span> matplotlib.pyplot <span class="hljs-keyword">as</span> plt<br><br><span class="hljs-comment"># α 的值是：1</span><br><span class="hljs-comment"># 1 = x + y</span><br><span class="hljs-comment"># y = 1 -x</span><br>f = <span class="hljs-keyword">lambda</span> x : <span class="hljs-number">1</span>- x<br>x = np.linspace(<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">100</span>)<br>plt.axis(<span class="hljs-string">&#x27;equal&#x27;</span>)<br>plt.plot(x, f(x), color = <span class="hljs-string">&#x27;green&#x27;</span>)<br><br><span class="hljs-comment"># α 的值是：3</span><br><span class="hljs-comment"># 1 = 3 * x + 3 * y</span><br><span class="hljs-comment"># y = 1/3 -x</span><br>f2 = <span class="hljs-keyword">lambda</span> x : <span class="hljs-number">1</span>/<span class="hljs-number">3</span> - x <br>x2 = np.linspace(<span class="hljs-number">0</span>,<span class="hljs-number">1</span>/<span class="hljs-number">3</span>,<span class="hljs-number">100</span>)<br>plt.plot(x2, f2(x2),color = <span class="hljs-string">&#x27;red&#x27;</span>)<br><br><span class="hljs-comment"># 一些列设置</span><br>plt.xlim(-<span class="hljs-number">2</span>,<span class="hljs-number">2</span>)<br>plt.ylim(-<span class="hljs-number">2</span>,<span class="hljs-number">2</span>)<br>ax = plt.gca()<br>ax.spines[<span class="hljs-string">&#x27;right&#x27;</span>].set_color(<span class="hljs-string">&#x27;None&#x27;</span>)  <span class="hljs-comment"># 将图片的右框隐藏</span><br>ax.spines[<span class="hljs-string">&#x27;top&#x27;</span>].set_color(<span class="hljs-string">&#x27;None&#x27;</span>)  <span class="hljs-comment"># 将图片的上边框隐藏</span><br>ax.spines[<span class="hljs-string">&#x27;bottom&#x27;</span>].set_position((<span class="hljs-string">&#x27;data&#x27;</span>, <span class="hljs-number">0</span>)) <span class="hljs-comment"># x轴出现在y轴的-1 位置</span><br>ax.spines[<span class="hljs-string">&#x27;left&#x27;</span>].set_position((<span class="hljs-string">&#x27;data&#x27;</span>, <span class="hljs-number">0</span>))<br>plt.savefig(<span class="hljs-string">&#x27;&#x27;</span>,dpi = <span class="hljs-number">200</span>)<br></code></pre></td></tr></table></figure><p>![]()</p><p><strong>权重更新规则如下：</strong></p><ol><li>损失函数：</li></ol><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>J</mi><mo stretchy="false">(</mo><mspace linebreak="newline"></mspace><mi>t</mi><mi>h</mi><mi>e</mi><mi>t</mi><mi>a</mi><mo stretchy="false">)</mo><mo>=</mo><mspace linebreak="newline"></mspace><mi>f</mi><mi>r</mi><mi>a</mi><mi>c</mi><mn>12</mn><mspace linebreak="newline"></mspace><mi>s</mi><mi>u</mi><mi>m</mi><mspace linebreak="newline"></mspace><mi>l</mi><mi>i</mi><mi>m</mi><mi>i</mi><mi>t</mi><msubsup><mi>s</mi><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></msubsup><mo stretchy="false">(</mo><msub><mi>h</mi><mrow><mspace linebreak="newline"></mspace><mi>t</mi><mi>h</mi><mi>e</mi><mi>t</mi><mi>a</mi></mrow></msub><mo stretchy="false">(</mo><msup><mi>x</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><mo stretchy="false">)</mo><mo>−</mo><msup><mi>y</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><msup><mo stretchy="false">)</mo><mn>2</mn></msup></mrow><annotation encoding="application/x-tex">J(\\theta) = \\frac{1}{2}\\sum\\limits_{i = 1}^n(h_{\\theta}(x^{(i)}) - y^{(i)})^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.09618em;">J</span><span class="mopen">(</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">t</span><span class="mord mathnormal">h</span><span class="mord mathnormal">e</span><span class="mord mathnormal">t</span><span class="mord mathnormal">a</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal">a</span><span class="mord mathnormal">c</span><span class="mord"><span class="mord">1</span></span><span class="mord"><span class="mord">2</span></span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">s</span><span class="mord mathnormal">u</span><span class="mord mathnormal">m</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1.1467em;vertical-align:-0.2587em;"></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">imi</span><span class="mord mathnormal">t</span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6644em;"><span style="top:-2.4413em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2587em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mspace mtight newline"></span><span class="mord mathnormal mtight">t</span><span class="mord mathnormal mtight">h</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight">t</span><span class="mord mathnormal mtight">a</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.888em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.138em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.888em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span></p><p>L_1  =  \\alpha \* \\sum\\limits_{i = 1}^nw\_i</p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>J</mi><mo>=</mo><mi>J</mi><mi mathvariant="normal">_</mi><mn>0</mn><mo>+</mo><mi>L</mi><mi mathvariant="normal">_</mi><mn>1</mn></mrow><annotation encoding="application/x-tex">J = J\_0 + L\_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.09618em;">J</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.9933em;vertical-align:-0.31em;"></span><span class="mord mathnormal" style="margin-right:0.09618em;">J</span><span class="mord">_0</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.9933em;vertical-align:-0.31em;"></span><span class="mord mathnormal">L</span><span class="mord">_1</span></span></span></span></p><ol start="2"><li>更新规则：</li></ol><p>\\theta\_j^{n + 1} = \\theta\_j^{n} - \\eta \* \\frac{\\partial}{\\partial \\theta\_j}J</p><p>\\theta\_j^{n + 1} = \\theta\_j^{n} - \\eta \* \\frac{\\partial}{\\partial \\theta\_j}(J\_0 + L\_1)</p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mspace linebreak="newline"></mspace><mi>f</mi><mi>r</mi><mi>a</mi><mi>c</mi><mrow><mspace linebreak="newline"></mspace><mi>p</mi><mi>a</mi><mi>r</mi><mi>t</mi><mi>i</mi><mi>a</mi><mi>l</mi></mrow><mrow><mspace linebreak="newline"></mspace><mi>p</mi><mi>a</mi><mi>r</mi><mi>t</mi><mi>i</mi><mi>a</mi><mi>l</mi><mspace linebreak="newline"></mspace><mi>t</mi><mi>h</mi><mi>e</mi><mi>t</mi><mi>a</mi><mi mathvariant="normal">_</mi><mi>j</mi></mrow><msub><mi>J</mi><mn>0</mn></msub><mo>=</mo><mspace linebreak="newline"></mspace><mi>s</mi><mi>u</mi><mi>m</mi><mspace linebreak="newline"></mspace><mi>l</mi><mi>i</mi><mi>m</mi><mi>i</mi><mi>t</mi><msubsup><mi>s</mi><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></msubsup><mo stretchy="false">(</mo><mi>h</mi><mi mathvariant="normal">_</mi><mrow><mspace linebreak="newline"></mspace><mi>t</mi><mi>h</mi><mi>e</mi><mi>t</mi><mi>a</mi></mrow><mo stretchy="false">(</mo><msup><mi>x</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><mo stretchy="false">)</mo><mo>−</mo><msup><mi>y</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><mo stretchy="false">)</mo><mi>x</mi><mi mathvariant="normal">_</mi><msup><mi>j</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><mtext> </mtext></mrow><annotation encoding="application/x-tex">\\frac{\\partial}{\\partial \\theta\_j}J_0 =\\sum\\limits_{i = 1}^{n} (h\_{\\theta}(x^{(i)}) - y^{(i)} )x\_j^{(i)} </annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1.0044em;vertical-align:-0.31em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal">a</span><span class="mord mathnormal">c</span><span class="mord"><span class="mspace newline"></span><span class="mord mathnormal">p</span><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal">t</span><span class="mord mathnormal">ia</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span></span><span class="mord"><span class="mspace newline"></span><span class="mord mathnormal">p</span><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal">t</span><span class="mord mathnormal">ia</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mspace newline"></span><span class="mord mathnormal">t</span><span class="mord mathnormal">h</span><span class="mord mathnormal">e</span><span class="mord mathnormal">t</span><span class="mord mathnormal">a</span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.09618em;">J</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0962em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">s</span><span class="mord mathnormal">u</span><span class="mord mathnormal">m</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1.198em;vertical-align:-0.31em;"></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">imi</span><span class="mord mathnormal">t</span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6644em;"><span style="top:-2.4413em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2587em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">h</span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord"><span class="mspace newline"></span><span class="mord mathnormal">t</span><span class="mord mathnormal">h</span><span class="mord mathnormal">e</span><span class="mord mathnormal">t</span><span class="mord mathnormal">a</span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.888em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.198em;vertical-align:-0.31em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.888em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mord mathnormal">x</span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.888em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mord"> </span></span></span></span></p><p>\\frac{\\partial}{\\partial \\theta\_j}L\_1 = \\alpha \* sgn(w\_i) </p><p>其中 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>J</mi><mi mathvariant="normal">_</mi><mn>0</mn></mrow><annotation encoding="application/x-tex">J\_0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9933em;vertical-align:-0.31em;"></span><span class="mord mathnormal" style="margin-right:0.09618em;">J</span><span class="mord">_0</span></span></span></span> 即是线性回归的损失函数，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>L</mi><mi mathvariant="normal">_</mi><mn>1</mn></mrow><annotation encoding="application/x-tex">L\_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9933em;vertical-align:-0.31em;"></span><span class="mord mathnormal">L</span><span class="mord">_1</span></span></span></span> 是添加的正则项。<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>s</mi><mi>g</mi><mi>n</mi><mo stretchy="false">(</mo><mi>w</mi><mi mathvariant="normal">_</mi><mi>i</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">sgn(w\_i)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.06em;vertical-align:-0.31em;"></span><span class="mord mathnormal">s</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">n</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord mathnormal">i</span><span class="mclose">)</span></span></span></span> 表示符号函数、指示函数，值为：1 或 -1。</p><p>sgn(w\_i) = \\begin{cases}1, &w\_i > 0\\-1,&w\_i < 0\\end{cases}</p><p>注意当 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>w</mi><mi mathvariant="normal">_</mi><mi>i</mi><mo>=</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">w\_i = 0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9695em;vertical-align:-0.31em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0</span></span></span></span> 时不可导。</p><p><strong>综上所述</strong>，L1正则化权重更新如下：</p><p>\\theta\_j^{n + 1} = \\theta_j^{n} -\\eta\\sum\\limits_{i = 1}^{n} (h\_{\\theta}(x^{(i)}) - y^{(i)} )x\_j^{(i)} - \\eta_\\alpha_ sgn(w\_i)</p><ul><li>Lasso回归和线性回归相比，多了一项：-\\eta _\\alpha_ sgn(w\_i)</li><li>$\eta $ 大于零，表示梯度下降学习率</li><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mspace linebreak="newline"></mspace><mi>a</mi><mi>l</mi><mi>p</mi><mi>h</mi><mi>a</mi></mrow><annotation encoding="application/x-tex">\\alpha</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">a</span><span class="mord mathnormal">lp</span><span class="mord mathnormal">ha</span></span></span></span> 大于零，表示L1正则化系数</li><li>当<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>w</mi><mi mathvariant="normal">_</mi><mi>i</mi></mrow><annotation encoding="application/x-tex">w\_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9695em;vertical-align:-0.31em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord mathnormal">i</span></span></span></span>为正时候 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>s</mi><mi>g</mi><mi>n</mi><mo stretchy="false">(</mo><mi>w</mi><mi mathvariant="normal">_</mi><mi>i</mi><mo stretchy="false">)</mo><mo>=</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">sgn(w\_i) = 1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.06em;vertical-align:-0.31em;"></span><span class="mord mathnormal">s</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">n</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord mathnormal">i</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span>，直接减去 \\eta \* \\alpha （大于0），所以正的 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>w</mi><mi mathvariant="normal">_</mi><mi>i</mi></mrow><annotation encoding="application/x-tex">w\_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9695em;vertical-align:-0.31em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord mathnormal">i</span></span></span></span> 变小了</li><li>当<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>w</mi><mi mathvariant="normal">_</mi><mi>i</mi></mrow><annotation encoding="application/x-tex">w\_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9695em;vertical-align:-0.31em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord mathnormal">i</span></span></span></span>为负时候 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>s</mi><mi>g</mi><mi>n</mi><mo stretchy="false">(</mo><mi>w</mi><mi mathvariant="normal">_</mi><mi>i</mi><mo stretchy="false">)</mo><mo>=</mo><mo>−</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">sgn(w\_i) = -1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.06em;vertical-align:-0.31em;"></span><span class="mord mathnormal">s</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">n</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord mathnormal">i</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">−</span><span class="mord">1</span></span></span></span>，相当于直接加上 \\eta \* \\alpha （小于0），所以负的 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>w</mi><mi mathvariant="normal">_</mi><mi>i</mi></mrow><annotation encoding="application/x-tex">w\_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9695em;vertical-align:-0.31em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord mathnormal">i</span></span></span></span>​ 变大了，绝对值变小，向0靠近</li></ul><p>有的书本上公式会这样写，其中 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mspace linebreak="newline"></mspace><mi>l</mi><mi>a</mi><mi>m</mi><mi>b</mi><mi>d</mi><mi>a</mi></mrow><annotation encoding="application/x-tex">\\lambda</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">amb</span><span class="mord mathnormal">d</span><span class="mord mathnormal">a</span></span></span></span> 表示L1正则化系数：</p><p>\\theta\_j^{n + 1} = \\theta_j^{n} -\\eta\\sum\\limits_{i = 1}^{n} (h\_{\\theta}(x^{(i)}) - y^{(i)} )x\_j^{(i)} - \\eta_\\lambda_ sgn(w\_i)</p><h4 id="2-3、岭回归（Ridge）">2.3、岭回归（Ridge）</h4><p>也是先从线性回归开始，其损失函数如下：</p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>J</mi><mo stretchy="false">(</mo><mspace linebreak="newline"></mspace><mi>t</mi><mi>h</mi><mi>e</mi><mi>t</mi><mi>a</mi><mo stretchy="false">)</mo><mo>=</mo><mspace linebreak="newline"></mspace><mi>f</mi><mi>r</mi><mi>a</mi><mi>c</mi><mn>12</mn><mspace linebreak="newline"></mspace><mi>s</mi><mi>u</mi><mi>m</mi><mspace linebreak="newline"></mspace><mi>l</mi><mi>i</mi><mi>m</mi><mi>i</mi><mi>t</mi><msubsup><mi>s</mi><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></msubsup><mo stretchy="false">(</mo><msub><mi>h</mi><mrow><mspace linebreak="newline"></mspace><mi>t</mi><mi>h</mi><mi>e</mi><mi>t</mi><mi>a</mi></mrow></msub><mo stretchy="false">(</mo><msup><mi>x</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><mo stretchy="false">)</mo><mo>−</mo><msup><mi>y</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><msup><mo stretchy="false">)</mo><mn>2</mn></msup></mrow><annotation encoding="application/x-tex">J(\\theta) = \\frac{1}{2}\\sum\\limits_{i = 1}^n(h_{\\theta}(x^{(i)}) - y^{(i)})^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.09618em;">J</span><span class="mopen">(</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">t</span><span class="mord mathnormal">h</span><span class="mord mathnormal">e</span><span class="mord mathnormal">t</span><span class="mord mathnormal">a</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal">a</span><span class="mord mathnormal">c</span><span class="mord"><span class="mord">1</span></span><span class="mord"><span class="mord">2</span></span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">s</span><span class="mord mathnormal">u</span><span class="mord mathnormal">m</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1.1467em;vertical-align:-0.2587em;"></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">imi</span><span class="mord mathnormal">t</span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6644em;"><span style="top:-2.4413em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2587em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mspace mtight newline"></span><span class="mord mathnormal mtight">t</span><span class="mord mathnormal mtight">h</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight">t</span><span class="mord mathnormal mtight">a</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.888em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.138em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.888em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span></p><p>L2正则化的损失函数（对L2范数，进行了平方运算），令<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>J</mi><mi mathvariant="normal">_</mi><mn>0</mn><mo>=</mo><mi>J</mi><mo stretchy="false">(</mo><mspace linebreak="newline"></mspace><mi>t</mi><mi>h</mi><mi>e</mi><mi>t</mi><mi>a</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">J\_0 = J(\\theta)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9933em;vertical-align:-0.31em;"></span><span class="mord mathnormal" style="margin-right:0.09618em;">J</span><span class="mord">_0</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.09618em;">J</span><span class="mopen">(</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">t</span><span class="mord mathnormal">h</span><span class="mord mathnormal">e</span><span class="mord mathnormal">t</span><span class="mord mathnormal">a</span><span class="mclose">)</span></span></span></span>：</p><p>J = J_0 + \\alpha \* \\sum\\limits_{i = 1}^n(w\_i)^2</p><p>令 L_2 = \\alpha \* \\sum\\limits_{i = 1}^n(w\_i)^2 ：</p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>J</mi><mo>=</mo><mi>J</mi><mi mathvariant="normal">_</mi><mn>0</mn><mo>+</mo><mi>L</mi><mi mathvariant="normal">_</mi><mn>2</mn></mrow><annotation encoding="application/x-tex">J = J\_0 + L\_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.09618em;">J</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.9933em;vertical-align:-0.31em;"></span><span class="mord mathnormal" style="margin-right:0.09618em;">J</span><span class="mord">_0</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.9933em;vertical-align:-0.31em;"></span><span class="mord mathnormal">L</span><span class="mord">_2</span></span></span></span></p><p>同样可以画出他们在二维平面上的图形，如下：</p><p>![]()</p><p>二维平面下 L2 正则化的函数图形是个圆（绝对值的平方和，是个圆），与方形相比，被磨去了棱角。因此 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>J</mi><mi mathvariant="normal">_</mi><mn>0</mn></mrow><annotation encoding="application/x-tex">J\_0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9933em;vertical-align:-0.31em;"></span><span class="mord mathnormal" style="margin-right:0.09618em;">J</span><span class="mord">_0</span></span></span></span> 与 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>L</mi><mi mathvariant="normal">_</mi><mn>2</mn></mrow><annotation encoding="application/x-tex">L\_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9933em;vertical-align:-0.31em;"></span><span class="mord mathnormal">L</span><span class="mord">_2</span></span></span></span> 相交时使得 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>w</mi><mi mathvariant="normal">_</mi><mn>1</mn><mtext>、</mtext><mi>w</mi><mi mathvariant="normal">_</mi><mn>2</mn></mrow><annotation encoding="application/x-tex">w\_1、w\_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9933em;vertical-align:-0.31em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mord">_1</span><span class="mord cjk_fallback">、</span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mord">_2</span></span></span></span> 等于零的机率小了许多（这个也是一个很直观的想象），这就是为什么L2正则化不具有稀疏性的原因，因为不太可能出现多数 w 都为0的情况（这种情况就叫稀疏性）！</p><p><strong>权重更新规则如下：</strong></p><ol><li>损失函数：</li></ol><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>J</mi><mo stretchy="false">(</mo><mspace linebreak="newline"></mspace><mi>t</mi><mi>h</mi><mi>e</mi><mi>t</mi><mi>a</mi><mo stretchy="false">)</mo><mo>=</mo><mspace linebreak="newline"></mspace><mi>f</mi><mi>r</mi><mi>a</mi><mi>c</mi><mn>12</mn><mspace linebreak="newline"></mspace><mi>s</mi><mi>u</mi><mi>m</mi><mspace linebreak="newline"></mspace><mi>l</mi><mi>i</mi><mi>m</mi><mi>i</mi><mi>t</mi><msubsup><mi>s</mi><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></msubsup><mo stretchy="false">(</mo><msub><mi>h</mi><mrow><mspace linebreak="newline"></mspace><mi>t</mi><mi>h</mi><mi>e</mi><mi>t</mi><mi>a</mi></mrow></msub><mo stretchy="false">(</mo><msup><mi>x</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><mo stretchy="false">)</mo><mo>−</mo><msup><mi>y</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><msup><mo stretchy="false">)</mo><mn>2</mn></msup></mrow><annotation encoding="application/x-tex">J(\\theta) = \\frac{1}{2}\\sum\\limits_{i = 1}^n(h_{\\theta}(x^{(i)}) - y^{(i)})^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.09618em;">J</span><span class="mopen">(</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">t</span><span class="mord mathnormal">h</span><span class="mord mathnormal">e</span><span class="mord mathnormal">t</span><span class="mord mathnormal">a</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal">a</span><span class="mord mathnormal">c</span><span class="mord"><span class="mord">1</span></span><span class="mord"><span class="mord">2</span></span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">s</span><span class="mord mathnormal">u</span><span class="mord mathnormal">m</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1.1467em;vertical-align:-0.2587em;"></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">imi</span><span class="mord mathnormal">t</span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6644em;"><span style="top:-2.4413em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2587em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mspace mtight newline"></span><span class="mord mathnormal mtight">t</span><span class="mord mathnormal mtight">h</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight">t</span><span class="mord mathnormal mtight">a</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.888em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.138em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.888em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span></p><p>L_2  =  \\alpha \* \\sum\\limits_{i = 1}^n(w\_i)^2</p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>J</mi><mo>=</mo><mi>J</mi><mi mathvariant="normal">_</mi><mn>0</mn><mo>+</mo><mi>L</mi><mi mathvariant="normal">_</mi><mn>2</mn></mrow><annotation encoding="application/x-tex">J = J\_0 + L\_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.09618em;">J</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.9933em;vertical-align:-0.31em;"></span><span class="mord mathnormal" style="margin-right:0.09618em;">J</span><span class="mord">_0</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.9933em;vertical-align:-0.31em;"></span><span class="mord mathnormal">L</span><span class="mord">_2</span></span></span></span></p><ol start="2"><li>更新规则：</li></ol><p>\\theta\_j^{n + 1} = \\theta\_j^{n} - \\eta \* \\frac{\\partial}{\\partial \\theta\_j}J</p><p>\\theta\_j^{n + 1} = \\theta\_j^{n} - \\eta \* \\frac{\\partial}{\\partial \\theta\_j}(J\_0 + L\_2)</p><p>$\frac{\partial}{\partial \theta_j}J_0 =\sum\limits_{i = 1}^{n} (h_{\theta}(x^{(i)}) - y^{(i)} )x_j^{(i)} $</p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mspace linebreak="newline"></mspace><mi>f</mi><mi>r</mi><mi>a</mi><mi>c</mi><mrow><mspace linebreak="newline"></mspace><mi>p</mi><mi>a</mi><mi>r</mi><mi>t</mi><mi>i</mi><mi>a</mi><mi>l</mi></mrow><mrow><mspace linebreak="newline"></mspace><mi>p</mi><mi>a</mi><mi>r</mi><mi>t</mi><mi>i</mi><mi>a</mi><mi>l</mi><mspace linebreak="newline"></mspace><mi>t</mi><mi>h</mi><mi>e</mi><mi>t</mi><mi>a</mi><mi mathvariant="normal">_</mi><mi>j</mi></mrow><mi>L</mi><mi mathvariant="normal">_</mi><mn>2</mn><mo>=</mo><mn>2</mn><mspace linebreak="newline"></mspace><mi>a</mi><mi>l</mi><mi>p</mi><mi>h</mi><mi>a</mi><mi>w</mi><mi mathvariant="normal">_</mi><mi>i</mi><mtext> </mtext></mrow><annotation encoding="application/x-tex">\\frac{\\partial}{\\partial \\theta\_j}L\_2 = 2\\alpha w\_i </annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1.0044em;vertical-align:-0.31em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal">a</span><span class="mord mathnormal">c</span><span class="mord"><span class="mspace newline"></span><span class="mord mathnormal">p</span><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal">t</span><span class="mord mathnormal">ia</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span></span><span class="mord"><span class="mspace newline"></span><span class="mord mathnormal">p</span><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal">t</span><span class="mord mathnormal">ia</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mspace newline"></span><span class="mord mathnormal">t</span><span class="mord mathnormal">h</span><span class="mord mathnormal">e</span><span class="mord mathnormal">t</span><span class="mord mathnormal">a</span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span></span><span class="mord mathnormal">L</span><span class="mord">_2</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">2</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1.0044em;vertical-align:-0.31em;"></span><span class="mord mathnormal">a</span><span class="mord mathnormal">lp</span><span class="mord mathnormal">ha</span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord mathnormal">i</span><span class="mord"> </span></span></span></span></p><p>其中 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>J</mi><mi mathvariant="normal">_</mi><mn>0</mn></mrow><annotation encoding="application/x-tex">J\_0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9933em;vertical-align:-0.31em;"></span><span class="mord mathnormal" style="margin-right:0.09618em;">J</span><span class="mord">_0</span></span></span></span> 即是线性回归的损失函数，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>L</mi><mi mathvariant="normal">_</mi><mn>2</mn></mrow><annotation encoding="application/x-tex">L\_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9933em;vertical-align:-0.31em;"></span><span class="mord mathnormal">L</span><span class="mord">_2</span></span></span></span> 是添加的正则项。</p><p><strong>综上所述</strong>，L2正则化权重更新如下（<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>2</mn><mspace linebreak="newline"></mspace><mi>a</mi><mi>l</mi><mi>p</mi><mi>h</mi><mi>a</mi></mrow><annotation encoding="application/x-tex">2\\alpha</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">2</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">a</span><span class="mord mathnormal">lp</span><span class="mord mathnormal">ha</span></span></span></span> 也是常数项，可以合并到一起用整体 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mspace linebreak="newline"></mspace><mi>a</mi><mi>l</mi><mi>p</mi><mi>h</mi><mi>a</mi></mrow><annotation encoding="application/x-tex">\\alpha</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">a</span><span class="mord mathnormal">lp</span><span class="mord mathnormal">ha</span></span></span></span> 替代）：</p><p>\\theta\_j^{n + 1} = \\theta_j^{n}(1-\\eta _\\alpha) -\\eta_ \\sum\\limits_{i = 1}^{n} (h\_{\\theta}(x^{(i)}) - y^{(i)} )x\_j^{(i)}</p><p>其中 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mspace linebreak="newline"></mspace><mi>a</mi><mi>l</mi><mi>p</mi><mi>h</mi><mi>a</mi></mrow><annotation encoding="application/x-tex">\\alpha</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">a</span><span class="mord mathnormal">lp</span><span class="mord mathnormal">ha</span></span></span></span> 就是正则化参数，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mspace linebreak="newline"></mspace><mi>e</mi><mi>t</mi><mi>a</mi></mrow><annotation encoding="application/x-tex">\\eta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.6151em;"></span><span class="mord mathnormal">e</span><span class="mord mathnormal">t</span><span class="mord mathnormal">a</span></span></span></span> 表示学习率。从上式可以看到，与未添加L2正则化的迭代公式相比，每一次迭代， <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mspace linebreak="newline"></mspace><mi>t</mi><mi>h</mi><mi>e</mi><mi>t</mi><mi>a</mi><mi mathvariant="normal">_</mi><mi>j</mi></mrow><annotation encoding="application/x-tex">\\theta\_j</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1.0044em;vertical-align:-0.31em;"></span><span class="mord mathnormal">t</span><span class="mord mathnormal">h</span><span class="mord mathnormal">e</span><span class="mord mathnormal">t</span><span class="mord mathnormal">a</span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span></span></span></span> 都要先乘以一个小于1的因子（即 (1-\\eta \* \\alpha) ），从而使得 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mspace linebreak="newline"></mspace><mi>t</mi><mi>h</mi><mi>e</mi><mi>t</mi><mi>a</mi><mi mathvariant="normal">_</mi><mi>j</mi></mrow><annotation encoding="application/x-tex">\\theta\_j</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1.0044em;vertical-align:-0.31em;"></span><span class="mord mathnormal">t</span><span class="mord mathnormal">h</span><span class="mord mathnormal">e</span><span class="mord mathnormal">t</span><span class="mord mathnormal">a</span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span></span></span></span> 加速减小，因此总的来看，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mspace linebreak="newline"></mspace><mi>t</mi><mi>h</mi><mi>e</mi><mi>t</mi><mi>a</mi></mrow><annotation encoding="application/x-tex">\\theta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal">t</span><span class="mord mathnormal">h</span><span class="mord mathnormal">e</span><span class="mord mathnormal">t</span><span class="mord mathnormal">a</span></span></span></span> 相比不加L2正则项的线性回归可以获得更小的值。从而，实现了防止过拟合的效果，增加模型的鲁棒性~</p><p>有的书本上，公式写法可能<strong>不同</strong>：其中 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mspace linebreak="newline"></mspace><mi>l</mi><mi>a</mi><mi>m</mi><mi>b</mi><mi>d</mi><mi>a</mi></mrow><annotation encoding="application/x-tex">\\lambda</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">amb</span><span class="mord mathnormal">d</span><span class="mord mathnormal">a</span></span></span></span> 表示正则化参数。</p><p>\\theta\_j^{n + 1} = \\theta_j^{n}(1-\\eta _\\lambda) -\\eta_ \\sum\\limits_{i = 1}^{n} (h\_{\\theta}(x^{(i)}) - y^{(i)} )x\_j^{(i)}</p><h3 id="3、线性回归衍生算法">3、线性回归衍生算法</h3><p>接下来，我们一起学习一下scikit-learn中为我们提供的线性回归衍生算法，根据上面所学的原理，对比线性回归加深理解。</p><h4 id="3-1、Ridge算法使用">3.1、Ridge算法使用</h4><p>这是scikit-learn官网给出的岭回归的，损失函数公式，注意，它用的矩阵表示，里面用到范数运算。</p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mspace linebreak="newline"></mspace><mi>u</mi><mi>n</mi><mi>d</mi><mi>e</mi><mi>r</mi><mi>s</mi><mi>e</mi><mi>t</mi><mi>w</mi><mspace linebreak="newline"></mspace><mi>m</mi><mi>i</mi><mi>n</mi><mi>X</mi><mi>w</mi><mo>−</mo><mi>y</mi><mi mathvariant="normal">_</mi><msup><mn>2</mn><mn>2</mn></msup><mo>+</mo><mspace linebreak="newline"></mspace><mi>a</mi><mi>l</mi><mi>p</mi><mi>h</mi><mi>a</mi><mi>w</mi><mi mathvariant="normal">_</mi><msup><mn>2</mn><mn>2</mn></msup></mrow><annotation encoding="application/x-tex">\\underset{w}\\min X w - y\_2^2 + \\alpha w\_2^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal">u</span><span class="mord mathnormal">n</span><span class="mord mathnormal">d</span><span class="mord mathnormal">erse</span><span class="mord mathnormal">t</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span></span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.7667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal">min</span><span class="mord mathnormal" style="margin-right:0.02691em;">Xw</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.1241em;vertical-align:-0.31em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1.1241em;vertical-align:-0.31em;"></span><span class="mord mathnormal">a</span><span class="mord mathnormal">lp</span><span class="mord mathnormal">ha</span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span></p><p>L2正则化和普通线性回归系数对比：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs Python"><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<br><span class="hljs-keyword">from</span> sklearn.linear_model <span class="hljs-keyword">import</span> Ridge<br><span class="hljs-keyword">from</span> sklearn.linear_model <span class="hljs-keyword">import</span> SGDRegressor<br><br><span class="hljs-comment"># 1、创建数据集X，y</span><br>X = <span class="hljs-number">2</span>*np.random.rand(<span class="hljs-number">100</span>, <span class="hljs-number">5</span>)<br>w = np.random.randint(<span class="hljs-number">1</span>,<span class="hljs-number">10</span>,size = (<span class="hljs-number">5</span>,<span class="hljs-number">1</span>))<br>b = np.random.randint(<span class="hljs-number">1</span>,<span class="hljs-number">10</span>,size = <span class="hljs-number">1</span>)<br>y = X.dot(w) + b + np.random.randn(<span class="hljs-number">100</span>, <span class="hljs-number">1</span>)<br><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;原始方程的斜率：&#x27;</span>,w.ravel())<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;原始方程的截距：&#x27;</span>,b)<br><br>ridge = Ridge(alpha= <span class="hljs-number">1</span>, solver=<span class="hljs-string">&#x27;sag&#x27;</span>)<br>ridge.fit(X, y)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;岭回归求解的斜率：&#x27;</span>,ridge.coef_)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;岭回归求解的截距：&#x27;</span>,ridge.intercept_)<br><br><span class="hljs-comment"># 线性回归梯度下降方法</span><br>sgd = SGDRegressor(penalty=<span class="hljs-string">&#x27;l2&#x27;</span>,alpha=<span class="hljs-number">0</span>,l1_ratio=<span class="hljs-number">0</span>)<br>sgd.fit(X, y.reshape(-<span class="hljs-number">1</span>,))<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;随机梯度下降求解的斜率是：&#x27;</span>,sgd.coef_)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;随机梯度下降求解的截距是：&#x27;</span>,sgd.intercept_)<br></code></pre></td></tr></table></figure><p><strong>结论：</strong></p><ul><li>和没有正则项约束线性回归对比，可知L2正则化，将方程系数进行了缩小</li><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mspace linebreak="newline"></mspace><mi>a</mi><mi>l</mi><mi>p</mi><mi>h</mi><mi>a</mi></mrow><annotation encoding="application/x-tex">\\alpha</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">a</span><span class="mord mathnormal">lp</span><span class="mord mathnormal">ha</span></span></span></span> 增大求解出来的方程斜率变小</li><li>Ridge回归源码解析：<ul><li>alpha：正则项系数</li><li>fit_intercept：是否计算 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>w</mi><mi mathvariant="normal">_</mi><mn>0</mn></mrow><annotation encoding="application/x-tex">w\_0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9544em;vertical-align:-0.31em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mord">_0</span></span></span></span> 截距项</li><li>normalize：是否做归一化</li><li>max_iter：最大迭代次数</li><li>tol：结果的精确度</li><li>solver：优化算法的选择</li></ul></li></ul><h4 id="3-2、Lasso算法使用">3.2、Lasso算法使用</h4><p>这是scikit-learn官网给出的套索回归的，损失函数公式，注意，它用的矩阵表示，里面用到范数运算。</p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mspace linebreak="newline"></mspace><mi>u</mi><mi>n</mi><mi>d</mi><mi>e</mi><mi>r</mi><mi>s</mi><mi>e</mi><mi>t</mi><mi>w</mi><mspace linebreak="newline"></mspace><mi>m</mi><mi>i</mi><mi>n</mi><mrow><mspace linebreak="newline"></mspace><mi>f</mi><mi>r</mi><mi>a</mi><mi>c</mi><mn>1</mn><mrow><mn>2</mn><mi>n</mi><mi mathvariant="normal">_</mi><mrow><mspace linebreak="newline"></mspace><mi>t</mi><mi>e</mi><mi>x</mi><mi>t</mi><mrow><mi>s</mi><mi>a</mi><mi>m</mi><mi>p</mi><mi>l</mi><mi>e</mi><mi>s</mi></mrow></mrow></mrow><mi>X</mi><mi>w</mi><mo>−</mo><mi>y</mi><mi mathvariant="normal">_</mi><msup><mn>2</mn><mn>2</mn></msup><mo>+</mo><mspace linebreak="newline"></mspace><mi>a</mi><mi>l</mi><mi>p</mi><mi>h</mi><mi>a</mi><mi>w</mi><mi mathvariant="normal">_</mi><mn>1</mn></mrow></mrow><annotation encoding="application/x-tex">\\underset{w}\\min { \\frac{1}{2n\_{\\text{samples}}} X w - y\_2 ^ 2 + \\alpha w\_1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal">u</span><span class="mord mathnormal">n</span><span class="mord mathnormal">d</span><span class="mord mathnormal">erse</span><span class="mord mathnormal">t</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span></span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1.1241em;vertical-align:-0.31em;"></span><span class="mord mathnormal">min</span><span class="mord"><span class="mspace newline"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal">a</span><span class="mord mathnormal">c</span><span class="mord"><span class="mord">1</span></span><span class="mord"><span class="mord">2</span><span class="mord mathnormal">n</span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord"><span class="mspace newline"></span><span class="mord mathnormal">t</span><span class="mord mathnormal">e</span><span class="mord mathnormal">x</span><span class="mord mathnormal">t</span><span class="mord"><span class="mord mathnormal">s</span><span class="mord mathnormal">am</span><span class="mord mathnormal" style="margin-right:0.01968em;">pl</span><span class="mord mathnormal">es</span></span></span></span><span class="mord mathnormal" style="margin-right:0.02691em;">Xw</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace newline"></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal">a</span><span class="mord mathnormal">lp</span><span class="mord mathnormal">ha</span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mord">_1</span></span></span></span></span></p><p>公式中多了一项：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mspace linebreak="newline"></mspace><mi>f</mi><mi>r</mi><mi>a</mi><mi>c</mi><mn>1</mn><mrow><mn>2</mn><mi>n</mi><mi mathvariant="normal">_</mi><mrow><mi>s</mi><mi>a</mi><mi>m</mi><mi>p</mi><mi>l</mi><mi>e</mi><mi>s</mi></mrow></mrow></mrow><annotation encoding="application/x-tex">\\frac{1}{2n\_{samples}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1.0044em;vertical-align:-0.31em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal">a</span><span class="mord mathnormal">c</span><span class="mord"><span class="mord">1</span></span><span class="mord"><span class="mord">2</span><span class="mord mathnormal">n</span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord"><span class="mord mathnormal">s</span><span class="mord mathnormal">am</span><span class="mord mathnormal" style="margin-right:0.01968em;">pl</span><span class="mord mathnormal">es</span></span></span></span></span></span>这是一个常数项，去掉之后，也不会影响损失函数公式计算。在岭回归中，就没有这项。</p><p>L1正则化和普通线性回归系数对比：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs Python"><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<br><span class="hljs-keyword">from</span> sklearn.linear_model <span class="hljs-keyword">import</span> Lasso<br><span class="hljs-keyword">from</span> sklearn.linear_model <span class="hljs-keyword">import</span> SGDRegressor<br><br><span class="hljs-comment"># 1、创建数据集X，y</span><br>X = <span class="hljs-number">2</span>*np.random.rand(<span class="hljs-number">100</span>, <span class="hljs-number">20</span>)<br>w = np.random.randn(<span class="hljs-number">20</span>,<span class="hljs-number">1</span>)<br>b = np.random.randint(<span class="hljs-number">1</span>,<span class="hljs-number">10</span>,size = <span class="hljs-number">1</span>)<br>y = X.dot(w) + b + np.random.randn(<span class="hljs-number">100</span>, <span class="hljs-number">1</span>)<br><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;原始方程的斜率：&#x27;</span>,w.ravel())<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;原始方程的截距：&#x27;</span>,b)<br><br>lasso = Lasso(alpha= <span class="hljs-number">0.5</span>)<br>lasso.fit(X, y)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;套索回归求解的斜率：&#x27;</span>,lasso.coef_)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;套索回归求解的截距：&#x27;</span>,lasso.intercept_)<br><br><span class="hljs-comment"># 线性回归梯度下降方法</span><br>sgd = SGDRegressor(penalty=<span class="hljs-string">&#x27;l2&#x27;</span>,alpha=<span class="hljs-number">0</span>, l1_ratio=<span class="hljs-number">0</span>)<br>sgd.fit(X, y.reshape(-<span class="hljs-number">1</span>,))<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;随机梯度下降求解的斜率是：&#x27;</span>,sgd.coef_)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;随机梯度下降求解的截距是：&#x27;</span>,sgd.intercept_)<br></code></pre></td></tr></table></figure><p><strong>结论：</strong></p><ul><li>和没有正则项约束线性回归对比，可知L1正则化，将方程系数进行了缩减，部分系数为0，产生稀疏模型</li><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mspace linebreak="newline"></mspace><mi>a</mi><mi>l</mi><mi>p</mi><mi>h</mi><mi>a</mi></mrow><annotation encoding="application/x-tex">\\alpha</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">a</span><span class="mord mathnormal">lp</span><span class="mord mathnormal">ha</span></span></span></span> 越大，模型稀疏性越强，越多的参数为0</li><li>Lasso回归源码解析：<ul><li>alpha：正则项系数</li><li>fit_intercept：是否计算 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>w</mi><mi mathvariant="normal">_</mi><mn>0</mn></mrow><annotation encoding="application/x-tex">w\_0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9544em;vertical-align:-0.31em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mord">_0</span></span></span></span> 截距项</li><li>normalize：是否做归一化</li><li>precompute：bool 类型，默认值为False，决定是否提前计算Gram矩阵来加速计算</li><li>max_iter：最大迭代次数</li><li>tol：结果的精确度</li><li>warm_start：bool类型，默认值为False。如果为True，那么使⽤用前⼀次训练结果继续训练。否则从头开始训练</li></ul></li></ul><h4 id="3-3、Elastic-Net算法使用">3.3、Elastic-Net算法使用</h4><p>这是scikit-learn官网给出的弹性网络回归的，损失函数公式，注意，它用的矩阵表示，里面用到范数运算。</p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mspace linebreak="newline"></mspace><mi>u</mi><mi>n</mi><mi>d</mi><mi>e</mi><mi>r</mi><mi>s</mi><mi>e</mi><mi>t</mi><mi>w</mi><mspace linebreak="newline"></mspace><mi>m</mi><mi>i</mi><mi>n</mi><mrow><mspace linebreak="newline"></mspace><mi>f</mi><mi>r</mi><mi>a</mi><mi>c</mi><mn>1</mn><mrow><mn>2</mn><mi>n</mi><mi mathvariant="normal">_</mi><mrow><mspace linebreak="newline"></mspace><mi>t</mi><mi>e</mi><mi>x</mi><mi>t</mi><mrow><mi>s</mi><mi>a</mi><mi>m</mi><mi>p</mi><mi>l</mi><mi>e</mi><mi>s</mi></mrow></mrow></mrow><mi>X</mi><mi>w</mi><mo>−</mo><mi>y</mi><mi mathvariant="normal">_</mi><msup><mn>2</mn><mn>2</mn></msup><mo>+</mo><mspace linebreak="newline"></mspace><mi>a</mi><mi>l</mi><mi>p</mi><mi>h</mi><mi>a</mi><mspace linebreak="newline"></mspace><mi>r</mi><mi>h</mi><mi>o</mi><mi>w</mi><mi mathvariant="normal">_</mi><mn>1</mn><mo>+</mo><mspace linebreak="newline"></mspace><mi>f</mi><mi>r</mi><mi>a</mi><mi>c</mi><mrow><mspace linebreak="newline"></mspace><mi>a</mi><mi>l</mi><mi>p</mi><mi>h</mi><mi>a</mi><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><mspace linebreak="newline"></mspace><mi>r</mi><mi>h</mi><mi>o</mi><mo stretchy="false">)</mo></mrow><mn>2</mn><mi>w</mi><mi mathvariant="normal">_</mi><msup><mn>2</mn><mn>2</mn></msup></mrow></mrow><annotation encoding="application/x-tex">\\underset{w}\\min { \\frac{1}{2n\_{\\text{samples}}} X w - y\_2 ^ 2 + \\alpha \\rho w\_1 + \\frac{\\alpha(1-\\rho)}{2} w\_2 ^ 2}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal">u</span><span class="mord mathnormal">n</span><span class="mord mathnormal">d</span><span class="mord mathnormal">erse</span><span class="mord mathnormal">t</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span></span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1.1241em;vertical-align:-0.31em;"></span><span class="mord mathnormal">min</span><span class="mord"><span class="mspace newline"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal">a</span><span class="mord mathnormal">c</span><span class="mord"><span class="mord">1</span></span><span class="mord"><span class="mord">2</span><span class="mord mathnormal">n</span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord"><span class="mspace newline"></span><span class="mord mathnormal">t</span><span class="mord mathnormal">e</span><span class="mord mathnormal">x</span><span class="mord mathnormal">t</span><span class="mord"><span class="mord mathnormal">s</span><span class="mord mathnormal">am</span><span class="mord mathnormal" style="margin-right:0.01968em;">pl</span><span class="mord mathnormal">es</span></span></span></span><span class="mord mathnormal" style="margin-right:0.02691em;">Xw</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace newline"></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal">a</span><span class="mord mathnormal">lp</span><span class="mord mathnormal">ha</span><span class="mspace newline"></span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal">h</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mord">_1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace newline"></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal">a</span><span class="mord mathnormal">c</span><span class="mord"><span class="mspace newline"></span><span class="mord mathnormal">a</span><span class="mord mathnormal">lp</span><span class="mord mathnormal">ha</span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace newline"></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal">h</span><span class="mord mathnormal">o</span><span class="mclose">)</span></span><span class="mord"><span class="mord">2</span></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span></span></p><p>Elastic-Net 回归，即岭回归和Lasso技术的混合。弹性网络是一种使用 L1， L2 范数作为先验正则项训练的线性回归模型。 这种组合允许学习到一个只有少量参数是非零稀疏的模型，就像 Lasso 一样，但是它仍然保持一些像 Ridge 的正则性质。我们可利用 l1_ratio 参数控制 L1 和 L2 的凸组合。</p><p>弹性网络在很多特征互相联系（相关性，比如<strong>身高</strong>和<strong>体重</strong>就很有关系）的情况下是非常有用的。Lasso 很可能只随机考虑这些特征中的一个，而弹性网络更倾向于选择两个。</p><p>在实践中，Lasso 和 Ridge 之间权衡的一个优势是它允许在迭代过程中继承 Ridge 的稳定性。</p><p>弹性网络回归和普通线性回归系数对比：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs Python"><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<br><span class="hljs-keyword">from</span> sklearn.linear_model <span class="hljs-keyword">import</span> ElasticNet<br><span class="hljs-keyword">from</span> sklearn.linear_model <span class="hljs-keyword">import</span> SGDRegressor<br><br><span class="hljs-comment"># 1、创建数据集X，y</span><br>X = <span class="hljs-number">2</span>*np.random.rand(<span class="hljs-number">100</span>, <span class="hljs-number">20</span>)<br>w = np.random.randn(<span class="hljs-number">20</span>,<span class="hljs-number">1</span>)<br>b = np.random.randint(<span class="hljs-number">1</span>,<span class="hljs-number">10</span>,size = <span class="hljs-number">1</span>)<br>y = X.dot(w) + b + np.random.randn(<span class="hljs-number">100</span>, <span class="hljs-number">1</span>)<br><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;原始方程的斜率：&#x27;</span>,w.ravel())<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;原始方程的截距：&#x27;</span>,b)<br><br>model = ElasticNet(alpha= <span class="hljs-number">1</span>, l1_ratio = <span class="hljs-number">0.7</span>)<br>model.fit(X, y)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;弹性网络回归求解的斜率：&#x27;</span>,model.coef_)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;弹性网络回归求解的截距：&#x27;</span>,model.intercept_)<br><br><span class="hljs-comment"># 线性回归梯度下降方法</span><br>sgd = SGDRegressor(penalty=<span class="hljs-string">&#x27;l2&#x27;</span>,alpha=<span class="hljs-number">0</span>, l1_ratio=<span class="hljs-number">0</span>)<br>sgd.fit(X, y.reshape(-<span class="hljs-number">1</span>,))<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;随机梯度下降求解的斜率是：&#x27;</span>,sgd.coef_)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;随机梯度下降求解的截距是：&#x27;</span>,sgd.intercept_)<br></code></pre></td></tr></table></figure><p><strong>结论：</strong></p><ul><li>和没有正则项约束线性回归对比，可知Elastic-Net网络模型，融合了L1正则化L2正则化</li><li>Elastic-Net 回归源码解析：<ul><li>alpha：混合惩罚项的常数</li><li>l1_ratio：弹性网混合参数，0 &lt;= l1_ratio &lt;= 1，对于 l1_ratio = 0，惩罚项是L2正则惩罚。对于 l1_ratio = 1是L1正则惩罚。对于 0</li><li>fit_intercept：是否计算 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>w</mi><mi mathvariant="normal">_</mi><mn>0</mn></mrow><annotation encoding="application/x-tex">w\_0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9544em;vertical-align:-0.31em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mord">_0</span></span></span></span> 截距项</li><li>normalize：是否做归一化</li><li>precompute：bool 类型，默认值为False，决定是否提前计算Gram矩阵来加速计算</li><li>max_iter：最大迭代次数</li><li>tol：结果的精确度</li><li>warm_start：bool类型，默认值为False。如果为True，那么使⽤用前⼀次训练结果继续训练。否则从头开始训练</li></ul></li></ul><h3 id="4、多项式回归">4、多项式回归</h3><h4 id="4-1、多项式回归基本概念">4.1、多项式回归基本概念</h4><p>升维的目的是为了去解决欠拟合的问题的，也就是为了提高模型的准确率为目的的，因为当维度不够时，说白了就是对于预测结果考虑的因素少的话，肯定不能准确的计算出模型。</p><p>![]()</p><p>在做升维的时候，最常见的手段就是将已知维度进行相乘（或者自乘）来构建新的维度，如下图所示。普通线性方程，无法拟合规律，必须是多项式，才可以完美拟合曲线规律，图中是二次多项式。</p><p>![]()</p><p>对于多项式回归来说主要是为了扩展线性回归算法来适应更广泛的数据集，比如我们数据集有两个维度 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi><mi mathvariant="normal">_</mi><mn>1</mn><mtext>、</mtext><mi>x</mi><mi mathvariant="normal">_</mi><mn>2</mn></mrow><annotation encoding="application/x-tex">x\_1、x\_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9933em;vertical-align:-0.31em;"></span><span class="mord mathnormal">x</span><span class="mord">_1</span><span class="mord cjk_fallback">、</span><span class="mord mathnormal">x</span><span class="mord">_2</span></span></span></span>，那么用多元线性回归公式就是：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mspace linebreak="newline"></mspace><mi>h</mi><mi>a</mi><mi>t</mi><mi>y</mi><mo>=</mo><mi>w</mi><mi mathvariant="normal">_</mi><mn>0</mn><mo>+</mo><mi>w</mi><mi mathvariant="normal">_</mi><mn>1</mn><mi>x</mi><mi mathvariant="normal">_</mi><mn>1</mn><mo>+</mo><mi>w</mi><mi mathvariant="normal">_</mi><mn>2</mn><mi>x</mi><mi mathvariant="normal">_</mi><mn>2</mn></mrow><annotation encoding="application/x-tex">\\hat{y} = w\_0 + w\_1x\_1 + w\_2x\_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">ha</span><span class="mord mathnormal">t</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.9544em;vertical-align:-0.31em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mord">_0</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.9544em;vertical-align:-0.31em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mord">_1</span><span class="mord mathnormal">x</span><span class="mord">_1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.9544em;vertical-align:-0.31em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mord">_2</span><span class="mord mathnormal">x</span><span class="mord">_2</span></span></span></span>，当我们使用二阶多项式升维的时候，数据集就从原来的 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi><mi mathvariant="normal">_</mi><mn>1</mn><mtext>、</mtext><mi>x</mi><mi mathvariant="normal">_</mi><mn>2</mn></mrow><annotation encoding="application/x-tex">x\_1、x\_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9933em;vertical-align:-0.31em;"></span><span class="mord mathnormal">x</span><span class="mord">_1</span><span class="mord cjk_fallback">、</span><span class="mord mathnormal">x</span><span class="mord">_2</span></span></span></span>扩展成了<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi><mi mathvariant="normal">_</mi><mn>1</mn><mtext>、</mtext><mi>x</mi><mi mathvariant="normal">_</mi><mn>2</mn><mtext>、</mtext><mi>x</mi><mi mathvariant="normal">_</mi><msup><mn>1</mn><mn>2</mn></msup><mtext>、</mtext><mi>x</mi><mi mathvariant="normal">_</mi><msup><mn>2</mn><mn>2</mn></msup><mtext>、</mtext><mi>x</mi><mi mathvariant="normal">_</mi><mn>1</mn><mi>x</mi><mi mathvariant="normal">_</mi><mn>2</mn></mrow><annotation encoding="application/x-tex">x\_1、x\_2、x\_1^2、x\_2^2、x\_1x\_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.1241em;vertical-align:-0.31em;"></span><span class="mord mathnormal">x</span><span class="mord">_1</span><span class="mord cjk_fallback">、</span><span class="mord mathnormal">x</span><span class="mord">_2</span><span class="mord cjk_fallback">、</span><span class="mord mathnormal">x</span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord"><span class="mord">1</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mord cjk_fallback">、</span><span class="mord mathnormal">x</span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mord cjk_fallback">、</span><span class="mord mathnormal">x</span><span class="mord">_1</span><span class="mord mathnormal">x</span><span class="mord">_2</span></span></span></span> 。因此多元线性回归就得去多计算三个维度所对应的w值：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mspace linebreak="newline"></mspace><mi>h</mi><mi>a</mi><mi>t</mi><mi>y</mi><mo>=</mo><mi>w</mi><mi mathvariant="normal">_</mi><mn>0</mn><mo>+</mo><mi>w</mi><mi mathvariant="normal">_</mi><mn>1</mn><mi>x</mi><mi mathvariant="normal">_</mi><mn>1</mn><mo>+</mo><mi>w</mi><mi mathvariant="normal">_</mi><mn>2</mn><mi>x</mi><mi mathvariant="normal">_</mi><mn>2</mn><mo>+</mo><mi>w</mi><mi mathvariant="normal">_</mi><mn>3</mn><mi>x</mi><mi mathvariant="normal">_</mi><msup><mn>1</mn><mn>2</mn></msup><mo>+</mo><mi>w</mi><mi mathvariant="normal">_</mi><mn>4</mn><mi>x</mi><mi mathvariant="normal">_</mi><msup><mn>2</mn><mn>2</mn></msup><mo>+</mo><mi>w</mi><mi mathvariant="normal">_</mi><mn>5</mn><mi>x</mi><mi mathvariant="normal">_</mi><mn>1</mn><mi>x</mi><mi mathvariant="normal">_</mi><mn>2</mn></mrow><annotation encoding="application/x-tex">\\hat{y} = w\_0 + w\_1x\_1 + w\_2x\_2 + w\_3x\_1^2 + w\_4x\_2^2 + w\_5x\_1x\_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">ha</span><span class="mord mathnormal">t</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.9544em;vertical-align:-0.31em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mord">_0</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.9544em;vertical-align:-0.31em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mord">_1</span><span class="mord mathnormal">x</span><span class="mord">_1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.9544em;vertical-align:-0.31em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mord">_2</span><span class="mord mathnormal">x</span><span class="mord">_2</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.1241em;vertical-align:-0.31em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mord">_3</span><span class="mord mathnormal">x</span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord"><span class="mord">1</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.1241em;vertical-align:-0.31em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mord">_4</span><span class="mord mathnormal">x</span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.9544em;vertical-align:-0.31em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mord">_5</span><span class="mord mathnormal">x</span><span class="mord">_1</span><span class="mord mathnormal">x</span><span class="mord">_2</span></span></span></span> 。</p><p>此时拟合出来的方程就是曲线，可以解决一些线性回归的欠拟合问题！</p><h4 id="4-2、多项式回归实战1-0">4.2、多项式回归实战1.0</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs Python"><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<br><span class="hljs-keyword">import</span> matplotlib.pyplot <span class="hljs-keyword">as</span> plt<br><span class="hljs-keyword">from</span> sklearn.linear_model <span class="hljs-keyword">import</span> LinearRegression<br><br><span class="hljs-comment"># 1、创建数据，并进行可视化</span><br>X = np.linspace(-<span class="hljs-number">1</span>,<span class="hljs-number">11</span>,num = <span class="hljs-number">100</span>)<br>y = (X - <span class="hljs-number">5</span>)**<span class="hljs-number">2</span> + <span class="hljs-number">3</span>*X -<span class="hljs-number">12</span> + np.random.randn(<span class="hljs-number">100</span>)<br>X = X.reshape(-<span class="hljs-number">1</span>,<span class="hljs-number">1</span>)<br>plt.scatter(X,y)<br><br><span class="hljs-comment"># 2、创建预测数据</span><br>X_test = np.linspace(-<span class="hljs-number">2</span>,<span class="hljs-number">12</span>,num = <span class="hljs-number">200</span>).reshape(-<span class="hljs-number">1</span>,<span class="hljs-number">1</span>)<br><br><span class="hljs-comment"># 3、不进行升维 + 普通线性回归</span><br>model_1 = LinearRegression()<br>model_1.fit(X,y)<br>y_test_1 = model_1.predict(X_test)<br>plt.plot(X_test,y_test,color = <span class="hljs-string">&#x27;red&#x27;</span>)<br><br><span class="hljs-comment"># 4、多项式升维 + 普通线性回归</span><br>X = np.concatenate([X,X**<span class="hljs-number">2</span>],axis = <span class="hljs-number">1</span>)<br>model_2 = LinearRegression()<br>model_2.fit(X,y)<br><span class="hljs-comment"># 5、测试数据处理，并预测</span><br>X_test = np.concatenate([X_test,X_test**<span class="hljs-number">2</span>],axis = <span class="hljs-number">1</span>)<br>y_test_2 = model_2.predict(X_test)<br><br><span class="hljs-comment"># 6、数据可视化，切片操作</span><br>plt.plot(X_test[:,<span class="hljs-number">0</span>],y_test_2,color = <span class="hljs-string">&#x27;green&#x27;</span>)<br></code></pre></td></tr></table></figure><p><strong>结论：</strong></p><ul><li>不进行多项式升维，拟合出来的曲线，是线性的直线，和目标曲线无法匹配</li><li>使用np.concatenate()进行简单的，幂次合并，注意数据合并的方向axis = 1</li><li>数据可视化时，注意切片，因为数据升维后，多了平方这一维</li></ul><p>![]()</p><h4 id="4-3、多项式回归实战2-0">4.3、多项式回归实战2.0</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs Python"><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<br><span class="hljs-keyword">import</span> matplotlib.pyplot <span class="hljs-keyword">as</span> plt<br><span class="hljs-keyword">from</span> sklearn.preprocessing <span class="hljs-keyword">import</span> PolynomialFeatures,StandardScaler<br><span class="hljs-keyword">from</span> sklearn.linear_model <span class="hljs-keyword">import</span> SGDRegressor<br><br><span class="hljs-comment"># 1、创建数据，并进行可视化</span><br>X = np.linspace(-<span class="hljs-number">1</span>,<span class="hljs-number">11</span>,num = <span class="hljs-number">100</span>)<br>y = (X - <span class="hljs-number">5</span>)**<span class="hljs-number">2</span> + <span class="hljs-number">3</span>*X -<span class="hljs-number">12</span> + np.random.randn(<span class="hljs-number">100</span>)<br>X = X.reshape(-<span class="hljs-number">1</span>,<span class="hljs-number">1</span>)<br>plt.scatter(X,y)<br><br><span class="hljs-comment"># 2、创建预测数据</span><br>X_test = np.linspace(-<span class="hljs-number">2</span>,<span class="hljs-number">12</span>,num = <span class="hljs-number">200</span>).reshape(-<span class="hljs-number">1</span>,<span class="hljs-number">1</span>)<br><br><span class="hljs-comment"># 3、使用PolynomialFeatures进行特征升维</span><br>poly = PolynomialFeatures()<br>poly.fit(X,y)<br>X = poly.transform(X)<br>s = StandardScaler()<br>X = s.fit_transform(X)<br><span class="hljs-comment"># model = SGDRegressor(penalty=&#x27;l2&#x27;,eta0 = 0.0001,max_iter = 10000)</span><br>model = SGDRegressor(penalty=<span class="hljs-string">&#x27;l2&#x27;</span>,eta0 = <span class="hljs-number">0.01</span>)<br>model.fit(X,y)<br><br><span class="hljs-comment"># 4、预测数据</span><br>X_test = poly.transform(X_test)<br>X_test_norm = s.transform(X_test)<br>y_test = model.predict(X_test_norm)<br>plt.plot(X_test[:,<span class="hljs-number">1</span>],y_test,color = <span class="hljs-string">&#x27;green&#x27;</span>)<br></code></pre></td></tr></table></figure><p><strong>结论：</strong></p><ul><li>eta0表示学习率，设置合适的学习率，才能拟合成功</li><li>多项式升维，需要对数据进行Z-score归一化处理，效果更佳出色</li><li>SGD随机梯度下降需要调整参数，以使模型适应数据</li></ul><h3 id="5、代码实战天猫双十一销量预测">5、代码实战天猫双十一销量预测</h3><p>天猫双十一，从2009年开始举办，第一届成交额仅仅0.5亿，后面呈现了爆发式的增长，那么这些增长是否有规律呢？是怎么样的规律，该如何分析呢？我们使用多项式回归一探究竟！</p><p>![]()</p><p>数据可视化，历年天猫双十一销量数据：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs Python"><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<br><span class="hljs-keyword">from</span> sklearn.linear_model <span class="hljs-keyword">import</span> SGDRegressor<br><span class="hljs-keyword">import</span> matplotlib.pyplot <span class="hljs-keyword">as</span> plt<br>plt.rcParams[<span class="hljs-string">&#x27;font.size&#x27;</span>] = <span class="hljs-number">18</span><br>plt.figure(figsize=(<span class="hljs-number">9</span>,<span class="hljs-number">6</span>))<br><br><span class="hljs-comment"># 创建数据，年份数据2009 ~ 2019</span><br>X = np.arange(<span class="hljs-number">2009</span>,<span class="hljs-number">2020</span>)<br>y = np.array([<span class="hljs-number">0.5</span>,<span class="hljs-number">9.36</span>,<span class="hljs-number">52</span>,<span class="hljs-number">191</span>,<span class="hljs-number">350</span>,<span class="hljs-number">571</span>,<span class="hljs-number">912</span>,<span class="hljs-number">1207</span>,<span class="hljs-number">1682</span>,<span class="hljs-number">2135</span>,<span class="hljs-number">2684</span>])<br>plt.bar(X,y,width = <span class="hljs-number">0.5</span>,color = <span class="hljs-string">&#x27;green&#x27;</span>)<br>plt.plot(X,y,color = <span class="hljs-string">&#x27;red&#x27;</span>)<br>_ = plt.xticks(ticks = X)<br></code></pre></td></tr></table></figure><p>![]()</p><p>有图可知，在一定时间内，随着经济的发展，天猫双十一销量与年份的关系是多项式关系！假定，销量和年份之间关系是三次幂关系：</p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><mi>w</mi><mi mathvariant="normal">_</mi><mn>1</mn><mi>x</mi><mo>+</mo><mi>w</mi><mi mathvariant="normal">_</mi><mn>2</mn><msup><mi>x</mi><mn>2</mn></msup><mo>+</mo><mi>w</mi><mi mathvariant="normal">_</mi><mn>3</mn><msup><mi>x</mi><mn>3</mn></msup><mo>+</mo><mi>b</mi></mrow><annotation encoding="application/x-tex">f(x) = w\_1x + w\_2x^2 + w\_3x^3 + b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.9544em;vertical-align:-0.31em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mord">_1</span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.1241em;vertical-align:-0.31em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mord">_2</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.1241em;vertical-align:-0.31em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mord">_3</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal">b</span></span></span></span></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><code class="hljs Python"><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<br><span class="hljs-keyword">from</span> sklearn.linear_model <span class="hljs-keyword">import</span> SGDRegressor<br><span class="hljs-keyword">import</span> matplotlib.pyplot <span class="hljs-keyword">as</span> plt<br><span class="hljs-keyword">from</span> sklearn.preprocessing <span class="hljs-keyword">import</span> PolynomialFeatures<br><span class="hljs-keyword">from</span> sklearn.preprocessing <span class="hljs-keyword">import</span> StandardScaler<br>plt.figure(figsize=(<span class="hljs-number">12</span>,<span class="hljs-number">9</span>))<br><br><span class="hljs-comment"># 1、创建数据，年份数据2009 ~ 2019</span><br>X = np.arange(<span class="hljs-number">2009</span>,<span class="hljs-number">2020</span>)<br>y = np.array([<span class="hljs-number">0.5</span>,<span class="hljs-number">9.36</span>,<span class="hljs-number">52</span>,<span class="hljs-number">191</span>,<span class="hljs-number">350</span>,<span class="hljs-number">571</span>,<span class="hljs-number">912</span>,<span class="hljs-number">1207</span>,<span class="hljs-number">1682</span>,<span class="hljs-number">2135</span>,<span class="hljs-number">2684</span>])<br><br><span class="hljs-comment"># 2、年份数据，均值移除，防止某一个特征列数据天然的数值太大而影响结果</span><br>X = X - X.mean()<br>X = X.reshape(-<span class="hljs-number">1</span>,<span class="hljs-number">1</span>)<br><br><span class="hljs-comment"># 3、构建多项式特征，3次幂</span><br>poly = PolynomialFeatures(degree=<span class="hljs-number">3</span>)<br>X = poly.fit_transform(X)<br>s = StandardScaler()<br>X_norm = s.fit_transform(X)<br><br><span class="hljs-comment"># 4、创建模型</span><br>model = SGDRegressor(penalty=<span class="hljs-string">&#x27;l2&#x27;</span>,eta0 = <span class="hljs-number">0.5</span>,max_iter = <span class="hljs-number">5000</span>)<br>model.fit(X_norm,y)<br><br><span class="hljs-comment"># 5、数据预测</span><br>X_test = np.linspace(-<span class="hljs-number">5</span>,<span class="hljs-number">6</span>,<span class="hljs-number">100</span>).reshape(-<span class="hljs-number">1</span>,<span class="hljs-number">1</span>)<br>X_test = poly.transform(X_test)<br>X_test_norm = s.transform(X_test)<br>y_test = model.predict(X_test_norm)<br><br><span class="hljs-comment"># 6、数据可视化</span><br>plt.plot(X_test[:,<span class="hljs-number">1</span>],y_test,color = <span class="hljs-string">&#x27;green&#x27;</span>)<br>plt.bar(X[:,<span class="hljs-number">1</span>],y)<br>plt.bar(<span class="hljs-number">6</span>,y_test[-<span class="hljs-number">1</span>],color = <span class="hljs-string">&#x27;red&#x27;</span>)<br>plt.ylim(<span class="hljs-number">0</span>,<span class="hljs-number">4096</span>)<br>plt.text(<span class="hljs-number">6</span>,y_test[-<span class="hljs-number">1</span>] + <span class="hljs-number">100</span>,<span class="hljs-built_in">round</span>(y_test[-<span class="hljs-number">1</span>],<span class="hljs-number">1</span>),ha = <span class="hljs-string">&#x27;center&#x27;</span>)<br>_ = plt.xticks(np.arange(-<span class="hljs-number">5</span>,<span class="hljs-number">7</span>),np.arange(<span class="hljs-number">2009</span>,<span class="hljs-number">2021</span>))<br></code></pre></td></tr></table></figure><p>![]()</p><p><strong>结论：</strong></p><ul><li>数据预处理，均值移除。如果特征<strong>基准值和分散度</strong>不同在某些算法（例如回归算法，KNN等）上可能会大大影响了模型的预测能力。通过均值移除，大大增强数据的<strong>离散化</strong>程度。</li><li>多项式升维，需要对数据进行Z-score归一化处理，效果更佳出色</li><li>SGD随机梯度下降需要调整参数，以使模型适应多项式数据</li><li>从2020年开始，天猫双十一统计的成交额改变了规则为11.1日~11.11日的成交数据（之前的数据为双十一当天的数据），2020年成交额为<strong>4980</strong>亿元</li><li>可以，经济发展有其客观规律，前11年高速发展（曲线基本可以反应销售规律），到2020年是一个转折点</li></ul><h3 id="6、代码实战中国人寿保费预测">6、代码实战中国人寿保费预测</h3><h4 id="6-1、数据加载与介绍">6.1、数据加载与介绍</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs Python"><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<br><span class="hljs-keyword">import</span> pandas <span class="hljs-keyword">as</span> pd<br>data = pd.read_excel(<span class="hljs-string">&#x27;./中国人寿.xlsx&#x27;</span>)<br><span class="hljs-built_in">print</span>(data.shape)<br>data.head()<br></code></pre></td></tr></table></figure><p>数据介绍：</p><ul><li>共计1338条保险数据，每条数据7个属性</li><li>最后一列charges是保费</li><li>前面6列是特征，分别为：年龄、性别、体重指数、小孩数量、是否抽烟、所在地区</li></ul><h4 id="6-2、EDA数据探索">6.2、EDA数据探索</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs Python"><span class="hljs-keyword">import</span> seaborn <span class="hljs-keyword">as</span> sns<br><span class="hljs-comment"># 性别对保费影响</span><br>sns.kdeplot(data[<span class="hljs-string">&#x27;charges&#x27;</span>],shade = <span class="hljs-literal">True</span>,hue = data[<span class="hljs-string">&#x27;sex&#x27;</span>])<br><br><span class="hljs-comment"># 地区对保费影响</span><br>sns.kdeplot(data[<span class="hljs-string">&#x27;charges&#x27;</span>],shade = <span class="hljs-literal">True</span>,hue = data[<span class="hljs-string">&#x27;region&#x27;</span>])<br><br><span class="hljs-comment"># 吸烟对保费影响</span><br>sns.kdeplot(data[<span class="hljs-string">&#x27;charges&#x27;</span>],shade = <span class="hljs-literal">True</span>,hue = data[<span class="hljs-string">&#x27;smoker&#x27;</span>])<br><br><span class="hljs-comment"># 孩子数量对保费影响</span><br>sns.kdeplot(data[<span class="hljs-string">&#x27;charges&#x27;</span>],shade = <span class="hljs-literal">True</span>,hue = data[<span class="hljs-string">&#x27;children&#x27;</span>],palette=<span class="hljs-string">&#x27;Set1&#x27;</span>)<br></code></pre></td></tr></table></figure><p>总结：</p><ul><li>不同性别对保费影响不大，不同性别的保费的概率分布曲线基本重合，因此这个特征无足轻重，可以删除</li><li>地区同理</li><li>吸烟与否对保费的概率分布曲线差别很大，整体来说不吸烟更加健康，那么保费就低，这个特征很重要</li><li>家庭孩子数量对保费有一定影响</li></ul><h4 id="6-3、特征工程">6.3、特征工程</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs Python">data = data.drop([<span class="hljs-string">&#x27;region&#x27;</span>, <span class="hljs-string">&#x27;sex&#x27;</span>], axis=<span class="hljs-number">1</span>)<br>data.head() <span class="hljs-comment"># 删除不重要特征</span><br><br><span class="hljs-comment"># 体重指数，离散化转换，体重两种情况：标准、肥胖</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">convert</span>(<span class="hljs-params">df,bmi</span>):<br>    df[<span class="hljs-string">&#x27;bmi&#x27;</span>] = <span class="hljs-string">&#x27;fat&#x27;</span> <span class="hljs-keyword">if</span> df[<span class="hljs-string">&#x27;bmi&#x27;</span>] &gt;= bmi <span class="hljs-keyword">else</span> <span class="hljs-string">&#x27;standard&#x27;</span><br>    <span class="hljs-keyword">return</span> df<br>data = data.apply(convert, axis = <span class="hljs-number">1</span>, args=(<span class="hljs-number">30</span>,))<br>data.head()<br><br><span class="hljs-comment"># 特征提取，离散型数据转换为数值型数据</span><br>data = pd.get_dummies(data)<br>data.head()<br><br><span class="hljs-comment"># 特征和目标值抽取</span><br>X = data.drop(<span class="hljs-string">&#x27;charges&#x27;</span>, axis=<span class="hljs-number">1</span>) <span class="hljs-comment"># 训练数据</span><br>y = data[<span class="hljs-string">&#x27;charges&#x27;</span>] <span class="hljs-comment"># 目标值</span><br>X.head()<br></code></pre></td></tr></table></figure><h4 id="6-4、特征升维">6.4、特征升维</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs Python"><span class="hljs-keyword">from</span> sklearn.linear_model <span class="hljs-keyword">import</span> LinearRegression<br><span class="hljs-keyword">from</span> sklearn.linear_model <span class="hljs-keyword">import</span> ElasticNet<br><span class="hljs-keyword">from</span> sklearn.metrics <span class="hljs-keyword">import</span> mean_squared_error,mean_squared_log_error<br><br><span class="hljs-comment"># 数据拆分</span><br><span class="hljs-keyword">from</span> sklearn.model_selection <span class="hljs-keyword">import</span> train_test_split<br><span class="hljs-keyword">from</span> sklearn.preprocessing <span class="hljs-keyword">import</span> PolynomialFeatures<br>X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=<span class="hljs-number">0.2</span>)<br><br><span class="hljs-comment"># 特征升维</span><br>poly = PolynomialFeatures(degree= <span class="hljs-number">2</span>, include_bias = <span class="hljs-literal">False</span>)<br>X_train_poly = poly.fit_transform(X_train)<br>X_test_poly = poly.fit_transform(X_test)<br></code></pre></td></tr></table></figure><h4 id="6-5、模型训练与评估">6.5、模型训练与评估</h4><p>普通线性回归：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs Python">model_1 = LinearRegression()<br>model_1.fit(X_train_poly, y_train)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;测试数据得分：&#x27;</span>,model_1.score(X_train_poly,y_train))<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;预测数据得分：&#x27;</span>,model_1.score(X_test_poly,y_test))<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;训练数据均方误差：&#x27;</span>,np.sqrt(mean_squared_error(y_train,model_1.predict(X_train_poly))))<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;测试数据均方误差：&#x27;</span>,np.sqrt(mean_squared_error(y_test,model_1.predict(X_test_poly))))<br><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;训练数据对数误差：&#x27;</span>,np.sqrt(mean_squared_log_error(y_train,model_1.predict(X_train_poly))))<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;测试数据对数误差：&#x27;</span>,np.sqrt(mean_squared_log_error(y_test,model_1.predict(X_test_poly))))<br></code></pre></td></tr></table></figure><p>弹性网络回归：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs Python">model_2 = ElasticNet(alpha = <span class="hljs-number">0.3</span>,l1_ratio = <span class="hljs-number">0.5</span>,max_iter = <span class="hljs-number">50000</span>)<br>model_2.fit(X_train_poly,y_train)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;测试数据得分：&#x27;</span>,model_2.score(X_train_poly,y_train))<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;预测数据得分：&#x27;</span>,model_2.score(X_test_poly,y_test))<br><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;训练数据均方误差为：&#x27;</span>,np.sqrt(mean_squared_error(y_train,model_2.predict(X_train_poly))))<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;测试数据均方误差为：&#x27;</span>,np.sqrt(mean_squared_error(y_test,model_2.predict(X_test_poly))))<br><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;训练数据对数误差为：&#x27;</span>,np.sqrt(mean_squared_log_error(y_train,model_2.predict(X_train_poly))))<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;测试数据对数误差为：&#x27;</span>,np.sqrt(mean_squared_log_error(y_test,model_2.predict(X_test_poly))))<br></code></pre></td></tr></table></figure><p><strong>结论：</strong></p><ul><li>进行EDA数据探索，可以查看无关紧要特征</li><li>进行特征工程：删除无用特征、特征离散化、特征提取。这对机器学习都至关重要</li><li>对于简单的数据（特征比较少）进行线性回归，一般需要进行特征升维</li><li>选择不同的算法，进行训练和评估，从中筛选优秀算法</li></ul>]]></content>
      
      
      <categories>
          
          <category> program </category>
          
          <category> 机器学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> AI </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>梯度下降</title>
      <link href="/posts/3c50d4b7.html"/>
      <url>/posts/3c50d4b7.html</url>
      
        <content type="html"><![CDATA[<h2 id="梯度下降">梯度下降</h2><h3 id="线性回归预测房价">线性回归预测房价</h3><ul><li>数据加载</li><li>数据介绍</li><li>数据拆分</li><li>数据建模</li><li>数据预测</li><li>数据评估</li></ul><h3 id="1、无约束最优化问题">1、无约束最优化问题</h3><h4 id="1-1、无约束最优化">1.1、无约束最优化</h4><p><strong>无约束最优化问题</strong>（unconstrained optimizationproblem）指的是从一个问题的所有<strong>可能</strong>的备选方案中，选择出依某种指标来说是<strong>最优</strong>的解决方案。从数学上说，最优化是研究在一个给定的集合S上泛函<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>J</mi><mo stretchy="false">(</mo><mspace linebreak="newline"></mspace><mi>t</mi><mi>h</mi><mi>e</mi><mi>t</mi><mi>a</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">J(\\theta)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.09618em;">J</span><span class="mopen">(</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">t</span><span class="mord mathnormal">h</span><span class="mord mathnormal">e</span><span class="mord mathnormal">t</span><span class="mord mathnormal">a</span><span class="mclose">)</span></span></span></span>的极小化或极大化问题：<strong>广义上</strong>，最优化包括数学规划、图和网络、组合最优化、库存论、决策论、排队论、最优控制等。<strong>狭义上</strong>，最优化仅指数学规划。</p><h4 id="1-2、梯度下降">1.2、梯度下降</h4><p><strong>梯度下降法</strong>(Gradient Descent)是一个算法，但不是像多元线性回归那样是一个具体做回归任务的算法，而是一个非常<strong>通用</strong>的优化算法来帮助一些机器学习算法（都是无约束最优化问题）求解出<strong>最优解</strong>， 所谓的通用就是很多机器学习算法都是用梯度下降，甚至<strong>深度学习</strong>也是用它来求解最优解。所有优化算法的目的都是期望以<strong>最快</strong>的速度把模型参数θ求解出来，梯度下降法就是一种<strong>经典</strong>常用的优化算法。</p><p>之前利用正规方程求解的 θ 是最优解的原因是 MSE 这个损失函数是凸函数。但是，机器学习的损失函数并非都是凸函数，设置导数为 0 会得到很多个极值，不能确定唯一解。</p><p><img src="./%E5%9B%BE%E7%89%87/1-%E9%9D%9E%E5%87%B8%E5%87%BD%E6%95%B0.jpg" alt=""></p><p>使用正规方程 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mspace linebreak="newline"></mspace><mi>t</mi><mi>h</mi><mi>e</mi><mi>t</mi><mi>a</mi><mo>=</mo><mo stretchy="false">(</mo><msup><mi>X</mi><mi>T</mi></msup><mi>X</mi><msup><mo stretchy="false">)</mo><mrow><mo>−</mo><mn>1</mn></mrow></msup><msup><mi>X</mi><mi>T</mi></msup><mi>y</mi></mrow><annotation encoding="application/x-tex">\\theta = (X^TX)^{-1}X^Ty</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal">t</span><span class="mord mathnormal">h</span><span class="mord mathnormal">e</span><span class="mord mathnormal">t</span><span class="mord mathnormal">a</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.0913em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span></span></span> 求解的另一个限制是特征维度（<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>X</mi><mi mathvariant="normal">_</mi><mn>1</mn><mtext>、</mtext><mi>X</mi><mi mathvariant="normal">_</mi><mn>2</mn><mo>…</mo><mo>…</mo><mtext>、</mtext><mi>X</mi><mi mathvariant="normal">_</mi><mi>n</mi></mrow><annotation encoding="application/x-tex">X\_1、X\_2……、X\_n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9933em;vertical-align:-0.31em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mord">_1</span><span class="mord cjk_fallback">、</span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mord">_2</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner">……</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord cjk_fallback">、</span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord mathnormal">n</span></span></span></span>）不能太多，矩阵逆运算的时间复杂度通常为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><msup><mi>n</mi><mn>3</mn></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(n^3)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0641em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span> 。换句话说，就是如果特征数量翻倍，你的计算时间大致为原来的 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mn>2</mn><mn>3</mn></msup></mrow><annotation encoding="application/x-tex">2^3</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span></span></span></span></span></span></span></span> 倍，也就是之前时间的8倍。举个例子，2 个特征 1 秒，4 个特征就是 8 秒，8 个特征就是 64 秒，16 个特征就是 512 秒，当特征更多的时候呢？运行时间会非常漫长~</p><p>所以正规方程求出最优解<strong>并不是</strong>机器学习甚至深度学习常用的手段。</p><p>之前我们令导数为 0，反过来求解最低点 θ 是多少，而梯度下降法是<strong>一点点</strong>去逼近最优解!</p><p><img src="./%E5%9B%BE%E7%89%87/2-%E6%A2%AF%E5%BA%A6%E4%B8%8B%E9%99%8D%E6%80%9D%E6%83%B3.jpeg" alt=""></p><p>其实这就跟生活中的情形很像，比如你问一个朋友的工资是多少，他说你猜？那就很难了，他说你猜完我告诉你是猜高了还是猜低了，这样你就可以奔着对的方向一直猜下去，最后总会猜对！梯度下降法就是这样的，多次尝试。并且，在试的过程中还得想办法知道是不是在猜对的路上，说白了就是得到正确的反馈再调整然后继续猜才有意义~</p><p>这个就好比道士下山，我们把 Loss （或者称为Cost，即损失）曲线看成是<strong>山谷</strong>，如果走过了，就再往回返，所以是一个迭代的过程。</p><h4 id="1-3、梯度下降公式">1.3、梯度下降公式</h4><p>这里梯度下降法的公式就是一个式子指导计算机迭代过程中如何去调整<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mspace linebreak="newline"></mspace><mi>t</mi><mi>h</mi><mi>e</mi><mi>t</mi><mi>a</mi></mrow><annotation encoding="application/x-tex">\\theta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal">t</span><span class="mord mathnormal">h</span><span class="mord mathnormal">e</span><span class="mord mathnormal">t</span><span class="mord mathnormal">a</span></span></span></span>，可以通过泰勒公式一阶展开来进行推导和证明：</p><ul><li><p>\\theta^{n + 1} = \\theta^{n} - \\alpha \* gradient</p><p>其中 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mspace linebreak="newline"></mspace><mi>a</mi><mi>l</mi><mi>p</mi><mi>h</mi><mi>a</mi></mrow><annotation encoding="application/x-tex">\\alpha</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">a</span><span class="mord mathnormal">lp</span><span class="mord mathnormal">ha</span></span></span></span> 表示学习率，gradient 表示梯度</p></li><li><p>\\theta^{n + 1} = \\theta^{n} - \\alpha \* \\frac{\\partial J(\\theta)}{\\partial \\theta}</p><p>有些公式，使用其他字母表示：</p></li><li><p>\\theta^{n + 1} = \\theta^{n} - \\eta \* \\frac{\\partial J(\\theta)}{\\partial \\theta}</p></li><li><p>w\_j^{n + 1} = w\_j^{n} - \\eta \* \\frac{\\partial J(\\theta)}{\\partial \\theta\_j}</p></li></ul><p>这里的 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>w</mi><mi mathvariant="normal">_</mi><mi>j</mi></mrow><annotation encoding="application/x-tex">w\_j</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9695em;vertical-align:-0.31em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span></span></span></span> 就是 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mspace linebreak="newline"></mspace><mi>t</mi><mi>h</mi><mi>e</mi><mi>t</mi><mi>a</mi></mrow><annotation encoding="application/x-tex">\\theta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal">t</span><span class="mord mathnormal">h</span><span class="mord mathnormal">e</span><span class="mord mathnormal">t</span><span class="mord mathnormal">a</span></span></span></span> 中的某一个 j = 0…m，这里的 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mspace linebreak="newline"></mspace><mi>e</mi><mi>t</mi><mi>a</mi></mrow><annotation encoding="application/x-tex">\\eta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.6151em;"></span><span class="mord mathnormal">e</span><span class="mord mathnormal">t</span><span class="mord mathnormal">a</span></span></span></span> 就是梯度下降图里的 learning step，很多时候也叫学习率 learning rate，很多时候也用 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mspace linebreak="newline"></mspace><mi>a</mi><mi>l</mi><mi>p</mi><mi>h</mi><mi>a</mi></mrow><annotation encoding="application/x-tex">\\alpha</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">a</span><span class="mord mathnormal">lp</span><span class="mord mathnormal">ha</span></span></span></span> 表示，这个学习率我们可以看作是下山迈的<strong>步子</strong>的大小，步子迈的大下山就快。</p><p><img src="./%E5%9B%BE%E7%89%87/2-%E6%A2%AF%E5%BA%A6%E4%B8%8B%E9%99%8D%E6%80%9D%E6%83%B3.jpeg" alt=""></p><p>学习率一般都是<strong>正数</strong>，如果在山左侧（曲线<strong>左半边</strong>）梯度是负的，那么这个负号就会把 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>w</mi><mi mathvariant="normal">_</mi><mi>j</mi></mrow><annotation encoding="application/x-tex">w\_j</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9695em;vertical-align:-0.31em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span></span></span></span> 往大了调， 如果在山右侧（曲线右半边）梯度就是正的，那么负号就会把 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>w</mi><mi mathvariant="normal">_</mi><mi>j</mi></mrow><annotation encoding="application/x-tex">w\_j</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9695em;vertical-align:-0.31em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span></span></span></span> 往小了调。每次 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>w</mi><mi mathvariant="normal">_</mi><mi>j</mi></mrow><annotation encoding="application/x-tex">w\_j</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9695em;vertical-align:-0.31em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span></span></span></span> 调整的幅度就是 \\eta \* gradient，就是横轴上移动的距离。</p><p>因此，无论在左边，还是在右边，梯度下降都可以快速找到最优解，实现快速<strong>下山</strong>~</p><p>如果特征或维度越多，那么这个公式用的次数就越多，也就是每次迭代要应用的这个式子多次（多少特征，就应用多少次），所以其实上面的图不是特别准，因为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mspace linebreak="newline"></mspace><mi>t</mi><mi>h</mi><mi>e</mi><mi>t</mi><mi>a</mi></mrow><annotation encoding="application/x-tex">\\theta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal">t</span><span class="mord mathnormal">h</span><span class="mord mathnormal">e</span><span class="mord mathnormal">t</span><span class="mord mathnormal">a</span></span></span></span> 对应的是很多维度，应该每一个维度都可以画一个这样的图，或者是一个多维空间的图。</p><ul><li>w\_0^{n + 1} = w\_0^{n} - \\eta \* \\frac{\\partial J(\\theta)}{\\partial \\theta\_0}</li><li>w\_1^{n + 1} = w\_1^{n} - \\eta \* \\frac{\\partial J(\\theta)}{\\partial \\theta\_1}</li><li>……</li><li>w\_m^{n + 1} = w\_m^{n} - \\eta \* \\frac{\\partial J(\\theta)}{\\partial \\theta\_m}</li><li><img src="./%E5%9B%BE%E7%89%87/7-%E6%A2%AF%E5%BA%A6%E4%B8%8B%E9%99%8D%E5%85%AC%E5%BC%8F.jpeg" alt=""></li></ul><p>所以观察上图我们可以发现不是某一个 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mspace linebreak="newline"></mspace><mi>t</mi><mi>h</mi><mi>e</mi><mi>t</mi><mi>a</mi><mi mathvariant="normal">_</mi><mn>0</mn></mrow><annotation encoding="application/x-tex">\\theta\_0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1.0044em;vertical-align:-0.31em;"></span><span class="mord mathnormal">t</span><span class="mord mathnormal">h</span><span class="mord mathnormal">e</span><span class="mord mathnormal">t</span><span class="mord mathnormal">a</span><span class="mord">_0</span></span></span></span> 或 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mspace linebreak="newline"></mspace><mi>t</mi><mi>h</mi><mi>e</mi><mi>t</mi><mi>a</mi><mi mathvariant="normal">_</mi><mn>1</mn></mrow><annotation encoding="application/x-tex">\\theta\_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1.0044em;vertical-align:-0.31em;"></span><span class="mord mathnormal">t</span><span class="mord mathnormal">h</span><span class="mord mathnormal">e</span><span class="mord mathnormal">t</span><span class="mord mathnormal">a</span><span class="mord">_1</span></span></span></span> 找到最小值就是最优解，而是它们一起找到 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>J</mi><mo stretchy="false">(</mo><mspace linebreak="newline"></mspace><mi>t</mi><mi>h</mi><mi>e</mi><mi>t</mi><mi>a</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">J(\\theta)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.09618em;">J</span><span class="mopen">(</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">t</span><span class="mord mathnormal">h</span><span class="mord mathnormal">e</span><span class="mord mathnormal">t</span><span class="mord mathnormal">a</span><span class="mclose">)</span></span></span></span> 最小值才是最优解。</p><h4 id="1-4、学习率">1.4、学习率</h4><p>根据我们上面讲的梯度下降公式，我们知道 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mspace linebreak="newline"></mspace><mi>e</mi><mi>t</mi><mi>a</mi></mrow><annotation encoding="application/x-tex">\\eta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.6151em;"></span><span class="mord mathnormal">e</span><span class="mord mathnormal">t</span><span class="mord mathnormal">a</span></span></span></span> 是学习率，设置大的学习率 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>w</mi><mi mathvariant="normal">_</mi><mi>j</mi></mrow><annotation encoding="application/x-tex">w\_j</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9695em;vertical-align:-0.31em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span></span></span></span> 每次调整的幅度就大，设置小的学习率 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>w</mi><mi mathvariant="normal">_</mi><mi>j</mi></mrow><annotation encoding="application/x-tex">w\_j</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9695em;vertical-align:-0.31em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span></span></span></span> 每次调整的幅度就小，然而如果步子迈的太大也会有问题，俗话说步子大了容易扯着蛋！学习率大，可能一下子迈过了，到另一边去了（从曲线左半边跳到右半边），继续梯度下降又迈回来， 使得来来回回震荡。步子太小呢，就像蜗牛一步步往前挪，也会使得整体迭代次数增加。</p><p><img src="./%E5%9B%BE%E7%89%87/8-%E5%AD%A6%E4%B9%A0%E7%8E%87.jpeg" alt=""></p><p>学习率的设置是门一门学问，一般我们会把它设置成一个比较小的正整数，0.1、0.01、0.001、0.0001，都是常见的设定数值（然后根据情况调整）。一般情况下学习率在整体迭代过程中是不变，但是也可以设置成随着迭代次数增多学习率逐渐变小，因为越靠近山谷我们就可以步子迈小点，可以更精准的走入最低点，同时防止走过。还有一些深度学习的优化算法会自己控制调整学习率这个值，后面学习过程中这些策略在讲解代码中我们会一一讲到。</p><p><img src="./%E5%9B%BE%E7%89%87/9-%E5%AD%A6%E4%B9%A0%E7%8E%87.jpeg" alt=""></p><h4 id="1-5、全局最优化">1.5、全局最优化</h4><p><img src="./%E5%9B%BE%E7%89%87/10-%E5%85%A8%E5%B1%80%E6%9C%80%E4%BC%98%E5%8C%96.png" alt=""></p><p>上图显示了梯度下降的两个主要挑战：</p><ul><li>若随机初始化，算法从左侧起步，那么会收敛到一个局部最小值，而不是全局最小值；</li><li>若随机初始化，算法从右侧起步，那么需要经过很长时间才能越过Plateau（函数停滞带，梯度很小），如果停下得太早，则永远达不到全局最小值；</li></ul><p>而线性回归的模型MSE损失函数恰好是个凸函数，凸函数保证了只有一个全局最小值，其次是个连续函数，斜率不会发生陡峭的变化，因此即便是乱走，梯度下降都可以趋近全局最小值。</p><p>上图损失函数是非凸函数，梯度下降法是有可能落到局部最小值的，所以其实步长不能设置的太小太稳健，那样就很容易落入局部最优解，虽说局部最小值也没大问题， 因为模型只要是<strong>堪用</strong>的就好嘛，但是我们肯定还是尽量要奔着全局最优解去！</p><h4 id="1-6、梯度下降步骤">1.6、梯度下降步骤</h4><p>梯度下降流程就是“猜”正确答案的过程:</p><ul><li><p>1、“瞎蒙”，Random 随机数生成 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mspace linebreak="newline"></mspace><mi>t</mi><mi>h</mi><mi>e</mi><mi>t</mi><mi>a</mi></mrow><annotation encoding="application/x-tex">\\theta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal">t</span><span class="mord mathnormal">h</span><span class="mord mathnormal">e</span><span class="mord mathnormal">t</span><span class="mord mathnormal">a</span></span></span></span>，随机生成一组数值 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>w</mi><mi mathvariant="normal">_</mi><mn>0</mn><mtext>、</mtext><mi>w</mi><mi mathvariant="normal">_</mi><mn>1</mn><mo>…</mo><mo>…</mo><mi>w</mi><mi mathvariant="normal">_</mi><mi>n</mi></mrow><annotation encoding="application/x-tex">w\_0、w\_1……w\_n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9933em;vertical-align:-0.31em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mord">_0</span><span class="mord cjk_fallback">、</span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mord">_1</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner">……</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord mathnormal">n</span></span></span></span> ，期望 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mspace linebreak="newline"></mspace><mi>m</mi><mi>u</mi></mrow><annotation encoding="application/x-tex">\\mu</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">m</span><span class="mord mathnormal">u</span></span></span></span> 为 0 方差 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mspace linebreak="newline"></mspace><mi>s</mi><mi>i</mi><mi>g</mi><mi>m</mi><mi>a</mi></mrow><annotation encoding="application/x-tex">\\sigma</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.854em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">s</span><span class="mord mathnormal">i</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">ma</span></span></span></span> 为 1 的正太分布数据。</p></li><li><p>2、求梯度 g ，梯度代表曲线某点上的切线的斜率，沿着切线往下就相当于沿着坡度最陡峭的方向下降</p></li><li><p>3、if g &lt; 0, <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mspace linebreak="newline"></mspace><mi>t</mi><mi>h</mi><mi>e</mi><mi>t</mi><mi>a</mi></mrow><annotation encoding="application/x-tex">\\theta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal">t</span><span class="mord mathnormal">h</span><span class="mord mathnormal">e</span><span class="mord mathnormal">t</span><span class="mord mathnormal">a</span></span></span></span> 变大，if g &gt; 0, <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mspace linebreak="newline"></mspace><mi>t</mi><mi>h</mi><mi>e</mi><mi>t</mi><mi>a</mi></mrow><annotation encoding="application/x-tex">\\theta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal">t</span><span class="mord mathnormal">h</span><span class="mord mathnormal">e</span><span class="mord mathnormal">t</span><span class="mord mathnormal">a</span></span></span></span> 变小</p></li><li><p>4、判断是否收敛 convergence，如果收敛跳出迭代，如果没有达到收敛，回第 2 步再次执行2~4步</p><p>收敛的判断标准是：随着迭代进行损失函数Loss，变化非常微小甚至不再改变，即认为达到收敛</p></li></ul><p><img src="./%E5%9B%BE%E7%89%87/11-%E6%A2%AF%E5%BA%A6%E4%B8%8B%E9%99%8D%E6%AD%A5%E9%AA%A4.jpeg" alt=""></p><h4 id="1-7、代码模拟梯度下降">1.7、代码模拟梯度下降</h4><ul><li><p>梯度下降优化算法，比正规方程，应用更加广泛</p></li><li><p>什么是梯度？</p><ul><li>梯度就是导数对应的值！</li></ul></li><li><p>下降？</p><ul><li>涉及到优化问题，最小二乘法</li></ul></li><li><p>梯度下降呢？</p><ul><li>梯度方向下降，速度最快的~</li></ul></li></ul><p>接下来，我们使用代码来描述上面梯度下降的过程：</p><p>方程如下：</p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><mo stretchy="false">(</mo><mi>x</mi><mo>−</mo><mn>3.5</mn><msup><mo stretchy="false">)</mo><mn>2</mn></msup><mo>−</mo><mn>4.5</mn><mi>x</mi><mo>+</mo><mn>10</mn></mrow><annotation encoding="application/x-tex">f(x) = (x - 3.5)^2 - 4.5x + 10</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.0641em;vertical-align:-0.25em;"></span><span class="mord">3.5</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">4.5</span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">10</span></span></span></span></p><p><img src="./%E5%9B%BE%E7%89%87/3-%E5%87%BD%E6%95%B0%E6%9B%B2%E7%BA%BF.jpg" alt=""></p><p>使用梯度下降的思想，来一步步逼近，函数的最小值。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><code class="hljs Python"><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<br><span class="hljs-keyword">import</span> matplotlib.pyplot <span class="hljs-keyword">as</span> plt<br>f = <span class="hljs-keyword">lambda</span> x : (x - <span class="hljs-number">3.5</span>)**<span class="hljs-number">2</span> -<span class="hljs-number">4.5</span>*x + <span class="hljs-number">10</span><br><span class="hljs-comment"># 导函数</span><br>d = <span class="hljs-keyword">lambda</span> x :<span class="hljs-number">2</span>*(x - <span class="hljs-number">3.5</span>) - <span class="hljs-number">4.5</span> <span class="hljs-comment"># 梯度 == 导数</span><br><span class="hljs-comment"># 梯度下降的步幅，比例，（学习率，幅度）</span><br>step = <span class="hljs-number">0.1</span><br><span class="hljs-comment"># 求解当x等于多少的时候，函数值最小。求解目标值：随机生成的</span><br><span class="hljs-comment"># 相等于：&#x27;瞎蒙&#x27; ----&gt; 方法 ----&gt; 优化</span><br>x = np.random.randint(<span class="hljs-number">0</span>,<span class="hljs-number">12</span>,size = <span class="hljs-number">1</span>)[<span class="hljs-number">0</span>]<br><span class="hljs-comment"># 梯度下降，每下降一步，每走一步，目标值，都会更新。</span><br><span class="hljs-comment"># 更新的这个新值和上一步的值，差异，如果差异很小（万分之一）</span><br><span class="hljs-comment"># 梯度下降退出</span><br>last_x = x + <span class="hljs-number">0.02</span> <span class="hljs-comment"># 记录上一步的值，首先让last_x和x有一定的差异！！！</span><br><span class="hljs-comment"># 精确率，真实计算，都是有误差，自己定义</span><br>precision = <span class="hljs-number">1e-4</span><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;+++++++++++++++++++++&#x27;</span>, x)<br>x_ = [x]<br><span class="hljs-keyword">while</span> <span class="hljs-literal">True</span>:<br>    <span class="hljs-comment"># 退出条件，精确度，满足了</span><br>    <span class="hljs-keyword">if</span> np.<span class="hljs-built_in">abs</span>(x - last_x) &lt; precision:<br>        <span class="hljs-keyword">break</span>     <br>    <span class="hljs-comment"># 更新</span><br>    last_x = x<br>    x -= step*d(x) <span class="hljs-comment"># 更新，减法：最小值</span><br>    x_.append(x)<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;--------------------&#x27;</span>,x)<br><span class="hljs-comment"># 数据可视化</span><br>plt.rcParams[<span class="hljs-string">&#x27;font.family&#x27;</span>] = <span class="hljs-string">&#x27;Kaiti SC&#x27;</span><br>plt.figure(figsize=(<span class="hljs-number">9</span>,<span class="hljs-number">6</span>))<br>x = np.linspace(<span class="hljs-number">5.75</span> - <span class="hljs-number">5</span>, <span class="hljs-number">5.75</span> + <span class="hljs-number">5</span>, <span class="hljs-number">100</span>)<br>y = f(x)<br>plt.plot(x,y,color = <span class="hljs-string">&#x27;green&#x27;</span>)<br>plt.title(<span class="hljs-string">&#x27;梯度下降&#x27;</span>,size = <span class="hljs-number">24</span>,pad = <span class="hljs-number">15</span>)<br>x_ = np.array(x_)<br>y_ = f(x_)<br>plt.scatter(x_, y_,color = <span class="hljs-string">&#x27;red&#x27;</span>)<br>plt.savefig(<span class="hljs-string">&#x27;./图片/5-梯度下降.jpg&#x27;</span>,dpi = <span class="hljs-number">200</span>)<br></code></pre></td></tr></table></figure><p>函数的最优解是：<strong>5.75</strong>。你可以发现，随机赋值的变量 x ，无论<strong>大于</strong>5.75，还是<strong>小于</strong>5.75，经过梯度下降，最终都慢慢靠近5.75这个最优解！</p><p><img src="./%E5%9B%BE%E7%89%87/4-%E6%A2%AF%E5%BA%A6%E4%B8%8B%E9%99%8D.jpg" alt=""></p><p><img src="./%E5%9B%BE%E7%89%87/5-%E6%A2%AF%E5%BA%A6%E4%B8%8B%E9%99%8D.jpg" alt=""></p><p><strong>注意：</strong></p><ol><li>梯度下降存在一定误差，不是完美解~</li><li>在误差允许的范围内，梯度下降所求得的机器学习模型，是堪用的！</li><li>梯度下降的步幅step，不能太大，俗话说步子不能迈的太大！</li><li>精确度，可以根据实际情况调整</li><li>while True循环里面，持续进行梯度下降：</li></ol><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mspace linebreak="newline"></mspace><mi>t</mi><mi>h</mi><mi>e</mi><mi>t</mi><mi>a</mi><mo>=</mo><mspace linebreak="newline"></mspace><mi>t</mi><mi>h</mi><mi>e</mi><mi>t</mi><mi>a</mi><mo>−</mo><mspace linebreak="newline"></mspace><mi>e</mi><mi>t</mi><mi>a</mi><mspace linebreak="newline"></mspace><mi>f</mi><mi>r</mi><mi>a</mi><mi>c</mi><mrow><mspace linebreak="newline"></mspace><mi>p</mi><mi>a</mi><mi>r</mi><mi>t</mi><mi>i</mi><mi>a</mi><mi>l</mi></mrow><mrow><mspace linebreak="newline"></mspace><mi>p</mi><mi>a</mi><mi>r</mi><mi>t</mi><mi>i</mi><mi>a</mi><mi>l</mi><mspace linebreak="newline"></mspace><mi>t</mi><mi>h</mi><mi>e</mi><mi>t</mi><mi>a</mi></mrow><mi>J</mi><mo stretchy="false">(</mo><mspace linebreak="newline"></mspace><mi>t</mi><mi>h</mi><mi>e</mi><mi>t</mi><mi>a</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\\theta = \\theta - \\eta \\frac{\\partial}{\\partial \\theta}J(\\theta)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal">t</span><span class="mord mathnormal">h</span><span class="mord mathnormal">e</span><span class="mord mathnormal">t</span><span class="mord mathnormal">a</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.7778em;vertical-align:-0.0833em;"></span><span class="mord mathnormal">t</span><span class="mord mathnormal">h</span><span class="mord mathnormal">e</span><span class="mord mathnormal">t</span><span class="mord mathnormal">a</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.6151em;"></span><span class="mord mathnormal">e</span><span class="mord mathnormal">t</span><span class="mord mathnormal">a</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal">a</span><span class="mord mathnormal">c</span><span class="mord"><span class="mspace newline"></span><span class="mord mathnormal">p</span><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal">t</span><span class="mord mathnormal">ia</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span></span><span class="mord"><span class="mspace newline"></span><span class="mord mathnormal">p</span><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal">t</span><span class="mord mathnormal">ia</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mspace newline"></span><span class="mord mathnormal">t</span><span class="mord mathnormal">h</span><span class="mord mathnormal">e</span><span class="mord mathnormal">t</span><span class="mord mathnormal">a</span></span><span class="mord mathnormal" style="margin-right:0.09618em;">J</span><span class="mopen">(</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">t</span><span class="mord mathnormal">h</span><span class="mord mathnormal">e</span><span class="mord mathnormal">t</span><span class="mord mathnormal">a</span><span class="mclose">)</span></span></span></span> 其中的 $\eta $ 叫做学习率</p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi><mo>=</mo><mi>x</mi><mo>−</mo><mspace linebreak="newline"></mspace><mi>e</mi><mi>t</mi><mi>a</mi><mspace linebreak="newline"></mspace><mi>f</mi><mi>r</mi><mi>a</mi><mi>c</mi><mrow><mspace linebreak="newline"></mspace><mi>p</mi><mi>a</mi><mi>r</mi><mi>t</mi><mi>i</mi><mi>a</mi><mi>l</mi></mrow><mrow><mspace linebreak="newline"></mspace><mi>p</mi><mi>a</mi><mi>r</mi><mi>t</mi><mi>i</mi><mi>a</mi><mi>l</mi><mi>x</mi></mrow><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">x = x - \\eta\\frac{\\partial}{\\partial x}f(x)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.6151em;"></span><span class="mord mathnormal">e</span><span class="mord mathnormal">t</span><span class="mord mathnormal">a</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal">a</span><span class="mord mathnormal">c</span><span class="mord"><span class="mspace newline"></span><span class="mord mathnormal">p</span><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal">t</span><span class="mord mathnormal">ia</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span></span><span class="mord"><span class="mspace newline"></span><span class="mord mathnormal">p</span><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal">t</span><span class="mord mathnormal">ia</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">x</span></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span></span></span></span></p><p>x = x - step\*\\frac{\\partial}{\\partial x} f(x) 其中的 $step $ 叫做学习率</p><p>x = x - step \* f'(x)</p><ol start="6"><li>while 循环退出条件是：x更新之后和上一次相差绝对值小于特定精确度！</li></ol><h3 id="2、梯度下降方法">2、梯度下降方法</h3><h4 id="2-1、三种梯度下降不同">2.1、三种梯度下降不同</h4><p>梯度下降分三类：批量梯度下降BGD（<strong>Batch Gradient Descent</strong>）、小批量梯度下降MBGD（<strong>Mini-Batch Gradient Descent</strong>）、随机梯度下降SGD（<strong>Stochastic Gradient Descent</strong>）。</p><p><img src="./%E5%9B%BE%E7%89%87/12-%E6%A2%AF%E5%BA%A6%E4%B8%8B%E9%99%8D%E6%96%B9%E5%BC%8F.jpeg" alt=""></p><p>三种梯度下降有什么不同呢？我们从梯度下降步骤开始讲起，梯度下降步骤分一下四步：</p><ul><li><p>1、随机赋值，Random 随机数生成 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mspace linebreak="newline"></mspace><mi>t</mi><mi>h</mi><mi>e</mi><mi>t</mi><mi>a</mi></mrow><annotation encoding="application/x-tex">\\theta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal">t</span><span class="mord mathnormal">h</span><span class="mord mathnormal">e</span><span class="mord mathnormal">t</span><span class="mord mathnormal">a</span></span></span></span>，随机一组数值 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>w</mi><mi mathvariant="normal">_</mi><mn>0</mn><mtext>、</mtext><mi>w</mi><mi mathvariant="normal">_</mi><mn>1</mn><mo>…</mo><mo>…</mo><mi>w</mi><mi mathvariant="normal">_</mi><mi>n</mi></mrow><annotation encoding="application/x-tex">w\_0、w\_1……w\_n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9933em;vertical-align:-0.31em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mord">_0</span><span class="mord cjk_fallback">、</span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mord">_1</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner">……</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord mathnormal">n</span></span></span></span></p></li><li><p>2、求梯度 g ，梯度代表曲线某点上的切线的斜率，沿着切线往下就相当于沿着坡度最陡峭的方向下降</p></li><li><p>3、if g &lt; 0, <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mspace linebreak="newline"></mspace><mi>t</mi><mi>h</mi><mi>e</mi><mi>t</mi><mi>a</mi></mrow><annotation encoding="application/x-tex">\\theta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal">t</span><span class="mord mathnormal">h</span><span class="mord mathnormal">e</span><span class="mord mathnormal">t</span><span class="mord mathnormal">a</span></span></span></span> 变大，if g &gt; 0, <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mspace linebreak="newline"></mspace><mi>t</mi><mi>h</mi><mi>e</mi><mi>t</mi><mi>a</mi></mrow><annotation encoding="application/x-tex">\\theta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal">t</span><span class="mord mathnormal">h</span><span class="mord mathnormal">e</span><span class="mord mathnormal">t</span><span class="mord mathnormal">a</span></span></span></span> 变小</p></li><li><p>4、判断是否收敛 convergence，如果收敛跳出迭代，如果没有达到收敛，回第 2 步再次执行2~4步</p><p>收敛的判断标准是：随着迭代进行损失函数Loss，变化非常微小甚至不再改变，即认为达到收敛</p></li></ul><p>三种梯度下降不同，体现在第二步中：</p><ul><li><p>BGD是指在<strong>每次迭代</strong>使用<strong>所有样本</strong>来进行梯度的更新</p></li><li><p>MBGD是指在<strong>每次迭代</strong>使用<strong>一部分样本</strong>（所有样本500个，使用其中32个样本）来进行梯度的更新</p></li><li><p>SGD是指<strong>每次迭代</strong>随机选择<strong>一个样本</strong>来进行梯度更新</p></li></ul><h4 id="2-2、线性回归梯度更新公式">2.2、线性回归梯度更新公式</h4><p>回顾上一讲公式！</p><p>最小二乘法公式如下：</p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>J</mi><mo stretchy="false">(</mo><mspace linebreak="newline"></mspace><mi>t</mi><mi>h</mi><mi>e</mi><mi>t</mi><mi>a</mi><mo stretchy="false">)</mo><mo>=</mo><mspace linebreak="newline"></mspace><mi>f</mi><mi>r</mi><mi>a</mi><mi>c</mi><mn>12</mn><mspace linebreak="newline"></mspace><mi>s</mi><mi>u</mi><mi>m</mi><mspace linebreak="newline"></mspace><mi>l</mi><mi>i</mi><mi>m</mi><mi>i</mi><mi>t</mi><msubsup><mi>s</mi><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></msubsup><mo stretchy="false">(</mo><msub><mi>h</mi><mrow><mspace linebreak="newline"></mspace><mi>t</mi><mi>h</mi><mi>e</mi><mi>t</mi><mi>a</mi></mrow></msub><mo stretchy="false">(</mo><msup><mi>x</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><mo stretchy="false">)</mo><mo>−</mo><msup><mi>y</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><msup><mo stretchy="false">)</mo><mn>2</mn></msup></mrow><annotation encoding="application/x-tex">J(\\theta) = \\frac{1}{2}\\sum\\limits_{i = 1}^n(h_{\\theta}(x^{(i)}) - y^{(i)})^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.09618em;">J</span><span class="mopen">(</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">t</span><span class="mord mathnormal">h</span><span class="mord mathnormal">e</span><span class="mord mathnormal">t</span><span class="mord mathnormal">a</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal">a</span><span class="mord mathnormal">c</span><span class="mord"><span class="mord">1</span></span><span class="mord"><span class="mord">2</span></span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">s</span><span class="mord mathnormal">u</span><span class="mord mathnormal">m</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1.1467em;vertical-align:-0.2587em;"></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">imi</span><span class="mord mathnormal">t</span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6644em;"><span style="top:-2.4413em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2587em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mspace mtight newline"></span><span class="mord mathnormal mtight">t</span><span class="mord mathnormal mtight">h</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight">t</span><span class="mord mathnormal mtight">a</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.888em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.138em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.888em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span></p><p>矩阵写法：</p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>J</mi><mo stretchy="false">(</mo><mspace linebreak="newline"></mspace><mi>t</mi><mi>h</mi><mi>e</mi><mi>t</mi><mi>a</mi><mo stretchy="false">)</mo><mo>=</mo><mspace linebreak="newline"></mspace><mi>f</mi><mi>r</mi><mi>a</mi><mi>c</mi><mn>12</mn><mo stretchy="false">(</mo><mi>X</mi><mspace linebreak="newline"></mspace><mi>t</mi><mi>h</mi><mi>e</mi><mi>t</mi><mi>a</mi><mo>−</mo><mi>y</mi><msup><mo stretchy="false">)</mo><mi>T</mi></msup><mo stretchy="false">(</mo><mi>X</mi><mspace linebreak="newline"></mspace><mi>t</mi><mi>h</mi><mi>e</mi><mi>t</mi><mi>a</mi><mo>−</mo><mi>y</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">J(\\theta) = \\frac{1}{2}(X\\theta - y)^T(X\\theta - y)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.09618em;">J</span><span class="mopen">(</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">t</span><span class="mord mathnormal">h</span><span class="mord mathnormal">e</span><span class="mord mathnormal">t</span><span class="mord mathnormal">a</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal">a</span><span class="mord mathnormal">c</span><span class="mord"><span class="mord">1</span></span><span class="mord"><span class="mord">2</span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.7778em;vertical-align:-0.0833em;"></span><span class="mord mathnormal">t</span><span class="mord mathnormal">h</span><span class="mord mathnormal">e</span><span class="mord mathnormal">t</span><span class="mord mathnormal">a</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.0913em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.7778em;vertical-align:-0.0833em;"></span><span class="mord mathnormal">t</span><span class="mord mathnormal">h</span><span class="mord mathnormal">e</span><span class="mord mathnormal">t</span><span class="mord mathnormal">a</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose">)</span></span></span></span></p><p>接着我们来讲解如何求解上面梯度下降的第 2 步，即我们要推导出损失函数的导函数来。</p><ul><li><p>\\theta\_j^{n + 1} = \\theta\_j^{n} - \\eta \* \\frac{\\partial J(\\theta)}{\\partial \\theta\_j} 其中 j 表示第 j 个系数</p></li><li><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mspace linebreak="newline"></mspace><mi>f</mi><mi>r</mi><mi>a</mi><mi>c</mi><mrow><mspace linebreak="newline"></mspace><mi>p</mi><mi>a</mi><mi>r</mi><mi>t</mi><mi>i</mi><mi>a</mi><mi>l</mi><mi>J</mi><mo stretchy="false">(</mo><mspace linebreak="newline"></mspace><mi>t</mi><mi>h</mi><mi>e</mi><mi>t</mi><mi>a</mi><mo stretchy="false">)</mo></mrow><mrow><mspace linebreak="newline"></mspace><mi>p</mi><mi>a</mi><mi>r</mi><mi>t</mi><mi>i</mi><mi>a</mi><mi>l</mi><mspace linebreak="newline"></mspace><mi>t</mi><mi>h</mi><mi>e</mi><mi>t</mi><mi>a</mi><mi mathvariant="normal">_</mi><mi>j</mi></mrow><mo>=</mo><mspace linebreak="newline"></mspace><mi>f</mi><mi>r</mi><mi>a</mi><mi>c</mi><mrow><mspace linebreak="newline"></mspace><mi>p</mi><mi>a</mi><mi>r</mi><mi>t</mi><mi>i</mi><mi>a</mi><mi>l</mi></mrow><mrow><mspace linebreak="newline"></mspace><mi>p</mi><mi>a</mi><mi>r</mi><mi>t</mi><mi>i</mi><mi>a</mi><mi>l</mi><mspace linebreak="newline"></mspace><mi>t</mi><mi>h</mi><mi>e</mi><mi>t</mi><msub><mi>a</mi><mi>j</mi></msub></mrow><mspace linebreak="newline"></mspace><mi>f</mi><mi>r</mi><mi>a</mi><mi>c</mi><mn>12</mn><mo stretchy="false">(</mo><msub><mi>h</mi><mrow><mspace linebreak="newline"></mspace><mi>t</mi><mi>h</mi><mi>e</mi><mi>t</mi><mi>a</mi></mrow></msub><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>−</mo><mi>y</mi><msup><mo stretchy="false">)</mo><mn>2</mn></msup></mrow><annotation encoding="application/x-tex">\\frac{\\partial J(\\theta)}{\\partial \\theta\_j} = \\frac{\\partial}{\\partial \\theta_j}\\frac{1}{2}(h_{\\theta}(x) - y)^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1.06em;vertical-align:-0.31em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal">a</span><span class="mord mathnormal">c</span><span class="mord"><span class="mspace newline"></span><span class="mord mathnormal">p</span><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal">t</span><span class="mord mathnormal">ia</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal" style="margin-right:0.09618em;">J</span><span class="mopen">(</span><span class="mspace newline"></span><span class="mord mathnormal">t</span><span class="mord mathnormal">h</span><span class="mord mathnormal">e</span><span class="mord mathnormal">t</span><span class="mord mathnormal">a</span><span class="mclose">)</span></span><span class="mord"><span class="mspace newline"></span><span class="mord mathnormal">p</span><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal">t</span><span class="mord mathnormal">ia</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mspace newline"></span><span class="mord mathnormal">t</span><span class="mord mathnormal">h</span><span class="mord mathnormal">e</span><span class="mord mathnormal">t</span><span class="mord mathnormal">a</span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.9805em;vertical-align:-0.2861em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal">a</span><span class="mord mathnormal">c</span><span class="mord"><span class="mspace newline"></span><span class="mord mathnormal">p</span><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal">t</span><span class="mord mathnormal">ia</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span></span><span class="mord"><span class="mspace newline"></span><span class="mord mathnormal">p</span><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal">t</span><span class="mord mathnormal">ia</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mspace newline"></span><span class="mord mathnormal">t</span><span class="mord mathnormal">h</span><span class="mord mathnormal">e</span><span class="mord mathnormal">t</span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span></span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal">a</span><span class="mord mathnormal">c</span><span class="mord"><span class="mord">1</span></span><span class="mord"><span class="mord">2</span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mspace mtight newline"></span><span class="mord mathnormal mtight">t</span><span class="mord mathnormal mtight">h</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight">t</span><span class="mord mathnormal mtight">a</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.0641em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span></p></li></ul><p>= \\frac{1}{2}\*2(h\_{\\theta}(x) - y)\\frac{\\partial}{\\partial \\theta_j}(h_{\\theta}(x) - y) (1)</p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>=</mo><mo stretchy="false">(</mo><mi>h</mi><mi mathvariant="normal">_</mi><mrow><mspace linebreak="newline"></mspace><mi>t</mi><mi>h</mi><mi>e</mi><mi>t</mi><mi>a</mi></mrow><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>−</mo><mi>y</mi><mo stretchy="false">)</mo><mspace linebreak="newline"></mspace><mi>f</mi><mi>r</mi><mi>a</mi><mi>c</mi><mrow><mspace linebreak="newline"></mspace><mi>p</mi><mi>a</mi><mi>r</mi><mi>t</mi><mi>i</mi><mi>a</mi><mi>l</mi></mrow><mrow><mspace linebreak="newline"></mspace><mi>p</mi><mi>a</mi><mi>r</mi><mi>t</mi><mi>i</mi><mi>a</mi><mi>l</mi><mspace linebreak="newline"></mspace><mi>t</mi><mi>h</mi><mi>e</mi><mi>t</mi><msub><mi>a</mi><mi>j</mi></msub></mrow><mo stretchy="false">(</mo><mspace linebreak="newline"></mspace><mi>s</mi><mi>u</mi><mi>m</mi><mspace linebreak="newline"></mspace><mi>l</mi><mi>i</mi><mi>m</mi><mi>i</mi><mi>t</mi><msubsup><mi>s</mi><mrow><mi>i</mi><mo>=</mo><mn>0</mn></mrow><mi>n</mi></msubsup><mspace linebreak="newline"></mspace><mi>t</mi><mi>h</mi><mi>e</mi><mi>t</mi><mi>a</mi><mi mathvariant="normal">_</mi><mi>i</mi><mi>x</mi><mi mathvariant="normal">_</mi><mi>i</mi><mo>−</mo><mi>y</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">= (h\_{\\theta}(x) - y)\\frac{\\partial}{\\partial \\theta_j}(\\sum\\limits_{i = 0}^n\\theta\_ix\_i - y)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.3669em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.06em;vertical-align:-0.31em;"></span><span class="mopen">(</span><span class="mord mathnormal">h</span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord"><span class="mspace newline"></span><span class="mord mathnormal">t</span><span class="mord mathnormal">h</span><span class="mord mathnormal">e</span><span class="mord mathnormal">t</span><span class="mord mathnormal">a</span></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose">)</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1.0361em;vertical-align:-0.2861em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal">a</span><span class="mord mathnormal">c</span><span class="mord"><span class="mspace newline"></span><span class="mord mathnormal">p</span><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal">t</span><span class="mord mathnormal">ia</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span></span><span class="mord"><span class="mspace newline"></span><span class="mord mathnormal">p</span><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal">t</span><span class="mord mathnormal">ia</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mspace newline"></span><span class="mord mathnormal">t</span><span class="mord mathnormal">h</span><span class="mord mathnormal">e</span><span class="mord mathnormal">t</span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span></span><span class="mopen">(</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">s</span><span class="mord mathnormal">u</span><span class="mord mathnormal">m</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.9531em;vertical-align:-0.2587em;"></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">imi</span><span class="mord mathnormal">t</span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6644em;"><span style="top:-2.4413em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">0</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2587em;"><span></span></span></span></span></span></span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1.0044em;vertical-align:-0.31em;"></span><span class="mord mathnormal">t</span><span class="mord mathnormal">h</span><span class="mord mathnormal">e</span><span class="mord mathnormal">t</span><span class="mord mathnormal">a</span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord mathnormal">i</span><span class="mord mathnormal">x</span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose">)</span></span></span></span> (2)</p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>=</mo><mo stretchy="false">(</mo><mi>h</mi><mi mathvariant="normal">_</mi><mrow><mspace linebreak="newline"></mspace><mi>t</mi><mi>h</mi><mi>e</mi><mi>t</mi><mi>a</mi></mrow><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>−</mo><mi>y</mi><mo stretchy="false">)</mo><mi>x</mi><mi mathvariant="normal">_</mi><mi>j</mi></mrow><annotation encoding="application/x-tex">= (h\_{\\theta}(x) - y)x\_j</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.3669em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.06em;vertical-align:-0.31em;"></span><span class="mopen">(</span><span class="mord mathnormal">h</span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord"><span class="mspace newline"></span><span class="mord mathnormal">t</span><span class="mord mathnormal">h</span><span class="mord mathnormal">e</span><span class="mord mathnormal">t</span><span class="mord mathnormal">a</span></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.06em;vertical-align:-0.31em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mord mathnormal">x</span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span></span></span></span> (3)</p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>x</mi><mn>2</mn></msup></mrow><annotation encoding="application/x-tex">x^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span>的导数就是 2x，根据链式求导法则，我们可以推出上面第（1）步。然后是多元线性回归，所以 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>h</mi><mi mathvariant="normal">_</mi><mrow><mspace linebreak="newline"></mspace><mi>t</mi><mi>h</mi><mi>e</mi><mi>t</mi><mi>a</mi></mrow><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">h\_{\\theta}(x)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.06em;vertical-align:-0.31em;"></span><span class="mord mathnormal">h</span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord"><span class="mspace newline"></span><span class="mord mathnormal">t</span><span class="mord mathnormal">h</span><span class="mord mathnormal">e</span><span class="mord mathnormal">t</span><span class="mord mathnormal">a</span></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span></span></span></span> 就 是 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mspace linebreak="newline"></mspace><mi>t</mi><mi>h</mi><mi>e</mi><mi>t</mi><msup><mi>a</mi><mi>T</mi></msup><mi>x</mi></mrow><annotation encoding="application/x-tex">\\theta^Tx</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.8413em;"></span><span class="mord mathnormal">t</span><span class="mord mathnormal">h</span><span class="mord mathnormal">e</span><span class="mord mathnormal">t</span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mord mathnormal">x</span></span></span></span> 即是<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>w</mi><mi mathvariant="normal">_</mi><mn>0</mn><mi>x</mi><mi mathvariant="normal">_</mi><mn>0</mn><mo>+</mo><mi>w</mi><mi mathvariant="normal">_</mi><mn>1</mn><mi>x</mi><mi mathvariant="normal">_</mi><mn>1</mn><mo>+</mo><mo>…</mo><mo>…</mo><mo>+</mo><mi>w</mi><mi mathvariant="normal">_</mi><mi>n</mi><msub><mi>x</mi><mi>n</mi></msub></mrow><annotation encoding="application/x-tex">w\_0x\_0 + w\_1x\_1 + …… + w\_nx_n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9544em;vertical-align:-0.31em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mord">_0</span><span class="mord mathnormal">x</span><span class="mord">_0</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.9544em;vertical-align:-0.31em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mord">_1</span><span class="mord mathnormal">x</span><span class="mord">_1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6667em;vertical-align:-0.0833em;"></span><span class="minner">……</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.7406em;vertical-align:-0.31em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord mathnormal">n</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 即<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mspace linebreak="newline"></mspace><mi>s</mi><mi>u</mi><mi>m</mi><mspace linebreak="newline"></mspace><mi>l</mi><mi>i</mi><mi>m</mi><mi>i</mi><mi>t</mi><msubsup><mi>s</mi><mrow><mi>i</mi><mo>=</mo><mn>0</mn></mrow><mi>n</mi></msubsup><mspace linebreak="newline"></mspace><mi>t</mi><mi>h</mi><mi>e</mi><mi>t</mi><mi>a</mi><mi mathvariant="normal">_</mi><mi>i</mi><mi>x</mi><mi mathvariant="normal">_</mi><mi>i</mi></mrow><annotation encoding="application/x-tex">\\sum\\limits_{i = 0}^n\\theta\_ix\_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">s</span><span class="mord mathnormal">u</span><span class="mord mathnormal">m</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.9531em;vertical-align:-0.2587em;"></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">imi</span><span class="mord mathnormal">t</span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6644em;"><span style="top:-2.4413em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">0</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2587em;"><span></span></span></span></span></span></span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1.0044em;vertical-align:-0.31em;"></span><span class="mord mathnormal">t</span><span class="mord mathnormal">h</span><span class="mord mathnormal">e</span><span class="mord mathnormal">t</span><span class="mord mathnormal">a</span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord mathnormal">i</span><span class="mord mathnormal">x</span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord mathnormal">i</span></span></span></span>。到这里我们是对 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mspace linebreak="newline"></mspace><mi>t</mi><mi>h</mi><mi>e</mi><mi>t</mi><mi>a</mi><mi mathvariant="normal">_</mi><mi>j</mi></mrow><annotation encoding="application/x-tex">\\theta\_j</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1.0044em;vertical-align:-0.31em;"></span><span class="mord mathnormal">t</span><span class="mord mathnormal">h</span><span class="mord mathnormal">e</span><span class="mord mathnormal">t</span><span class="mord mathnormal">a</span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span></span></span></span> 来求偏导，那么和 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>w</mi><mi mathvariant="normal">_</mi><mi>j</mi></mrow><annotation encoding="application/x-tex">w\_j</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9695em;vertical-align:-0.31em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span></span></span></span> 没有关系的可以忽略不计，所以只剩下 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi><mi mathvariant="normal">_</mi><mi>j</mi></mrow><annotation encoding="application/x-tex">x\_j</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9695em;vertical-align:-0.31em;"></span><span class="mord mathnormal">x</span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span></span></span></span>。</p><p>我们可以得到结论就是 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mspace linebreak="newline"></mspace><mi>t</mi><mi>h</mi><mi>e</mi><mi>t</mi><mi>a</mi><mi mathvariant="normal">_</mi><mi>j</mi></mrow><annotation encoding="application/x-tex">\\theta\_j</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1.0044em;vertical-align:-0.31em;"></span><span class="mord mathnormal">t</span><span class="mord mathnormal">h</span><span class="mord mathnormal">e</span><span class="mord mathnormal">t</span><span class="mord mathnormal">a</span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span></span></span></span> 对应的梯度与预测值 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mspace linebreak="newline"></mspace><mi>h</mi><mi>a</mi><mi>t</mi><mi>y</mi></mrow><annotation encoding="application/x-tex">\\hat{y}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">ha</span><span class="mord mathnormal">t</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span></span></span></span> 和真实值 y 有关，这里 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mspace linebreak="newline"></mspace><mi>h</mi><mi>a</mi><mi>t</mi><mi>y</mi></mrow><annotation encoding="application/x-tex">\\hat{y}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">ha</span><span class="mord mathnormal">t</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span></span></span></span> 和 y 是列向量（即多个数据），同时还与 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mspace linebreak="newline"></mspace><mi>t</mi><mi>h</mi><mi>e</mi><mi>t</mi><mi>a</mi><mi mathvariant="normal">_</mi><mi>j</mi></mrow><annotation encoding="application/x-tex">\\theta\_j</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1.0044em;vertical-align:-0.31em;"></span><span class="mord mathnormal">t</span><span class="mord mathnormal">h</span><span class="mord mathnormal">e</span><span class="mord mathnormal">t</span><span class="mord mathnormal">a</span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span></span></span></span> 对应的特征维度 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi><mi mathvariant="normal">_</mi><mi>j</mi></mrow><annotation encoding="application/x-tex">x\_j</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9695em;vertical-align:-0.31em;"></span><span class="mord mathnormal">x</span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span></span></span></span> 有关，这里 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi><mi mathvariant="normal">_</mi><mi>j</mi></mrow><annotation encoding="application/x-tex">x\_j</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9695em;vertical-align:-0.31em;"></span><span class="mord mathnormal">x</span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span></span></span></span> 是原始数据集矩阵的第 j 列。如果我们分别去对每个维度 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mspace linebreak="newline"></mspace><mi>t</mi><mi>h</mi><mi>e</mi><mi>t</mi><mi>a</mi><mi mathvariant="normal">_</mi><mn>0</mn><mtext>、</mtext><mspace linebreak="newline"></mspace><mi>t</mi><mi>h</mi><mi>e</mi><mi>t</mi><mi>a</mi><mi mathvariant="normal">_</mi><mn>1</mn><mo>…</mo><mo>…</mo><mspace linebreak="newline"></mspace><mi>t</mi><mi>h</mi><mi>e</mi><mi>t</mi><mi>a</mi><mi mathvariant="normal">_</mi><mi>n</mi></mrow><annotation encoding="application/x-tex">\\theta\_0、\\theta\_1……\\theta\_n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1.0044em;vertical-align:-0.31em;"></span><span class="mord mathnormal">t</span><span class="mord mathnormal">h</span><span class="mord mathnormal">e</span><span class="mord mathnormal">t</span><span class="mord mathnormal">a</span><span class="mord">_0</span><span class="mord cjk_fallback">、</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1.0044em;vertical-align:-0.31em;"></span><span class="mord mathnormal">t</span><span class="mord mathnormal">h</span><span class="mord mathnormal">e</span><span class="mord mathnormal">t</span><span class="mord mathnormal">a</span><span class="mord">_1</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner">……</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1.0044em;vertical-align:-0.31em;"></span><span class="mord mathnormal">t</span><span class="mord mathnormal">h</span><span class="mord mathnormal">e</span><span class="mord mathnormal">t</span><span class="mord mathnormal">a</span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord mathnormal">n</span></span></span></span> 求偏导，即可得到所有维度对应的梯度值。</p><ul><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>g</mi><mn>0</mn></msub><mo>=</mo><mo stretchy="false">(</mo><msub><mi>h</mi><mrow><mspace linebreak="newline"></mspace><mi>t</mi><mi>h</mi><mi>e</mi><mi>t</mi><mi>a</mi></mrow></msub><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>−</mo><mi>y</mi><mo stretchy="false">)</mo><mi>x</mi><mi mathvariant="normal">_</mi><mn>0</mn></mrow><annotation encoding="application/x-tex">g_0 = (h_{\\theta}(x) - y)x\_0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mspace mtight newline"></span><span class="mord mathnormal mtight">t</span><span class="mord mathnormal mtight">h</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight">t</span><span class="mord mathnormal mtight">a</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.06em;vertical-align:-0.31em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mord mathnormal">x</span><span class="mord">_0</span></span></span></span></li><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>g</mi><mn>1</mn></msub><mo>=</mo><mo stretchy="false">(</mo><msub><mi>h</mi><mrow><mspace linebreak="newline"></mspace><mi>t</mi><mi>h</mi><mi>e</mi><mi>t</mi><mi>a</mi></mrow></msub><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>−</mo><mi>y</mi><mo stretchy="false">)</mo><mi>x</mi><mi mathvariant="normal">_</mi><mn>1</mn></mrow><annotation encoding="application/x-tex">g_1 = (h_{\\theta}(x) - y)x\_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mspace mtight newline"></span><span class="mord mathnormal mtight">t</span><span class="mord mathnormal mtight">h</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight">t</span><span class="mord mathnormal mtight">a</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.06em;vertical-align:-0.31em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mord mathnormal">x</span><span class="mord">_1</span></span></span></span></li><li>……</li><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>g</mi><mi>j</mi></msub><mo>=</mo><mo stretchy="false">(</mo><msub><mi>h</mi><mrow><mspace linebreak="newline"></mspace><mi>t</mi><mi>h</mi><mi>e</mi><mi>t</mi><mi>a</mi></mrow></msub><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>−</mo><mi>y</mi><mo stretchy="false">)</mo><mi>x</mi><mi mathvariant="normal">_</mi><mi>j</mi></mrow><annotation encoding="application/x-tex">g_j = (h_{\\theta}(x) - y)x\_j</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7167em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mspace mtight newline"></span><span class="mord mathnormal mtight">t</span><span class="mord mathnormal mtight">h</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight">t</span><span class="mord mathnormal mtight">a</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.06em;vertical-align:-0.31em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mord mathnormal">x</span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span></span></span></span></li></ul><p><strong>总结：</strong></p><p>\\theta\_j^{n + 1} = \\theta_j^{n} - \\eta \* (h_{\\theta}(x) - y )x\_j</p><h4 id="2-3、批量梯度下降BGD">2.3、批量梯度下降BGD</h4><p><strong>批量梯度下降法</strong>是最原始的形式，它是指在<strong>每次迭代</strong>使用<strong>所有样本</strong>来进行梯度的更新。每次迭代参数更新公式如下：</p><p>\\theta\_j^{n + 1} = \\theta_j^{n} - \\eta \*\\frac{1}{n}\\sum\\limits_{i = 1}^{n} (h\_{\\theta}(x^{(i)}) - y^{(i)} )x\_j^{(i)}</p><p>去掉 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mspace linebreak="newline"></mspace><mi>f</mi><mi>r</mi><mi>a</mi><mi>c</mi><mn>1</mn><mi>n</mi></mrow><annotation encoding="application/x-tex">\\frac{1}{n}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal">a</span><span class="mord mathnormal">c</span><span class="mord"><span class="mord">1</span></span><span class="mord"><span class="mord mathnormal">n</span></span></span></span></span> 也可以，因为它是一个常量，可以和 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mspace linebreak="newline"></mspace><mi>e</mi><mi>t</mi><mi>a</mi></mrow><annotation encoding="application/x-tex">\\eta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.6151em;"></span><span class="mord mathnormal">e</span><span class="mord mathnormal">t</span><span class="mord mathnormal">a</span></span></span></span> 合并</p><p>\\theta\_j^{n + 1} = \\theta_j^{n} - \\eta\*\\sum\\limits_{i = 1}^{n} (h\_{\\theta}(x^{(i)}) - y^{(i)} )x\_j^{(i)}</p><p>矩阵写法：</p><p>\\theta^{n + 1} = \\theta^{n} - \\eta \* X^T(X\\theta -y)</p><p>其中 𝑖 = 1, 2, …, n 表示样本数， 𝑗 = 0, 1……表示特征数，<strong>这里我们使用了偏置项，即解决<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi><mi mathvariant="normal">_</mi><msup><mn>0</mn><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><mo>=</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">x\_0^{(i)} = 1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.198em;vertical-align:-0.31em;"></span><span class="mord mathnormal">x</span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.888em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span></strong>。</p><p><strong>注意这里更新时存在一个求和函数，即为对所有样本进行计算处理！</strong></p><p><strong>优点：</strong>   （1）一次迭代是对所有样本进行计算，此时利用矩阵进行操作，实现了并行。   （2）由全数据集确定的方向能够更好地代表样本总体，从而更准确地朝向极值所在的方向。当目标函数为凸函数时，BGD一定能够得到全局最优。 <strong>缺点：</strong>   （1）当样本数目 n 很大时，每迭代一步都需要对所有样本计算，训练过程会很慢。</p><p>从迭代的次数上来看，BGD迭代的次数相对较少。其迭代的收敛曲线示意图可以表示如下：</p><p><img src="./%E5%9B%BE%E7%89%87/13-BGD.jpeg" alt=""></p><h4 id="2-4、随机梯度下降SGD">2.4、随机梯度下降SGD</h4><p><strong>随机梯度下降法</strong>不同于批量梯度下降，随机梯度下降是<strong>每次迭代</strong>使用<strong>一个样本</strong>来对参数进行更新。使得训练速度加快。每次迭代参数更新公式如下：</p><p>\\theta\_j^{n + 1} = \\theta_j^{n} - \\eta \*(h_{\\theta}(x^{(i)}) - y^{(i)} )x\_j^{(i)}</p><p><strong>批量梯度下降</strong>算法每次都会使用<strong>全部</strong>训练样本，因此这些计算是冗余的，因为每次都使用完全相同的样本集。而<strong>随机梯度下降</strong>算法每次只随机选择<strong>一个</strong>样本来更新模型参数，因此每次的学习是非常快速的。</p><p><strong>优点：</strong>   （1）由于不是在全部训练数据上的更新计算，而是在每轮迭代中，随机选择一条数据进行更新计算，这样每一轮参数的更新速度大大加快。   <strong>缺点：</strong>   （1）准确度下降。由于即使在目标函数为强凸函数的情况下，SGD仍旧无法做到线性收敛。   （2）可能会收敛到局部最优，由于单个样本并不能代表全体样本的趋势。</p><p><strong>解释一下为什么SGD收敛速度比BGD要快：</strong></p><ul><li>这里我们假设有30W个样本，对于BGD而言，每次迭代需要计算30W个样本才能对参数进行一次更新，需要求得最小值可能需要多次迭代（假设这里是10）。</li><li>而对于SGD，每次更新参数只需要一个样本，因此若使用这30W个样本进行参数更新，则参数会被迭代30W次，而这期间，SGD就能保证能够收敛到一个合适的最小值上了。</li><li>也就是说，在收敛时，BGD计算了 10×30W 次，而SGD只计算了 1×30W 次。</li></ul><p>从迭代的次数上来看，SGD迭代的次数较多，在解空间的搜索过程就会盲目一些。其迭代的收敛曲线示意图可以表示如下：</p><p><img src="./%E5%9B%BE%E7%89%87/14-SGD.jpeg" alt=""></p><h4 id="2-5、小批量梯度下降MBGD">2.5、小批量梯度下降MBGD</h4><p><strong>小批量梯度下降</strong>，是对批量梯度下降以及随机梯度下降的一个<strong>折中</strong>办法。其思想是：<strong>每次迭代</strong>使用总样本中的一部分（batch_size）样本来对参数进行更新。这里我们假设 batch_size = 20，样本数 n = 1000 。实现了更新速度与更新次数之间的平衡。每次迭代参数更新公式如下：</p><p>\\theta\_j^{n + 1} = \\theta_j^{n} - \\eta \*\\frac{1}{batch\_size}\\sum\\limits_{i = 1}^{batch\_size} (h\_{\\theta}(x^{(i)}) - y^{(i)} )x\_j^{(i)}</p><p>相对于随机梯度下降算法，小批量梯度下降算法降低了收敛波动性， 即降低了参数更新的方差，使得更新更加稳定。相对于全量梯度下降，其提高了每次学习的速度。并且其不用担心内存瓶颈从而可以利用矩阵运算进行高效计算。</p><p>一般情况下，小批量梯度下降是梯度下降的推荐变体，特别是在深度学习中。每次随机选择2的幂数个样本来进行学习，例如：8、16、32、64、128、256。因为计算机的结构就是二进制的。但是也要根据具体问题而选择，实践中可以进行多次试验， 选择一个更新速度与更次次数都较适合的样本数。</p><p>MBGD梯度下降迭代的收敛曲线更加温柔一些：</p><p><img src="./%E5%9B%BE%E7%89%87/12-%E6%A2%AF%E5%BA%A6%E4%B8%8B%E9%99%8D%E6%96%B9%E5%BC%8F.jpeg" alt=""></p><h4 id="2-6、梯度下降优化">2.6、梯度下降优化</h4><p>虽然梯度下降算法效果很好，并且广泛使用，但是不管用上面三种哪一种，都存在一些挑战与问题，我们可以从以下几点进行优化:</p><ol><li><p>选择一个合理的学习速率很难。如果学习速率过小，则会导致收敛速度很慢。如果学习速率过大，那么其会阻碍收敛，即在极值点附近会振荡。<img src="./%E5%9B%BE%E7%89%87/15-%E5%90%88%E9%80%82%E5%AD%A6%E4%B9%A0%E7%8E%87.jpeg" alt=""></p></li><li><p>学习速率调整，试图在每次更新过程中， 改变学习速率。从经验上看，**学习率在一开始要保持大些来保证收敛速度，在收敛到最优点附近时要小些以避免来回震荡。**比较简单的学习率调整可以通过 **学习率衰减（Learning Rate Decay）**的方式来实现。假设初始化学习率为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mspace linebreak="newline"></mspace><mi>e</mi><mi>t</mi><mi>a</mi><mi mathvariant="normal">_</mi><mn>0</mn></mrow><annotation encoding="application/x-tex">\\eta\_0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.9544em;vertical-align:-0.31em;"></span><span class="mord mathnormal">e</span><span class="mord mathnormal">t</span><span class="mord mathnormal">a</span><span class="mord">_0</span></span></span></span>，在第 t 次迭代时的学习率 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mspace linebreak="newline"></mspace><mi>e</mi><mi>t</mi><mi>a</mi><mi mathvariant="normal">_</mi><mi>t</mi></mrow><annotation encoding="application/x-tex">\\eta\_t</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.9251em;vertical-align:-0.31em;"></span><span class="mord mathnormal">e</span><span class="mord mathnormal">t</span><span class="mord mathnormal">a</span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord mathnormal">t</span></span></span></span>。常用的衰减方式为可以设置为 <strong>按迭代次数</strong> 进行衰减，迭代次数越大，学习率越小！<img src="./%E5%9B%BE%E7%89%87/16-%E8%B0%83%E6%95%B4%E5%AD%A6%E4%B9%A0%E7%8E%87.jpeg" alt=""></p><p><img src="./%E5%9B%BE%E7%89%87/17-%E8%B0%83%E6%95%B4%E5%AD%A6%E4%B9%A0%E7%8E%87.jpeg" alt=""></p></li><li><p>模型所有的参数每次更新都是使用相同的学习速率。如果数据特征是稀疏的，或者每个特征有着不同的统计特征与空间，那么便不能在每次更新中每个参数使用相同的学习速率，那些很少出现的特征应该使用一个相对较大的学习速率。<img src="./%E5%9B%BE%E7%89%87/18-%E7%89%B9%E5%BE%81%E5%AD%A6%E4%B9%A0%E7%8E%87.jpg" alt=""></p></li><li><p>对于非凸目标函数，容易陷入那些次优的局部极值点中，如在神经网路中。那么如何避免呢。<img src="./%E5%9B%BE%E7%89%87/10-%E5%85%A8%E5%B1%80%E6%9C%80%E4%BC%98%E5%8C%96.png" alt=""></p><p>简单的问题，一般使用随机梯度下降即可解决。在深度学习里，对梯度下降进行了很多改进，比如：自适应梯度下降。在深度学习章节，我们会具体介绍。</p></li><li><p>轮次和批次</p><p>轮次：epoch，轮次顾名思义是把我们已有的训练集数据学习多少轮，迭代多少次。</p><p>批次：batch，批次这里指的的我们已有的训练集数据比较多的时候，一轮要学习太多数据， 那就把一轮次要学习的数据分成多个批次，一批一批数据的学习。</p><p>就好比，你要背诵一片《赤壁赋》，很长。你在背诵的时候，一段段的背诵，就是批次batch。花费了一天终于背诵下来了，以后的9天，每天都进行一轮背诵复习，这就是轮次epoch。这样，《赤壁赋》的背诵效果，就非常牢固了。</p><p>在进行，机器学习训练时，我们也要合理选择轮次和批次~</p></li></ol><h3 id="3、代码实战梯度下降">3、代码实战梯度下降</h3><h4 id="3-1、批量梯度下降BGD">3.1、批量梯度下降BGD</h4><p><strong>这里我们使用了偏置项，即解决<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi><mi mathvariant="normal">_</mi><msup><mn>0</mn><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><mo>=</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">x\_0^{(i)} = 1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.198em;vertical-align:-0.31em;"></span><span class="mord mathnormal">x</span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.888em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span></strong>。一元一次线性回归问题。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><code class="hljs Python"><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<br><br><span class="hljs-comment"># 1、创建数据集X，y</span><br>X = np.random.rand(<span class="hljs-number">100</span>, <span class="hljs-number">1</span>)<br>w,b = np.random.randint(<span class="hljs-number">1</span>,<span class="hljs-number">10</span>,size = <span class="hljs-number">2</span>)<br>y = w * X  + b + np.random.randn(<span class="hljs-number">100</span>, <span class="hljs-number">1</span>)<br><br><span class="hljs-comment"># 2、使用偏置项x_0 = 1，更新X</span><br>X = np.c_[X,np.ones((<span class="hljs-number">100</span>, <span class="hljs-number">1</span>))]<br><br><span class="hljs-comment"># 3、创建超参数轮次</span><br>epoches = <span class="hljs-number">10000</span><br><br><span class="hljs-comment"># 4、定义一个函数来调整学习率</span><br>t0, t1 = <span class="hljs-number">5</span>, <span class="hljs-number">1000</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">learning_rate_schedule</span>(<span class="hljs-params">t</span>):<br>    <span class="hljs-keyword">return</span> t0/(t+t1)<br><br><span class="hljs-comment"># 5、初始化 W0...Wn，标准正太分布创建W</span><br>θ = np.random.randn(<span class="hljs-number">2</span>, <span class="hljs-number">1</span>)<br><br><span class="hljs-comment"># 6、判断是否收敛，一般不会去设定阈值，而是直接采用设置相对大的迭代次数保证可以收敛</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(epoches):<br>    <span class="hljs-comment"># 根据公式计算梯度</span><br>    g = X.T.dot(X.dot(θ) - y)<br>    <span class="hljs-comment"># 应用梯度下降的公式去调整 θ 值</span><br>    learning_rate = learning_rate_schedule(i)<br>    θ = θ - learning_rate * g<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;真实斜率和截距是：&#x27;</span>,w,b)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;梯度下降计算斜率和截距是：&#x27;</span>,θ)<br></code></pre></td></tr></table></figure><p><strong>这里我们使用了偏置项，即解决<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi><mi mathvariant="normal">_</mi><msup><mn>0</mn><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><mo>=</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">x\_0^{(i)} = 1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.198em;vertical-align:-0.31em;"></span><span class="mord mathnormal">x</span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.888em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span></strong>。多元一次线性回归问题。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><code class="hljs Python"><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<br><br><span class="hljs-comment"># 1、创建数据集X，y</span><br>X = np.random.rand(<span class="hljs-number">100</span>, <span class="hljs-number">3</span>)<br>w = np.random.randint(<span class="hljs-number">1</span>,<span class="hljs-number">10</span>,size = (<span class="hljs-number">3</span>,<span class="hljs-number">1</span>))<br>b = np.random.randint(<span class="hljs-number">1</span>,<span class="hljs-number">10</span>,size = <span class="hljs-number">1</span>)<br>y = X.dot(w)  + b + np.random.randn(<span class="hljs-number">100</span>, <span class="hljs-number">1</span>)<br><br><span class="hljs-comment"># 2、使用偏置项x_0 = 1，更新X</span><br>X = np.c_[X,np.ones((<span class="hljs-number">100</span>, <span class="hljs-number">1</span>))]<br><br><span class="hljs-comment"># 3、创建超参数轮次</span><br>epoches = <span class="hljs-number">10000</span><br><br><span class="hljs-comment"># 4、定义一个函数来调整学习率</span><br>t0, t1 = <span class="hljs-number">5</span>, <span class="hljs-number">500</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">learning_rate_schedule</span>(<span class="hljs-params">t</span>):<br>    <span class="hljs-keyword">return</span> t0/(t+t1)<br><br><span class="hljs-comment"># 5、初始化 W0...Wn，标准正太分布创建W</span><br>θ = np.random.randn(<span class="hljs-number">4</span>, <span class="hljs-number">1</span>)<br><br><span class="hljs-comment"># 6、判断是否收敛，一般不会去设定阈值，而是直接采用设置相对大的迭代次数保证可以收敛</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(epoches):<br>    <span class="hljs-comment"># 根据公式计算梯度</span><br>    g = X.T.dot(X.dot(θ) - y)<br>    <span class="hljs-comment"># 应用梯度下降的公式去调整 θ 值</span><br>    learning_rate = learning_rate_schedule(i)<br>    θ = θ - learning_rate * g<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;真实斜率和截距是：&#x27;</span>,w,b)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;梯度下降计算斜率和截距是：&#x27;</span>,θ)<br></code></pre></td></tr></table></figure><h4 id="3-2、随机梯度下降SGD">3.2、随机梯度下降SGD</h4><p><strong>这里我们使用了偏置项，即解决<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi><mi mathvariant="normal">_</mi><msup><mn>0</mn><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><mo>=</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">x\_0^{(i)} = 1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.198em;vertical-align:-0.31em;"></span><span class="mord mathnormal">x</span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.888em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span></strong>。一元一次线性回归问题。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><code class="hljs Python"><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<br><br><span class="hljs-comment"># 1、创建数据集X，y</span><br>X = <span class="hljs-number">2</span>*np.random.rand(<span class="hljs-number">100</span>, <span class="hljs-number">1</span>)<br>w,b = np.random.randint(<span class="hljs-number">1</span>,<span class="hljs-number">10</span>,size = <span class="hljs-number">2</span>)<br>y = w * X + b + np.random.randn(<span class="hljs-number">100</span>, <span class="hljs-number">1</span>)<br><br><span class="hljs-comment"># 2、使用偏置项x_0 = 1，更新X</span><br>X = np.c_[X, np.ones((<span class="hljs-number">100</span>, <span class="hljs-number">1</span>))]<br><br><span class="hljs-comment"># 3、创建超参数轮次、样本数量</span><br>epochs = <span class="hljs-number">10000</span><br>n = <span class="hljs-number">100</span><br><br><span class="hljs-comment"># 4、定义一个函数来调整学习率</span><br>t0, t1 = <span class="hljs-number">5</span>, <span class="hljs-number">500</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">learning_rate_schedule</span>(<span class="hljs-params">t</span>):<br>    <span class="hljs-keyword">return</span> t0/(t+t1)<br><br><span class="hljs-comment"># 5、初始化 W0...Wn，标准正太分布创建W</span><br>θ = np.random.randn(<span class="hljs-number">2</span>, <span class="hljs-number">1</span>)<br><br><span class="hljs-comment"># 6、多次for循环实现梯度下降，最终结果收敛</span><br><span class="hljs-keyword">for</span> epoch <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(epochs):<br>    <span class="hljs-comment"># 在双层for循环之间，每个轮次开始分批次迭代之前打乱数据索引顺序</span><br>    index = np.arange(n) <span class="hljs-comment"># 0 ~99</span><br>    np.random.shuffle(index)<br>    X = X[index] <span class="hljs-comment"># 打乱顺序</span><br>    y = y[index]<br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(n):<br>        X_i = X[[i]]<br>        y_i = y[[i]]<br>        g = X_i.T.dot(X_i.dot(θ)-y_i)<br>        learning_rate = learning_rate_schedule(epoch*n + i)<br>        θ = θ - learning_rate * g<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;真实斜率和截距是：&#x27;</span>,w,b)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;梯度下降计算斜率和截距是：&#x27;</span>,θ)<br></code></pre></td></tr></table></figure><p><strong>这里我们使用了偏置项，即解决<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi><mi mathvariant="normal">_</mi><msup><mn>0</mn><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><mo>=</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">x\_0^{(i)} = 1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.198em;vertical-align:-0.31em;"></span><span class="mord mathnormal">x</span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.888em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span></strong>。多元一次线性回归问题。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><code class="hljs Python"><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<br><br><span class="hljs-comment"># 1、创建数据集X，y</span><br>X = <span class="hljs-number">2</span>*np.random.rand(<span class="hljs-number">100</span>, <span class="hljs-number">5</span>)<br>w = np.random.randint(<span class="hljs-number">1</span>,<span class="hljs-number">10</span>,size = (<span class="hljs-number">5</span>,<span class="hljs-number">1</span>))<br>b = np.random.randint(<span class="hljs-number">1</span>,<span class="hljs-number">10</span>,size = <span class="hljs-number">1</span>)<br>y = X.dot(w) + b + np.random.randn(<span class="hljs-number">100</span>, <span class="hljs-number">1</span>)<br><br><span class="hljs-comment"># 2、使用偏置项x_0 = 1，更新X</span><br>X = np.c_[X, np.ones((<span class="hljs-number">100</span>, <span class="hljs-number">1</span>))]<br><br><span class="hljs-comment"># 3、创建超参数轮次、样本数量</span><br>epochs = <span class="hljs-number">10000</span><br>n = <span class="hljs-number">100</span><br><br><span class="hljs-comment"># 4、定义一个函数来调整学习率</span><br>t0, t1 = <span class="hljs-number">5</span>, <span class="hljs-number">500</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">learning_rate_schedule</span>(<span class="hljs-params">t</span>):<br>    <span class="hljs-keyword">return</span> t0/(t+t1)<br><br><span class="hljs-comment"># 5、初始化 W0...Wn，标准正太分布创建W</span><br>θ = np.random.randn(<span class="hljs-number">6</span>, <span class="hljs-number">1</span>)<br><br><span class="hljs-comment"># 6、多次for循环实现梯度下降，最终结果收敛</span><br><span class="hljs-keyword">for</span> epoch <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(epochs):<br>    <span class="hljs-comment"># 在双层for循环之间，每个轮次开始分批次迭代之前打乱数据索引顺序</span><br>    index = np.arange(n) <span class="hljs-comment"># 0 ~99</span><br>    np.random.shuffle(index)<br>    X = X[index] <span class="hljs-comment"># 打乱顺序</span><br>    y = y[index]<br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(n):<br>        X_i = X[[i]]<br>        y_i = y[[i]]<br>        g = X_i.T.dot(X_i.dot(θ)-y_i)<br>        learning_rate = learning_rate_schedule(epoch*n + i)<br>        θ = θ - learning_rate * g<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;真实斜率和截距是：&#x27;</span>,w,b)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;梯度下降计算斜率和截距是：&#x27;</span>,θ)<br></code></pre></td></tr></table></figure><h4 id="3-3、小批量梯度下降MBGD">3.3、小批量梯度下降MBGD</h4><p><strong>这里我们使用了偏置项，即解决<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi><mi mathvariant="normal">_</mi><msup><mn>0</mn><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><mo>=</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">x\_0^{(i)} = 1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.198em;vertical-align:-0.31em;"></span><span class="mord mathnormal">x</span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.888em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span></strong>。一元一次线性回归问题。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><code class="hljs Python"><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<br><br><span class="hljs-comment"># 1、创建数据集X，y</span><br>X = np.random.rand(<span class="hljs-number">100</span>, <span class="hljs-number">1</span>)<br>w,b = np.random.randint(<span class="hljs-number">1</span>,<span class="hljs-number">10</span>,size = <span class="hljs-number">2</span>)<br>y = w * X + b + np.random.randn(<span class="hljs-number">100</span>, <span class="hljs-number">1</span>)<br><br><span class="hljs-comment"># 2、使用偏置项x_0 = 1，更新X</span><br>X = np.c_[X, np.ones((<span class="hljs-number">100</span>, <span class="hljs-number">1</span>))]<br><br><span class="hljs-comment"># 3、定义一个函数来调整学习率</span><br>t0, t1 = <span class="hljs-number">5</span>, <span class="hljs-number">500</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">learning_rate_schedule</span>(<span class="hljs-params">t</span>):<br>    <span class="hljs-keyword">return</span> t0/(t+t1)<br><br><span class="hljs-comment"># 4、创建超参数轮次、样本数量、小批量数量</span><br>epochs = <span class="hljs-number">100</span><br>n = <span class="hljs-number">100</span><br>batch_size = <span class="hljs-number">16</span><br>num_batches = <span class="hljs-built_in">int</span>(n / batch_size)<br><br><span class="hljs-comment"># 5、初始化 W0...Wn，标准正太分布创建W</span><br>θ = np.random.randn(<span class="hljs-number">2</span>, <span class="hljs-number">1</span>)<br><br><span class="hljs-comment"># 6、多次for循环实现梯度下降，最终结果收敛</span><br><span class="hljs-keyword">for</span> epoch <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(epochs):<br>    <span class="hljs-comment"># 在双层for循环之间，每个轮次开始分批次迭代之前打乱数据索引顺序</span><br>    index = np.arange(n)<br>    np.random.shuffle(index)<br>    X = X[index]<br>    y = y[index]<br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(num_batches):<br>        <span class="hljs-comment"># 一次取一批数据16个样本</span><br>        X_batch = X[i * batch_size : (i + <span class="hljs-number">1</span>)*batch_size]<br>        y_batch = y[i * batch_size : (i + <span class="hljs-number">1</span>)*batch_size]<br>        g = X_batch.T.dot(X_batch.dot(θ)-y_batch)<br>        learning_rate = learning_rate_schedule(epoch * n + i)<br>        θ = θ - learning_rate * g<br><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;真实斜率和截距是：&#x27;</span>,w,b)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;梯度下降计算斜率和截距是：&#x27;</span>,θ)<br></code></pre></td></tr></table></figure><p><strong>这里我们使用了偏置项，即解决<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi><mi mathvariant="normal">_</mi><msup><mn>0</mn><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><mo>=</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">x\_0^{(i)} = 1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.198em;vertical-align:-0.31em;"></span><span class="mord mathnormal">x</span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.888em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span></strong>。多元一次线性回归问题。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><code class="hljs Python"><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<br><br><span class="hljs-comment"># 1、创建数据集X，y</span><br>X = np.random.rand(<span class="hljs-number">100</span>, <span class="hljs-number">3</span>)<br>w = np.random.randint(<span class="hljs-number">1</span>,<span class="hljs-number">10</span>,size = (<span class="hljs-number">3</span>,<span class="hljs-number">1</span>))<br>b = np.random.randint(<span class="hljs-number">1</span>,<span class="hljs-number">10</span>,size = <span class="hljs-number">1</span>)<br>y = X.dot(w) + b + np.random.randn(<span class="hljs-number">100</span>, <span class="hljs-number">1</span>)<br><br><span class="hljs-comment"># 2、使用偏置项 X_0 = 1，更新X</span><br>X = np.c_[X, np.ones((<span class="hljs-number">100</span>, <span class="hljs-number">1</span>))]<br><br><span class="hljs-comment"># 3、定义一个函数来调整学习率</span><br>t0, t1 = <span class="hljs-number">5</span>, <span class="hljs-number">500</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">learning_rate_schedule</span>(<span class="hljs-params">t</span>):<br>    <span class="hljs-keyword">return</span> t0/(t+t1)<br><br><span class="hljs-comment"># 4、创建超参数轮次、样本数量、小批量数量</span><br>epochs = <span class="hljs-number">10000</span><br>n = <span class="hljs-number">100</span><br>batch_size = <span class="hljs-number">16</span><br>num_batches = <span class="hljs-built_in">int</span>(n / batch_size)<br><br><span class="hljs-comment"># 5、初始化 W0...Wn，标准正太分布创建W</span><br>θ = np.random.randn(<span class="hljs-number">4</span>, <span class="hljs-number">1</span>)<br><br><span class="hljs-comment"># 6、多次for循环实现梯度下降，最终结果收敛</span><br><span class="hljs-keyword">for</span> epoch <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(epochs):<br>    <span class="hljs-comment"># 在双层for循环之间，每个轮次开始分批次迭代之前打乱数据索引顺序</span><br>    index = np.arange(n)<br>    np.random.shuffle(index)<br>    X = X[index]<br>    y = y[index]<br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(num_batches):<br>        <span class="hljs-comment"># 一次取一批数据16个样本</span><br>        X_batch = X[i * batch_size : (i + <span class="hljs-number">1</span>)*batch_size]<br>        y_batch = y[i * batch_size : (i + <span class="hljs-number">1</span>)*batch_size]<br>        g = X_batch.T.dot(X_batch.dot(θ)-y_batch)<br>        learning_rate = learning_rate_schedule(epoch * n + i)<br>        θ = θ - learning_rate * g<br><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;真实斜率和截距是：&#x27;</span>,w,b)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;梯度下降计算斜率和截距是：&#x27;</span>,θ)<br></code></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> program </category>
          
          <category> 机器学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> AI </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>NumPy科学计算库</title>
      <link href="/posts/e1ca7594.html"/>
      <url>/posts/e1ca7594.html</url>
      
        <content type="html"><![CDATA[<p>[toc]</p><h1>NumPy科学计算库</h1><h3 id="课程介绍">课程介绍</h3><p>NumPy（Numerical Python）是Python的一种开源的数值计算扩展。提供多维数组对象，各种派生对象（如掩码数组和矩阵），这种工具可用来存储和处理大型矩阵，比Python自身的嵌套列表（nested list structure)结构要高效的多（该结构也可以用来表示矩阵（matrix）），支持大量的维度数组与矩阵运算，此外也针对数组运算提供大量的数学函数库，包括数学、逻辑、形状操作、排序、选择、输入输出、离散傅立叶变换、基本线性代数，基本统计运算和随机模拟等等。</p><ul><li><p>几乎所有从事Python工作的数据分析师都利用NumPy的强大功能。</p><ul><li>强大的N维数组</li><li>成熟的广播功能</li><li>用于整合C/C++和Fortran代码的工具包</li><li>NumPy提供了全面的数学功能、随机数生成器和线性代数功能</li></ul></li><li><p>安装Python库</p></li><li><p>第一种方式：</p><ul><li>pip install jupyter -i <a href="https://pypi.tuna.tsinghua.edu.cn/simple">https://pypi.tuna.tsinghua.edu.cn/simple</a></li><li>pip install numpy -i <a href="https://pypi.tuna.tsinghua.edu.cn/simple">https://pypi.tuna.tsinghua.edu.cn/simple</a></li></ul></li><li><p>第二种方式：</p><ul><li><p>直接安装<a href="https://www.anaconda.com/products/individual#Downloads">anaconda下载</a></p></li><li><p>注意：Add Path！！！ 添加一下环境变量~</p><p><img src="./images/5-anaconda.jpeg" alt=""></p></li></ul><ul><li>百度网盘链接: <a href="https://pan.baidu.com/s/1sQ8LMH6q8ezVUzNjSCtgyQ">https://pan.baidu.com/s/1sQ8LMH6q8ezVUzNjSCtgyQ</a> 提取码: sm7m</li></ul></li><li><p>启动终端</p><ul><li>Windows----&gt; 快捷键：<strong>win + R</strong> -----&gt;输入：<strong>cmd</strong>回车------&gt;命令行出来</li></ul><ul><li>Mac ----&gt;启动终端</li></ul></li><li><p>启动jupyter</p><ul><li>进入终端输入指令:<strong>jupyter notebook</strong></li><li>在哪里启动jupyter启动，浏览器上的目录，对应哪里，windows默认路径是：<strong>C:\Users\lufengkun</strong></li><li><strong>C:\Users\xxx</strong></li></ul></li></ul><h2 id="第一部分-基本操作">第一部分 基本操作</h2><h3 id="第一节-数组创建">第一节  数组创建</h3><p>创建数组的最简单的方法就是使用array函数，将Python下的list转换为ndarray。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<br>l = [<span class="hljs-number">1</span>,<span class="hljs-number">3</span>,<span class="hljs-number">5</span>,<span class="hljs-number">7</span>,<span class="hljs-number">9</span>] <span class="hljs-comment"># 列表</span><br>arr = np.array(l) <span class="hljs-comment"># 将列表转换为NumPy数组</span><br>arr <span class="hljs-comment"># 数据一样，NumPy数组的方法，功能更加强大</span><br><span class="hljs-comment"># 输出为</span><br><span class="hljs-comment"># array([1, 3, 5, 7, 9])</span><br></code></pre></td></tr></table></figure><p>我们可以利用np中的一些内置函数来创建数组，比如我们创建全0的数组，也可以创建全1数组，全是其他数字的数组，或者等差数列数组，正态分布数组，随机数。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<br>arr1 = np.ones(<span class="hljs-number">10</span>) <span class="hljs-comment"># 输出为：array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])</span><br>arr2 = np.zeros(<span class="hljs-number">10</span>) <span class="hljs-comment"># 输出为： array([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.])</span><br>arr3 = np.full(shape = [<span class="hljs-number">2</span>,<span class="hljs-number">3</span>],fill_value=<span class="hljs-number">2.718</span>) <br><span class="hljs-comment"># 输出为：</span><br><span class="hljs-comment"># array([[2.718, 2.718, 2.718],</span><br><span class="hljs-comment">#       [2.718, 2.718, 2.718]])</span><br>arr4 = np.arange(start = <span class="hljs-number">0</span>,stop = <span class="hljs-number">20</span>,step = <span class="hljs-number">2</span>) <br><span class="hljs-comment"># 等差数列 输出为：array([ 0,  2,  4,  6,  8, 10, 12, 14, 16, 18])</span><br>arr5 = np.linspace(start =<span class="hljs-number">0</span>,stop = <span class="hljs-number">9</span>,num = <span class="hljs-number">10</span>) <br><span class="hljs-comment"># 等差数列 输出为：array([0., 1., 2., 3., 4., 5., 6., 7., 8., 9.])</span><br>arr6 = np.random.randint(<span class="hljs-number">0</span>,<span class="hljs-number">100</span>,size = <span class="hljs-number">10</span>) <br><span class="hljs-comment"># int随机数 输出为：array([ 4,  8, 79, 62, 34, 35,  2, 65, 47, 18])</span><br>arr7 = np.random.randn(<span class="hljs-number">5</span>) <br><span class="hljs-comment"># 正态分布 输出为：array([ 0.57807872,  0.37922855,  2.37936837, -0.28688769,  0.2882854 ])</span><br>arr8 = np.random.random(size = <span class="hljs-number">5</span>) <br><span class="hljs-comment"># float 随机数 输出为：array([0.59646412, 0.37960586, 0.38077327, 0.76983539, 0.22689201])</span><br></code></pre></td></tr></table></figure><h3 id="第二节-查看操作">第二节  查看操作</h3><ul><li>jupyter扩展插件（不安装）<ul><li>pip install jupyter_contrib_nbextensions -i <a href="https://pypi.tuna.tsinghua.edu.cn/simple">https://pypi.tuna.tsinghua.edu.cn/simple</a></li><li>pip install jupyter_nbextensions_configurator -i <a href="https://pypi.tuna.tsinghua.edu.cn/simple">https://pypi.tuna.tsinghua.edu.cn/simple</a></li><li>jupyter contrib nbextension install --user</li><li>jupyter nbextensions_configurator enable --user</li><li><strong>退出，重新进入jupyter notebook就可以了</strong></li></ul></li></ul><p>NumPy的数组类称为ndarray，也被称为别名 array。请注意，numpy.array这与标准Python库类不同array.array，后者仅处理一维数组且功能较少。ndarray对象的重要属性是</p><h4 id="1-2-1-数组的轴数、维度">1.2.1 数组的轴数、维度</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np <br>arr = np.random.randint(<span class="hljs-number">0</span>,<span class="hljs-number">100</span>,size = (<span class="hljs-number">3</span>,<span class="hljs-number">4</span>,<span class="hljs-number">5</span>))<br>arr.ndim <span class="hljs-comment"># 输出 3</span><br></code></pre></td></tr></table></figure><h4 id="1-2-2-数组尺寸形状">1.2.2 数组尺寸形状</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np <br>arr = np.random.randint(<span class="hljs-number">0</span>,<span class="hljs-number">100</span>,size = (<span class="hljs-number">3</span>,<span class="hljs-number">4</span>,<span class="hljs-number">5</span>))<br>arr.shape <span class="hljs-comment"># 输出 (3,4,5)</span><br></code></pre></td></tr></table></figure><h4 id="1-2-3-数组元素的总数">1.2.3 数组元素的总数</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np <br>arr = np.random.randint(<span class="hljs-number">0</span>,<span class="hljs-number">100</span>,size = (<span class="hljs-number">3</span>,<span class="hljs-number">4</span>,<span class="hljs-number">5</span>))<br>arr.size <span class="hljs-comment"># 输出 3*4*5 = 60</span><br></code></pre></td></tr></table></figure><h4 id="1-2-4-数据类型">1.2.4 数据类型</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np <br>arr = np.random.randint(<span class="hljs-number">0</span>,<span class="hljs-number">100</span>,size = (<span class="hljs-number">3</span>,<span class="hljs-number">4</span>,<span class="hljs-number">5</span>))<br>arr.dtype <span class="hljs-comment"># 输出 dtype(&#x27;int64&#x27;)</span><br></code></pre></td></tr></table></figure><h4 id="1-2-5-数组中每个元素的大小（以字节为单位）">1.2.5 数组中每个元素的大小（以字节为单位）</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np <br>arr = np.random.randint(<span class="hljs-number">0</span>,<span class="hljs-number">100</span>,size = (<span class="hljs-number">3</span>,<span class="hljs-number">4</span>,<span class="hljs-number">5</span>))<br>arr.itemsize <span class="hljs-comment">#输出是 8 ，因为数据类型是int64，64位，一个字节是8位，所以64/8 = 8</span><br></code></pre></td></tr></table></figure><h3 id="第三节-文件IO操作">第三节 文件IO操作</h3><h4 id="1-3-1-保存数组">1.3.1 保存数组</h4><p>save方法保存ndarray到一个npy文件，也可以使用savez将多个array保存到一个.npz文件中</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs python">x = np.random.randn(<span class="hljs-number">5</span>)<br>y = np.arange(<span class="hljs-number">0</span>,<span class="hljs-number">10</span>,<span class="hljs-number">1</span>)<br><span class="hljs-comment">#save方法可以存一个ndarray</span><br>np.save(<span class="hljs-string">&quot;x_arr&quot;</span>,x)<br><span class="hljs-comment">#如果要存多个数组，要是用savez方法，保存时以key-value形式保存，key任意（xarr、yarr）</span><br>np.savez(<span class="hljs-string">&quot;some_array.npz&quot;</span>,xarr = x,yarr=y)<br></code></pre></td></tr></table></figure><h4 id="1-3-2-读取">1.3.2 读取</h4><p>load方法来读取存储的数组，如果是.npz文件的话，读取之后相当于形成了一个key-value类型的变量，通过保存时定义的key来获取相应的array</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs python">np.load(<span class="hljs-string">&#x27;x_arr.npy&#x27;</span>) <span class="hljs-comment"># 直接加载</span><br><br><span class="hljs-comment"># 通过key获取保存的数组数据</span><br>np.load(<span class="hljs-string">&#x27;some_array.npz&#x27;</span>)[<span class="hljs-string">&#x27;yarr&#x27;</span>]<br></code></pre></td></tr></table></figure><h4 id="1-3-3-读写csv、txt文件">1.3.3 读写csv、txt文件</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs python">arr = np.random.randint(<span class="hljs-number">0</span>,<span class="hljs-number">10</span>,size = (<span class="hljs-number">3</span>,<span class="hljs-number">4</span>))<br><span class="hljs-comment">#储存数组到txt文件</span><br>np.savetxt(<span class="hljs-string">&quot;arr.csv&quot;</span>,arr,delimiter=<span class="hljs-string">&#x27;,&#x27;</span>) <span class="hljs-comment"># 文件后缀是txt也是一样的</span><br><span class="hljs-comment">#读取txt文件，delimiter为分隔符，dtype为数据类型</span><br>np.loadtxt(<span class="hljs-string">&quot;arr.csv&quot;</span>,delimiter=<span class="hljs-string">&#x27;,&#x27;</span>,dtype=np.int32)<br></code></pre></td></tr></table></figure><h2 id="第二部分-数据类型">第二部分 数据类型</h2><p>ndarray的数据类型：</p><ul><li>int: int8、uint8、int16、int32、int64</li><li>float: float16、float32、float64</li><li>str</li></ul><h3 id="array创建时，指定">array创建时，指定</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<br>np.array([<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">5</span>,<span class="hljs-number">8</span>,<span class="hljs-number">2</span>],dtype = <span class="hljs-string">&#x27;float32&#x27;</span>) <br><span class="hljs-comment"># 输出 ：array([1., 2., 5., 8., 2.], dtype=float32)</span><br></code></pre></td></tr></table></figure><h3 id="asarray转换时指定">asarray转换时指定</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<br>arr = [<span class="hljs-number">1</span>,<span class="hljs-number">3</span>,<span class="hljs-number">5</span>,<span class="hljs-number">7</span>,<span class="hljs-number">2</span>,<span class="hljs-number">9</span>,<span class="hljs-number">0</span>]<br><span class="hljs-comment"># asarray 将列表进行变换</span><br>np.asarray(arr,dtype = <span class="hljs-string">&#x27;float32&#x27;</span>) <br><span class="hljs-comment"># 输出：array([1., 3., 5., 7., 2., 9., 0.], dtype=float32)</span><br></code></pre></td></tr></table></figure><h3 id="数据类型转换astype">数据类型转换astype</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<br>arr = np.random.randint(<span class="hljs-number">0</span>,<span class="hljs-number">10</span>,size = <span class="hljs-number">5</span>,dtype = <span class="hljs-string">&#x27;int16&#x27;</span>) <br><span class="hljs-comment"># 输出：array([6, 6, 6, 6, 3], dtype=int16)</span><br><span class="hljs-comment"># 使用astype进行转换</span><br>arr.astype(<span class="hljs-string">&#x27;float32&#x27;</span>) <span class="hljs-comment"># 输出：array([1., 4., 0., 6., 6.], dtype=float32)</span><br></code></pre></td></tr></table></figure><h2 id="第三部分-数组运算">第三部分 数组运算</h2><h3 id="加减乘除幂运算">加减乘除幂运算</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<br>arr1 = np.array([<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>,<span class="hljs-number">4</span>,<span class="hljs-number">5</span>])<br>arr2 = np.array([<span class="hljs-number">2</span>,<span class="hljs-number">3</span>,<span class="hljs-number">1</span>,<span class="hljs-number">5</span>,<span class="hljs-number">9</span>])<br>arr1 - arr2 <span class="hljs-comment"># 减法</span><br>arr1 * arr2 <span class="hljs-comment"># 乘法</span><br>arr1 / arr2 <span class="hljs-comment"># 除法</span><br>arr1**arr2 <span class="hljs-comment"># 两个星号表示幂运算</span><br></code></pre></td></tr></table></figure><h3 id="逻辑运算">逻辑运算</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<br>arr1 = np.array([<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>,<span class="hljs-number">4</span>,<span class="hljs-number">5</span>])<br>arr2 = np.array([<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>,<span class="hljs-number">5</span>])<br>arr1 &lt; <span class="hljs-number">5</span><br>arr1 &gt;= <span class="hljs-number">5</span><br>arr1 == <span class="hljs-number">5</span><br>arr1 == arr2<br>arr1 &gt; arr2<br></code></pre></td></tr></table></figure><h3 id="数组与标量计算">数组与标量计算</h3><p>数组与标量的算术运算也会将标量值传播到各个元素</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<br>arr = np.arange(<span class="hljs-number">1</span>,<span class="hljs-number">10</span>)<br><span class="hljs-number">1</span>/arr<br>arr+<span class="hljs-number">5</span><br>arr*<span class="hljs-number">5</span><br></code></pre></td></tr></table></figure><h3 id="、-、-操作">*=、+=、-=操作</h3><p>某些操作（例如+=和*=）只会修改现有数组，而不是创建一个新数组。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<br>arr1 = np.arange(<span class="hljs-number">5</span>)<br>arr1 +=<span class="hljs-number">5</span><br>arr1 -=<span class="hljs-number">5</span><br>arr1 *=<span class="hljs-number">5</span><br><span class="hljs-comment"># arr1 /=5 不支持运算</span><br></code></pre></td></tr></table></figure><h2 id="第四部分-复制和视图">第四部分 复制和视图</h2><p>在操作数组时，有时会将其数据复制到新数组中，有时不复制。</p><p>对于初学者来说，这通常会引起混乱。有以下三种情况</p><h3 id="完全没有复制">完全没有复制</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<br>a = np.random.randint(<span class="hljs-number">0</span>,<span class="hljs-number">100</span>,size = (<span class="hljs-number">4</span>,<span class="hljs-number">5</span>))<br>b = a<br>a <span class="hljs-keyword">is</span> b <span class="hljs-comment"># 返回True a和b是两个不同名字对应同一个内存对象</span><br>b[<span class="hljs-number">0</span>,<span class="hljs-number">0</span>] = <span class="hljs-number">1024</span> <span class="hljs-comment"># 命运共同体</span><br>display(a,b)<br></code></pre></td></tr></table></figure><h3 id="查看或浅拷贝">查看或浅拷贝</h3><p>不同的数组对象可以共享相同的数据。该view方法创建一个查看相同数据的新数组对象</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<br>a = np.random.randint(<span class="hljs-number">0</span>,<span class="hljs-number">100</span>,size = (<span class="hljs-number">4</span>,<span class="hljs-number">5</span>))<br>b = a.view() <span class="hljs-comment"># 使用a中的数据创建一个新数组对象</span><br>a <span class="hljs-keyword">is</span> b <span class="hljs-comment"># 返回False a和b是两个不同名字对应同一个内存对象</span><br>b.base <span class="hljs-keyword">is</span> a <span class="hljs-comment"># 返回True，b视图的根数据和a一样</span><br>b.flags.owndata <span class="hljs-comment"># 返回False b中的数据不是其自己的</span><br>a.flags.owndata <span class="hljs-comment"># 返回True a中的数据是其自己的</span><br>b[<span class="hljs-number">0</span>,<span class="hljs-number">0</span>] = <span class="hljs-number">1024</span> <span class="hljs-comment"># a和b的数据都发生改变</span><br>display(a,b)<br></code></pre></td></tr></table></figure><h3 id="深拷贝">深拷贝</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<br>a = np.random.randint(<span class="hljs-number">0</span>,<span class="hljs-number">100</span>,size = (<span class="hljs-number">4</span>,<span class="hljs-number">5</span>))<br>b = a.copy()<br>b <span class="hljs-keyword">is</span> a <span class="hljs-comment"># 返回False</span><br>b.base <span class="hljs-keyword">is</span> a <span class="hljs-comment"># 返回False</span><br>b.flags.owndata <span class="hljs-comment"># 返回True</span><br>a.flags.owndata <span class="hljs-comment"># 返回True</span><br>b[<span class="hljs-number">0</span>,<span class="hljs-number">0</span>] = <span class="hljs-number">1024</span> <span class="hljs-comment"># b改变，a不变，分道扬镳</span><br>display(a,b)<br></code></pre></td></tr></table></figure><ul><li><p>copy应该在不再需要原来的数组情况下，切片后调用。例如，假设a是一个巨大的中间结果，而最终结果b仅包含的一小部分a，则在b使用切片进行构造时应制作一个深拷贝：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<br>a = np.arange(<span class="hljs-number">1e8</span>)<br>b = a[::<span class="hljs-number">1000000</span>].copy() <span class="hljs-comment"># 每100万个数据中取一个数据</span><br><span class="hljs-keyword">del</span> a <span class="hljs-comment"># 不在需要a，删除占大内存的a</span><br>b.shape <span class="hljs-comment"># shape(100,)</span><br></code></pre></td></tr></table></figure></li></ul><h2 id="第五部分-索引、切片和迭代">第五部分 索引、切片和迭代</h2><h3 id="第一节-基本索引和切片">第一节 基本索引和切片</h3><p>numpy中数组切片是原始数组的视图，这意味着数据不会被复制，视图上任何数据的修改都会反映到原数组上</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs python">arr = np.array([<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>,<span class="hljs-number">4</span>,<span class="hljs-number">5</span>,<span class="hljs-number">6</span>,<span class="hljs-number">7</span>,<span class="hljs-number">8</span>,<span class="hljs-number">9</span>])<br>arr[<span class="hljs-number">5</span>] <span class="hljs-comment">#索引 输出 5</span><br>arr[<span class="hljs-number">5</span>:<span class="hljs-number">8</span>] <span class="hljs-comment">#切片输出：array([5, 6, 7])</span><br>arr[<span class="hljs-number">2</span>::<span class="hljs-number">2</span>] <span class="hljs-comment"># 从索引2开始每两个中取一个 输出 array([2, 4, 6, 8])</span><br>arr[::<span class="hljs-number">3</span>] <span class="hljs-comment"># 不写索引默认从0开始，每3个中取一个 输出为 array([0, 3, 6, 9])</span><br>arr[<span class="hljs-number">1</span>:<span class="hljs-number">7</span>:<span class="hljs-number">2</span>] <span class="hljs-comment"># 从索引1开始到索引7结束，左闭右开，每2个数中取一个 输出 array([1, 3, 5])</span><br>arr[::-<span class="hljs-number">1</span>] <span class="hljs-comment"># 倒序 输出 array([9, 8, 7, 6, 5, 4, 3, 2, 1, 0])</span><br>arr[::-<span class="hljs-number">2</span>] <span class="hljs-comment"># 倒序 每两个取一个 输出  array([9, 7, 5, 3, 1])</span><br>arr[<span class="hljs-number">5</span>:<span class="hljs-number">8</span>]=<span class="hljs-number">12</span> <span class="hljs-comment"># 切片赋值会赋值到每个元素上，与列表操作不同</span><br>temp = arr[<span class="hljs-number">5</span>:<span class="hljs-number">8</span>]<br>temp[<span class="hljs-number">1</span>] = <span class="hljs-number">1024</span><br>arr <span class="hljs-comment"># 输出：array([   0,    1,    2,    3,    4,   12, 1024,   12,    8,    9])</span><br></code></pre></td></tr></table></figure><p>对于二维数组或者高维数组，我们可以按照之前的知识来索引，当然也可以传入一个以逗号隔开的索引列表来选区单个或多个元素</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs python">arr2d = np.array([[<span class="hljs-number">1</span>,<span class="hljs-number">3</span>,<span class="hljs-number">5</span>],[<span class="hljs-number">2</span>,<span class="hljs-number">4</span>,<span class="hljs-number">6</span>],[-<span class="hljs-number">2</span>,-<span class="hljs-number">7</span>,-<span class="hljs-number">9</span>],[<span class="hljs-number">6</span>,<span class="hljs-number">6</span>,<span class="hljs-number">6</span>]]) <span class="hljs-comment"># 二维数组 shape(3,4)</span><br>arr2d[<span class="hljs-number">0</span>,-<span class="hljs-number">1</span>] <span class="hljs-comment">#索引 等于arr2d[0][-1] 输出 5</span><br>arr2d[<span class="hljs-number">0</span>,<span class="hljs-number">2</span>]  <span class="hljs-comment">#索引 等于arr2d[0][2] ==  arr2d[0][-1] 输出 5</span><br><br>arr2d[:<span class="hljs-number">2</span>,-<span class="hljs-number">2</span>:] <span class="hljs-comment">#切片 第一维和第二维都进行切片 等于arr2d[:2][:,1:] </span><br>arr2d[:<span class="hljs-number">2</span>,<span class="hljs-number">1</span>:] <span class="hljs-comment">#切片 1 == -2 一个是正序，另个一是倒序，对应相同的位置</span><br><span class="hljs-comment"># 输出：</span><br><span class="hljs-comment">#array([[3, 5],</span><br><span class="hljs-comment">#       [4, 6]])</span><br></code></pre></td></tr></table></figure><h3 id="第二节-花式索引和索引技巧">第二节 花式索引和索引技巧</h3><ul><li>整数数组进行索引即花式索引,其和切片不一样，它总是将数据复制到新数组中</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<br><span class="hljs-comment">#一维</span><br>arr1 = np.array([<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>,<span class="hljs-number">4</span>,<span class="hljs-number">5</span>,<span class="hljs-number">6</span>,<span class="hljs-number">7</span>,<span class="hljs-number">8</span>,<span class="hljs-number">9</span>,<span class="hljs-number">10</span>])<br>arr2 = arr1[[<span class="hljs-number">1</span>,<span class="hljs-number">3</span>,<span class="hljs-number">3</span>,<span class="hljs-number">5</span>,<span class="hljs-number">7</span>,<span class="hljs-number">7</span>,<span class="hljs-number">7</span>]] <span class="hljs-comment"># 输出 array([2, 4, 4, 6, 8, 8, 8])</span><br>arr2[-<span class="hljs-number">1</span>] = <span class="hljs-number">1024</span> <span class="hljs-comment"># 修改值，不影响arr1</span><br><span class="hljs-comment">#二维</span><br>arr2d = np.array([[<span class="hljs-number">1</span>,<span class="hljs-number">3</span>,<span class="hljs-number">5</span>,<span class="hljs-number">7</span>,<span class="hljs-number">9</span>],[<span class="hljs-number">2</span>,<span class="hljs-number">4</span>,<span class="hljs-number">6</span>,<span class="hljs-number">8</span>,<span class="hljs-number">10</span>],[<span class="hljs-number">12</span>,<span class="hljs-number">18</span>,<span class="hljs-number">22</span>,<span class="hljs-number">23</span>,<span class="hljs-number">37</span>],[<span class="hljs-number">123</span>,<span class="hljs-number">55</span>,<span class="hljs-number">17</span>,<span class="hljs-number">88</span>,<span class="hljs-number">103</span>]]) <span class="hljs-comment">#shape(4,5)</span><br>arr2d[[<span class="hljs-number">1</span>,<span class="hljs-number">3</span>]] <span class="hljs-comment"># 获取第二行和第四行，索引从0开始的所以1对应第二行 </span><br><span class="hljs-comment"># 输出 array([[  2,   4,   6,   8,  10],</span><br><span class="hljs-comment">#            [123,  55,  17,  88, 103]])</span><br>arr2d[([<span class="hljs-number">1</span>,<span class="hljs-number">3</span>],[<span class="hljs-number">2</span>,<span class="hljs-number">4</span>])] <span class="hljs-comment"># 相当于arr2d[1,2]获取一个元素,arr2d[3,4]获取另一个元素</span><br><span class="hljs-comment"># 输出为 array([  6, 103])</span><br><span class="hljs-comment"># 选择一个区域</span><br>arr2d[np.ix_([<span class="hljs-number">1</span>,<span class="hljs-number">3</span>,<span class="hljs-number">3</span>,<span class="hljs-number">3</span>],[<span class="hljs-number">2</span>,<span class="hljs-number">4</span>,<span class="hljs-number">4</span>])] <span class="hljs-comment"># 相当于 arr2d[[1,3,3,3]][:,[2,4,4]]</span><br>arr2d[[<span class="hljs-number">1</span>,<span class="hljs-number">3</span>,<span class="hljs-number">3</span>,<span class="hljs-number">3</span>]][:,[<span class="hljs-number">2</span>,<span class="hljs-number">4</span>,<span class="hljs-number">4</span>]]<br><span class="hljs-comment"># ix_()函数可用于组合不同的向量</span><br><span class="hljs-comment"># 第一个列表存的是待提取元素的行标，第二个列表存的是待提取元素的列标</span><br><span class="hljs-comment"># 输出为</span><br><span class="hljs-comment"># array([[  6,  10,  10],</span><br><span class="hljs-comment">#        [ 17, 103, 103],</span><br><span class="hljs-comment">#        [ 17, 103, 103],</span><br><span class="hljs-comment">#        [ 17, 103, 103]])</span><br></code></pre></td></tr></table></figure><ul><li>boolean值索引</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs python">names = np.array([<span class="hljs-string">&#x27;softpo&#x27;</span>,<span class="hljs-string">&#x27;Brandon&#x27;</span>,<span class="hljs-string">&#x27;Will&#x27;</span>,<span class="hljs-string">&#x27;Michael&#x27;</span>,<span class="hljs-string">&#x27;Will&#x27;</span>,<span class="hljs-string">&#x27;Ella&#x27;</span>,<span class="hljs-string">&#x27;Daniel&#x27;</span>,<span class="hljs-string">&#x27;softpo&#x27;</span>,<span class="hljs-string">&#x27;Will&#x27;</span>,<span class="hljs-string">&#x27;Brandon&#x27;</span>])<br>cond1 = names == <span class="hljs-string">&#x27;Will&#x27;</span><br>cond1 <br><span class="hljs-comment"># 输出array([False, False,  True, False,  True, False, False, False,  True, False])</span><br>names[cond1] <span class="hljs-comment"># array([&#x27;Will&#x27;, &#x27;Will&#x27;, &#x27;Will&#x27;], dtype=&#x27;&lt;U7&#x27;)</span><br>arr = np.random.randint(<span class="hljs-number">0</span>,<span class="hljs-number">100</span>,size = (<span class="hljs-number">10</span>,<span class="hljs-number">8</span>)) <span class="hljs-comment"># 0~100随机数</span><br>cond2 = arr &gt; <span class="hljs-number">90</span> <br><span class="hljs-comment"># 找到所有大于90的索引，返回boolean类型的数组 shape(10,8)，大于返回True，否则False</span><br>arr[cond2] <span class="hljs-comment"># 返回数据全部是大于90的</span><br></code></pre></td></tr></table></figure><h2 id="第六部分-形状操作">第六部分 形状操作</h2><h3 id="数组变形">数组变形</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<br>arr1 = np.random.randint(<span class="hljs-number">0</span>,<span class="hljs-number">10</span>,size = (<span class="hljs-number">3</span>,<span class="hljs-number">4</span>,<span class="hljs-number">5</span>))<br>arr2 = arr1.reshape(<span class="hljs-number">12</span>,<span class="hljs-number">5</span>) <span class="hljs-comment"># 形状改变，返回新数组</span><br>arr3 = arr1.reshape(-<span class="hljs-number">1</span>,<span class="hljs-number">5</span>) <span class="hljs-comment"># 自动“整形”，自动计算</span><br></code></pre></td></tr></table></figure><h3 id="数组转置">数组转置</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<br>arr1 = np.random.randint(<span class="hljs-number">0</span>,<span class="hljs-number">10</span>,size = (<span class="hljs-number">3</span>,<span class="hljs-number">5</span>)) <span class="hljs-comment"># shape(3,5)</span><br>arr1.T <span class="hljs-comment"># shape(5,3) 转置</span><br>arr2 = np.random.randint(<span class="hljs-number">0</span>,<span class="hljs-number">10</span>,size = (<span class="hljs-number">3</span>,<span class="hljs-number">6</span>,<span class="hljs-number">4</span>)) <span class="hljs-comment"># shape(3,6,4)</span><br>np.transpose(arr2,axes=(<span class="hljs-number">2</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>)) <span class="hljs-comment"># transpose改变数组维度 shape(4,3,6)</span><br></code></pre></td></tr></table></figure><h3 id="数组堆叠">数组堆叠</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<br>arr1 = np.array([[<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>]])<br>arr2 = np.array([[<span class="hljs-number">4</span>,<span class="hljs-number">5</span>,<span class="hljs-number">6</span>]])<br>np.concatenate([arr1,arr2],axis = <span class="hljs-number">0</span>) <br><span class="hljs-comment"># 串联合并shape(2,3) axis = 0表示第一维串联 输出为</span><br><span class="hljs-comment"># array([[1, 2, 3],</span><br><span class="hljs-comment">#        [4, 5, 6]])</span><br>np.concatenate([arr1,arr2],axis = <span class="hljs-number">1</span>) <br><span class="hljs-comment"># shape(1,6) axis = 1表示第二维串联 输出为：array([[1, 2, 3, 4, 5, 6]])</span><br><br>np.hstack((arr1,arr2)) <span class="hljs-comment"># 水平方向堆叠 输出为：array([[1, 2, 3, 4, 5, 6]])</span><br>np.vstack((arr1,arr2)) <br><span class="hljs-comment"># 竖直方向堆叠，输出为：</span><br><span class="hljs-comment"># array([[1, 2, 3],</span><br><span class="hljs-comment">#        [4, 5, 6]])</span><br></code></pre></td></tr></table></figure><h3 id="split数组拆分">split数组拆分</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<br>arr = np.random.randint(<span class="hljs-number">0</span>,<span class="hljs-number">10</span>,size = (<span class="hljs-number">6</span>,<span class="hljs-number">5</span>)) <span class="hljs-comment"># shape(6,5)</span><br>np.split(arr,indices_or_sections=<span class="hljs-number">2</span>,axis = <span class="hljs-number">0</span>) <span class="hljs-comment"># 在第一维（6）平均分成两份 </span><br>np.split(arr,indices_or_sections=[<span class="hljs-number">2</span>,<span class="hljs-number">3</span>],axis = <span class="hljs-number">1</span>) <span class="hljs-comment"># 在第二维（5）以索引2，3为断点分割成3份</span><br><br>np.vsplit(arr,indices_or_sections=<span class="hljs-number">3</span>) <span class="hljs-comment"># 在竖直方向平均分割成3份</span><br>np.hsplit(arr,indices_or_sections=[<span class="hljs-number">1</span>,<span class="hljs-number">4</span>]) <span class="hljs-comment"># 在水平方向，以索引1，4为断点分割成3份</span><br></code></pre></td></tr></table></figure><h2 id="第七部分-广播机制">第七部分 广播机制</h2><p>当两个数组的形状并不相同的时候，我们可以通过扩展数组的方法来实现相加、相减、相乘等操作，这种机制叫做广播（broadcasting）</p><h3 id="一维数组广播">一维数组广播</h3><p><img src="./images/%E5%B9%BF%E6%92%AD1.png" alt=""></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<br>arr1 = np.sort(np.array([<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>]*<span class="hljs-number">3</span>)).reshape(<span class="hljs-number">4</span>,<span class="hljs-number">3</span>) <span class="hljs-comment">#shape(4,3)</span><br>arr2 = np.array([<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>]) <span class="hljs-comment"># shape(3,)</span><br>arr3 = arr1 + arr2 <span class="hljs-comment"># arr2进行广播复制4份 shape(4,3)</span><br>arr3<br></code></pre></td></tr></table></figure><h3 id="二维数组的广播">二维数组的广播</h3><p><img src="./images/%E5%B9%BF%E6%92%AD2.png" alt=""></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<br>arr1 = np.sort(np.array([<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>]*<span class="hljs-number">3</span>)).reshape(<span class="hljs-number">4</span>,<span class="hljs-number">3</span>) <span class="hljs-comment"># shape(4,3)</span><br>arr2 = np.array([[<span class="hljs-number">1</span>],[<span class="hljs-number">2</span>],[<span class="hljs-number">3</span>],[<span class="hljs-number">4</span>]]) <span class="hljs-comment"># shape(4,1)</span><br>arr3 = arr1 + arr2 <span class="hljs-comment"># arr2 进行广播复制3份 shape(4,3)</span><br>arr3<br></code></pre></td></tr></table></figure><h3 id="三维数组广播">三维数组广播</h3><p><img src="./images/%E5%B9%BF%E6%92%AD3.png" alt=""></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<br>arr1 = np.array([<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>,<span class="hljs-number">4</span>,<span class="hljs-number">5</span>,<span class="hljs-number">6</span>,<span class="hljs-number">7</span>]*<span class="hljs-number">3</span>).reshape(<span class="hljs-number">3</span>,<span class="hljs-number">4</span>,<span class="hljs-number">2</span>) <span class="hljs-comment">#shape(3,4,2)</span><br>arr2 = np.array([<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>,<span class="hljs-number">4</span>,<span class="hljs-number">5</span>,<span class="hljs-number">6</span>,<span class="hljs-number">7</span>]).reshape(<span class="hljs-number">4</span>,<span class="hljs-number">2</span>) <span class="hljs-comment">#shape(4,2)</span><br>arr3 = arr1 + arr2 <span class="hljs-comment"># arr2数组在0维上复制3份 shape(3,4,2)</span><br>arr3<br></code></pre></td></tr></table></figure><p><img src="./images/%E5%B9%BF%E6%92%AD4.png" alt=""></p><h2 id="第八部分-通用函数">第八部分 通用函数</h2><h3 id="第一节-通用函数：元素级数字函数">第一节 通用函数：元素级数字函数</h3><p>abs、sqrt、square、exp、log、sin、cos、tan，maxinmum、minimum、all、any、inner、clip、round、trace、ceil、floor</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<br>arr1 = np.array([<span class="hljs-number">1</span>,<span class="hljs-number">4</span>,<span class="hljs-number">8</span>,<span class="hljs-number">9</span>,<span class="hljs-number">16</span>,<span class="hljs-number">25</span>])<br>np.sqrt(arr1) <span class="hljs-comment"># 开平方</span><br>np.square(arr1) <span class="hljs-comment"># 平方</span><br>np.clip(arr1,<span class="hljs-number">2</span>,<span class="hljs-number">16</span>) <span class="hljs-comment"># 输出 array([ 2,  4,  8,  9, 16, 16])</span><br><br>x = np.array([<span class="hljs-number">1</span>,<span class="hljs-number">5</span>,<span class="hljs-number">2</span>,<span class="hljs-number">9</span>,<span class="hljs-number">3</span>,<span class="hljs-number">6</span>,<span class="hljs-number">8</span>])<br>y = np.array([<span class="hljs-number">2</span>,<span class="hljs-number">4</span>,<span class="hljs-number">3</span>,<span class="hljs-number">7</span>,<span class="hljs-number">1</span>,<span class="hljs-number">9</span>,<span class="hljs-number">0</span>])<br>np.maximum(x,y) <span class="hljs-comment"># 返回两个数组中的比较大的值</span><br>arr2 = np.random.randint(<span class="hljs-number">0</span>,<span class="hljs-number">10</span>,size = (<span class="hljs-number">5</span>,<span class="hljs-number">5</span>))<br>np.inner(arr2[<span class="hljs-number">0</span>],arr2) <span class="hljs-comment">#返回一维数组向量内积</span><br></code></pre></td></tr></table></figure><h3 id="第二节-where函数">第二节 where函数</h3><p>where 函数，三个参数，条件为真时选择值的数组，条件为假时选择值的数组</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<br>arr1 = np.array([<span class="hljs-number">1</span>,<span class="hljs-number">3</span>,<span class="hljs-number">5</span>,<span class="hljs-number">7</span>,<span class="hljs-number">9</span>])<br>arr2 = np.array([<span class="hljs-number">2</span>,<span class="hljs-number">4</span>,<span class="hljs-number">6</span>,<span class="hljs-number">8</span>,<span class="hljs-number">10</span>])<br>cond = np.array([<span class="hljs-literal">True</span>,<span class="hljs-literal">False</span>,<span class="hljs-literal">True</span>,<span class="hljs-literal">True</span>,<span class="hljs-literal">False</span>])<br>np.where(cond,arr1,arr2) <span class="hljs-comment"># True选择arr1，False选择arr2的值</span><br><span class="hljs-comment"># 输出 array([ 1,  4,  5,  7, 10])</span><br><br>arr3 = np.random.randint(<span class="hljs-number">0</span>,<span class="hljs-number">30</span>,size = <span class="hljs-number">20</span>)<br>np.where(arr3 &lt; <span class="hljs-number">15</span>,arr3,-<span class="hljs-number">15</span>) <span class="hljs-comment"># 小于15还是自身的值，大于15设置成-15</span><br></code></pre></td></tr></table></figure><h3 id="第三节-排序方法">第三节 排序方法</h3><p>np中还提供了排序方法，排序方法是就地排序，即直接改变原数组</p><p>arr.sort()、np.sort()、arr.argsort()</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<br>arr = np.array([<span class="hljs-number">9</span>,<span class="hljs-number">3</span>,<span class="hljs-number">11</span>,<span class="hljs-number">6</span>,<span class="hljs-number">17</span>,<span class="hljs-number">5</span>,<span class="hljs-number">4</span>,<span class="hljs-number">15</span>,<span class="hljs-number">1</span>])<br>arr.sort() <span class="hljs-comment"># 直接改变原数组</span><br>np.sort(arr) <span class="hljs-comment"># 返回深拷贝排序结果</span><br>arr = np.array([<span class="hljs-number">9</span>,<span class="hljs-number">3</span>,<span class="hljs-number">11</span>,<span class="hljs-number">6</span>,<span class="hljs-number">17</span>,<span class="hljs-number">5</span>,<span class="hljs-number">4</span>,<span class="hljs-number">15</span>,<span class="hljs-number">1</span>])<br>arr.argsort() <span class="hljs-comment"># 返回从小到大排序索引 array([8, 1, 6, 5, 3, 0, 2, 7, 4])</span><br></code></pre></td></tr></table></figure><h3 id="第四节-集合运算函数">第四节 集合运算函数</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs python">A = np.array([<span class="hljs-number">2</span>,<span class="hljs-number">4</span>,<span class="hljs-number">6</span>,<span class="hljs-number">8</span>])<br>B = np.array([<span class="hljs-number">3</span>,<span class="hljs-number">4</span>,<span class="hljs-number">5</span>,<span class="hljs-number">6</span>])<br>np.intersect1d(A,B) <span class="hljs-comment"># 交集 array([4, 6])</span><br>np.union1d(A,B) <span class="hljs-comment"># 并集 array([2, 3, 4, 5, 6, 8])</span><br>np.setdiff1d(A,B) <span class="hljs-comment">#差集，A中有，B中没有 array([2, 8])</span><br></code></pre></td></tr></table></figure><h3 id="第五节-数学和统计函数">第五节 数学和统计函数</h3><p>min、max、mean、median、sum、std、var、cumsum、cumprod、argmin、argmax、argwhere、cov、corrcoef</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<br>arr1 = np.array([<span class="hljs-number">1</span>,<span class="hljs-number">7</span>,<span class="hljs-number">2</span>,<span class="hljs-number">19</span>,<span class="hljs-number">23</span>,<span class="hljs-number">0</span>,<span class="hljs-number">88</span>,<span class="hljs-number">11</span>,<span class="hljs-number">6</span>,<span class="hljs-number">11</span>])<br>arr1.<span class="hljs-built_in">min</span>() <span class="hljs-comment"># 计算最小值 0</span><br>arr1.argmax() <span class="hljs-comment"># 计算最大值的索引 返回 6</span><br>np.argwhere(arr1 &gt; <span class="hljs-number">20</span>) <span class="hljs-comment"># 返回大于20的元素的索引</span><br>np.cumsum(arr1) <span class="hljs-comment"># 计算累加和</span><br>arr2 = np.random.randint(<span class="hljs-number">0</span>,<span class="hljs-number">10</span>,size = (<span class="hljs-number">4</span>,<span class="hljs-number">5</span>))<br>arr2.mean(axis = <span class="hljs-number">0</span>) <span class="hljs-comment"># 计算列的平均值</span><br>arr2.mean(axis = <span class="hljs-number">1</span>) <span class="hljs-comment"># 计算行的平均值</span><br>np.cov(arr2,rowvar=<span class="hljs-literal">True</span>) <span class="hljs-comment"># 协方差矩阵</span><br>np.corrcoef(arr2,rowvar=<span class="hljs-literal">True</span>) <span class="hljs-comment"># 相关性系数</span><br></code></pre></td></tr></table></figure><h2 id="第九部分-线性代数">第九部分 线性代数</h2><h3 id="矩阵乘积">矩阵乘积</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment">#矩阵的乘积</span><br>A = np.array([[<span class="hljs-number">4</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>],<br>              [<span class="hljs-number">1</span>,<span class="hljs-number">3</span>,<span class="hljs-number">1</span>]]) <span class="hljs-comment"># shape(2,3)</span><br>B = np.array([[<span class="hljs-number">2</span>,<span class="hljs-number">7</span>],<br>              [-<span class="hljs-number">5</span>,-<span class="hljs-number">7</span>],<br>              [<span class="hljs-number">9</span>,<span class="hljs-number">3</span>]]) <span class="hljs-comment"># shape(3,2)</span><br>np.dot(A,B) <span class="hljs-comment"># 矩阵运算 A的最后一维和B的第一维必须一致</span><br>A @ B <span class="hljs-comment"># 符号 @ 表示矩阵乘积运算</span><br></code></pre></td></tr></table></figure><h3 id="矩阵其他计算">矩阵其他计算</h3><p>下面可以计算矩阵的逆、行列式、特征值和特征向量、qr分解值，svd分解值</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment">#计算矩阵的逆</span><br><span class="hljs-keyword">from</span> numpy.linalg <span class="hljs-keyword">import</span> inv,det,eig,qr,svd<br>A = np.array([[<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>],<br>              [<span class="hljs-number">2</span>,<span class="hljs-number">3</span>,<span class="hljs-number">4</span>],<br>              [<span class="hljs-number">4</span>,<span class="hljs-number">5</span>,<span class="hljs-number">8</span>]]) <span class="hljs-comment"># shape(3,3)</span><br>inv(t) <span class="hljs-comment"># 逆矩阵</span><br>det(t)<span class="hljs-comment">#计算矩阵行列式</span><br></code></pre></td></tr></table></figure><h2 id="第十部分-font-color-red-实战-font-用NumPy分析鸢尾花花萼属性各项指标">第十部分 <font color = red>实战</font>-用NumPy分析鸢尾花花萼属性各项指标</h2><p>案列：读取iris数据集中的花萼长度数据（已保存为csv格式）<br>并对其进行排序、去重，并求出和、累积和、均值、标准差、方差、最小值、最大值。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np  <span class="hljs-comment"># 导入类库 numpy</span><br>data = np.loadtxt(<span class="hljs-string">&#x27;./iris.csv&#x27;</span>,delimiter = <span class="hljs-string">&#x27;,&#x27;</span>)  <span class="hljs-comment"># 读取数据文件，data是二维的数组</span><br>data.sort(axis = -<span class="hljs-number">1</span>)  <span class="hljs-comment"># 简单排序</span><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;简单排序后：&#x27;</span>, data)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;数据去重后：&#x27;</span>, np.unique(data)) <span class="hljs-comment"># 去除重复数据</span><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;数据求和：&#x27;</span>, np.<span class="hljs-built_in">sum</span>(data))  <span class="hljs-comment"># 数组求和</span><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;元素求累加和&#x27;</span>, np.cumsum(data))  <span class="hljs-comment"># 元素求累加和</span><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;数据的均值：&#x27;</span>, np.mean(data))  <span class="hljs-comment"># 均值</span><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;数据的标准差：&#x27;</span>, np.std(data))  <span class="hljs-comment"># 标准差</span><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;数据的方差：&#x27;</span>, np.var(data))  <span class="hljs-comment"># 方差</span><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;数据的最小值：&#x27;</span>, np.<span class="hljs-built_in">min</span>(data))  <span class="hljs-comment"># 最小值</span><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;数据的最大值：&#x27;</span>, np.<span class="hljs-built_in">max</span>(data))  <span class="hljs-comment"># 最大值</span><br></code></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> program </category>
          
          <category> 机器学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> AI </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>多元线性回归</title>
      <link href="/posts/7d0d429b.html"/>
      <url>/posts/7d0d429b.html</url>
      
        <content type="html"><![CDATA[<p>[toc]</p><h2 id="多元线性回归">多元线性回归</h2><p>测试：$$ evidence_{i}=\sum_{j}W_{ij}x_{j}+b_{i} $$</p><h3 id="1、基本概念">1、基本概念</h3><p>线性回归是机器学习中<strong>有监督</strong>机器学习下的一种算法。 <strong>回归问题</strong>主要关注的是<strong>因变量</strong>(需要预测的值，可以是一个也可以是多个)和一个或多个数值型的<strong>自变量</strong>(预测变量)之间的关系。</p><p>需要预测的值:即目标变量，target，y，<strong>连续值</strong>预测变量。</p><p>影响目标变量的因素：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>X</mi><mi mathvariant="normal">_</mi><mn>1</mn></mrow><annotation encoding="application/x-tex">X\_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9933em;vertical-align:-0.31em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mord">_1</span></span></span></span>…<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>X</mi><mi mathvariant="normal">_</mi><mi>n</mi></mrow><annotation encoding="application/x-tex">X\_n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9933em;vertical-align:-0.31em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord mathnormal">n</span></span></span></span>，可以是连续值也可以是离散值。</p><p>因变量和自变量之间的关系:即<strong>模型</strong>，model，是我们要求解的。</p><h4 id="1-1、连续值">1.1、连续值</h4><p><img src="./%E5%9B%BE%E7%89%87/1-%E8%BA%AB%E9%AB%98.jpeg" alt=""></p><h4 id="1-2、离散值">1.2、离散值</h4><p><img src="./%E5%9B%BE%E7%89%87/2-%E7%9C%81%E4%BB%BD.jpeg" alt=""></p><h4 id="1-3、简单线性回归">1.3、简单线性回归</h4><p>前面提到过，算法说白了就是公式，简单线性回归属于一个算法，它所对应的公式。</p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>y</mi><mo>=</mo><mi>w</mi><mi>x</mi><mo>+</mo><mi>b</mi></mrow><annotation encoding="application/x-tex">y = wx + b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal">b</span></span></span></span></p><p>这个公式中，y 是目标变量即未来要预测的值，x 是影响 y 的因素，w,b 是公式上的参数即要求的模型。其实 b 就是咱们的截距，w 就是斜率嘛！ 所以很明显如果模型求出来了，未来影响 y 值的未知数就是一个 x 值，也可以说影响 y 值 的因素只有一个，所以这是就叫<strong>简单</strong>线性回归的原因。</p><p>同时可以发现从 x 到 y 的计算，x 只是一次方，所以这是算法叫<strong>线性</strong>回归的原因。 其实，大家上小学时就已经会解这种一元一次方程了。为什么那个时候不叫人工智能算法呢？因为人工智能算法要求的是最优解！</p><h4 id="1-4、最优解">1.4、最优解</h4><p>Actual value:<strong>真实值</strong>，一般使用 y 表示。</p><p>Predicted value:<strong>预测值</strong>，是把已知的 x 带入到公式里面和<strong>猜</strong>出来的参数 w,b 计算得到的，一般使用 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mspace linebreak="newline"></mspace><mi>h</mi><mi>a</mi><mi>t</mi><mi>y</mi></mrow><annotation encoding="application/x-tex">\\hat{y}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">ha</span><span class="mord mathnormal">t</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span></span></span></span> 表示。</p><p>Error:<strong>误差</strong>，预测值和真实值的差距，一般使用 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mspace linebreak="newline"></mspace><mi>v</mi><mi>a</mi><mi>r</mi><mi>e</mi><mi>p</mi><mi>s</mi><mi>i</mi><mi>l</mi><mi>o</mi><mi>n</mi></mrow><annotation encoding="application/x-tex">\\varepsilon</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mord mathnormal">a</span><span class="mord mathnormal">re</span><span class="mord mathnormal">p</span><span class="mord mathnormal">s</span><span class="mord mathnormal">i</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord mathnormal">n</span></span></span></span> 表示。</p><p><strong>最优解</strong>:尽可能的找到一个模型使得整体的误差最小，整体的误差通常叫做损失 Loss。</p><p>Loss:整体的误差，Loss 通过损失函数 Loss function 计算得到。</p><p><img src="./%E5%9B%BE%E7%89%87/3-%E7%AE%80%E5%8D%95%E7%BA%BF%E6%80%A7%E5%9B%9E%E5%BD%92.jpeg" alt=""></p><h4 id="1-5、多元线性回归">1.5、多元线性回归</h4><p>现实生活中，往往影响结果 y 的因素不止一个，这时 x 就从一个变成了 n 个，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>X</mi><mi mathvariant="normal">_</mi><mn>1</mn></mrow><annotation encoding="application/x-tex">X\_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9933em;vertical-align:-0.31em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mord">_1</span></span></span></span>…<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>X</mi><mi mathvariant="normal">_</mi><mi>n</mi></mrow><annotation encoding="application/x-tex">X\_n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9933em;vertical-align:-0.31em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord mathnormal">n</span></span></span></span> 同时简单线性回归的公式也就不在适用了。<strong>多元线性回归</strong>公式如下：</p><p>$ \hat{y} = w_1X_1 + w_2X_2 + …… + w_nX_n + b $</p><p>b是截距，也可以使用<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>w</mi><mi mathvariant="normal">_</mi><mn>0</mn></mrow><annotation encoding="application/x-tex">w\_0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9544em;vertical-align:-0.31em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mord">_0</span></span></span></span>来表示</p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mspace linebreak="newline"></mspace><mi>h</mi><mi>a</mi><mi>t</mi><mi>y</mi><mo>=</mo><mi>w</mi><mi mathvariant="normal">_</mi><mn>1</mn><mi>X</mi><mi mathvariant="normal">_</mi><mn>1</mn><mo>+</mo><mi>w</mi><mi mathvariant="normal">_</mi><mn>2</mn><mi>X</mi><mi mathvariant="normal">_</mi><mn>2</mn><mo>+</mo><mo>…</mo><mo>…</mo><mo>+</mo><mi>w</mi><mi mathvariant="normal">_</mi><mi>n</mi><mi>X</mi><mi mathvariant="normal">_</mi><mi>n</mi><mo>+</mo><mi>w</mi><mi mathvariant="normal">_</mi><mn>0</mn></mrow><annotation encoding="application/x-tex">\\hat{y} = w\_1X\_1 + w\_2X\_2 + …… + w\_nX\_n + w\_0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">ha</span><span class="mord mathnormal">t</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.9933em;vertical-align:-0.31em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mord">_1</span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mord">_1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.9933em;vertical-align:-0.31em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mord">_2</span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mord">_2</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6667em;vertical-align:-0.0833em;"></span><span class="minner">……</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.9933em;vertical-align:-0.31em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord mathnormal">n</span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.9544em;vertical-align:-0.31em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mord">_0</span></span></span></span></p><p>\\hat{y} = w\_1X\_1 + w\_2X\_2 + …… + w\_nX\_n + w\_0 \* 1</p><p>使用向量来表示，X表示所有的变量，是一维向量；W表示所有的系数（包含<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>w</mi><mi mathvariant="normal">_</mi><mn>0</mn></mrow><annotation encoding="application/x-tex">w\_0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9544em;vertical-align:-0.31em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mord">_0</span></span></span></span>），是一维向量，根据向量乘法规律，可以这么写：</p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mspace linebreak="newline"></mspace><mi>h</mi><mi>a</mi><mi>t</mi><mi>y</mi><mo>=</mo><msup><mi>W</mi><mi>T</mi></msup><mi>X</mi></mrow><annotation encoding="application/x-tex">\\hat{y} = W^TX</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">ha</span><span class="mord mathnormal">t</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8413em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span></span></span></span></p><p><img src="./%E5%9B%BE%E7%89%87/4-%E5%90%91%E9%87%8F%E4%B9%98%E6%B3%95.jpeg" alt=""></p><h3 id="2、正规方程">2、正规方程</h3><h4 id="2-1、最小二乘法矩阵表示">2.1、最小二乘法矩阵表示</h4><p><strong>最小二乘法</strong>可以将误差方程转化为有确定解的<strong>代数方程组</strong>（其方程式数目正好等于未知数的个数），从而可求解出这些未知参数。这个有确定解的代数方程组称为最小二乘法估计的<strong>正规方程</strong>。公式如下：</p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mspace linebreak="newline"></mspace><mi>t</mi><mi>h</mi><mi>e</mi><mi>t</mi><mi>a</mi><mo>=</mo><mo stretchy="false">(</mo><msup><mi>X</mi><mi>T</mi></msup><mi>X</mi><msup><mo stretchy="false">)</mo><mrow><mo>−</mo><mn>1</mn></mrow></msup><msup><mi>X</mi><mi>T</mi></msup><mi>y</mi></mrow><annotation encoding="application/x-tex">\\theta = (X^TX)^{-1}X^Ty</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal">t</span><span class="mord mathnormal">h</span><span class="mord mathnormal">e</span><span class="mord mathnormal">t</span><span class="mord mathnormal">a</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.0913em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span></span></span> 或者 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>W</mi><mo>=</mo><mo stretchy="false">(</mo><msup><mi>X</mi><mi>T</mi></msup><mi>X</mi><msup><mo stretchy="false">)</mo><mrow><mo>−</mo><mn>1</mn></mrow></msup><msup><mi>X</mi><mi>T</mi></msup><mi>y</mi></mrow><annotation encoding="application/x-tex">W = (X^TX)^{-1}X^Ty</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.0913em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span></span></span> ，其中的<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>W</mi><mtext>、</mtext><mspace linebreak="newline"></mspace><mi>t</mi><mi>h</mi><mi>e</mi><mi>t</mi><mi>a</mi></mrow><annotation encoding="application/x-tex">W、\\theta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="mord cjk_fallback">、</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal">t</span><span class="mord mathnormal">h</span><span class="mord mathnormal">e</span><span class="mord mathnormal">t</span><span class="mord mathnormal">a</span></span></span></span> 即使方程的解！</p><p><img src="./%E5%9B%BE%E7%89%87/12-%E7%BA%BF%E6%80%A7%E5%9B%9E%E5%BD%92.jpeg" alt=""></p><p>公式是如何<strong>推导</strong>的？</p><p>最小二乘法公式如下：</p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>J</mi><mo stretchy="false">(</mo><mspace linebreak="newline"></mspace><mi>t</mi><mi>h</mi><mi>e</mi><mi>t</mi><mi>a</mi><mo stretchy="false">)</mo><mo>=</mo><mspace linebreak="newline"></mspace><mi>f</mi><mi>r</mi><mi>a</mi><mi>c</mi><mn>12</mn><mspace linebreak="newline"></mspace><mi>s</mi><mi>u</mi><mi>m</mi><mspace linebreak="newline"></mspace><mi>l</mi><mi>i</mi><mi>m</mi><mi>i</mi><mi>t</mi><msubsup><mi>s</mi><mrow><mi>i</mi><mo>=</mo><mn>0</mn></mrow><mi>n</mi></msubsup><mo stretchy="false">(</mo><msub><mi>h</mi><mrow><mspace linebreak="newline"></mspace><mi>t</mi><mi>h</mi><mi>e</mi><mi>t</mi><mi>a</mi></mrow></msub><mo stretchy="false">(</mo><mi>x</mi><mi mathvariant="normal">_</mi><mi>i</mi><mo stretchy="false">)</mo><mo>−</mo><mi>y</mi><mi mathvariant="normal">_</mi><mi>i</mi><msup><mo stretchy="false">)</mo><mn>2</mn></msup></mrow><annotation encoding="application/x-tex">J(\\theta) = \\frac{1}{2}\\sum\\limits_{i = 0}^n(h_{\\theta}(x\_i) - y\_i)^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.09618em;">J</span><span class="mopen">(</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">t</span><span class="mord mathnormal">h</span><span class="mord mathnormal">e</span><span class="mord mathnormal">t</span><span class="mord mathnormal">a</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal">a</span><span class="mord mathnormal">c</span><span class="mord"><span class="mord">1</span></span><span class="mord"><span class="mord">2</span></span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">s</span><span class="mord mathnormal">u</span><span class="mord mathnormal">m</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1.06em;vertical-align:-0.31em;"></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">imi</span><span class="mord mathnormal">t</span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6644em;"><span style="top:-2.4413em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">0</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2587em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mspace mtight newline"></span><span class="mord mathnormal mtight">t</span><span class="mord mathnormal mtight">h</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight">t</span><span class="mord mathnormal mtight">a</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord mathnormal">i</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.1241em;vertical-align:-0.31em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord mathnormal">i</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span></p><p>使用矩阵表示：</p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>J</mi><mo stretchy="false">(</mo><mspace linebreak="newline"></mspace><mi>t</mi><mi>h</mi><mi>e</mi><mi>t</mi><mi>a</mi><mo stretchy="false">)</mo><mo>=</mo><mspace linebreak="newline"></mspace><mi>f</mi><mi>r</mi><mi>a</mi><mi>c</mi><mn>12</mn><mspace linebreak="newline"></mspace><mi>s</mi><mi>u</mi><mi>m</mi><mspace linebreak="newline"></mspace><mi>l</mi><mi>i</mi><mi>m</mi><mi>i</mi><mi>t</mi><msubsup><mi>s</mi><mrow><mi>i</mi><mo>=</mo><mn>0</mn></mrow><mi>n</mi></msubsup><mo stretchy="false">(</mo><msub><mi>h</mi><mrow><mspace linebreak="newline"></mspace><mi>t</mi><mi>h</mi><mi>e</mi><mi>t</mi><mi>a</mi><mo stretchy="false">(</mo><msub><mi>x</mi><mi>i</mi></msub><mo stretchy="false">)</mo></mrow></msub><mo>−</mo><mi>y</mi><mo stretchy="false">)</mo><mo stretchy="false">(</mo><msub><mi>h</mi><mrow><mspace linebreak="newline"></mspace><mi>t</mi><mi>h</mi><mi>e</mi><mi>t</mi><mi>a</mi><mo stretchy="false">(</mo><mi>x</mi><mi mathvariant="normal">_</mi><mi>i</mi><mo stretchy="false">)</mo></mrow></msub><mo>−</mo><mi>y</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">J(\\theta) = \\frac{1}{2}\\sum\\limits_{i = 0}^n(h_{\\theta(x_i)} - y)(h_{\\theta(x\_i)} - y)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.09618em;">J</span><span class="mopen">(</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">t</span><span class="mord mathnormal">h</span><span class="mord mathnormal">e</span><span class="mord mathnormal">t</span><span class="mord mathnormal">a</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal">a</span><span class="mord mathnormal">c</span><span class="mord"><span class="mord">1</span></span><span class="mord"><span class="mord">2</span></span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">s</span><span class="mord mathnormal">u</span><span class="mord mathnormal">m</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1.1052em;vertical-align:-0.3552em;"></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">imi</span><span class="mord mathnormal">t</span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6644em;"><span style="top:-2.4413em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">0</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2587em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.5198em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mspace mtight newline"></span><span class="mord mathnormal mtight">t</span><span class="mord mathnormal mtight">h</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight">t</span><span class="mord mathnormal mtight">a</span><span class="mopen mtight">(</span><span class="mord mtight"><span class="mord mathnormal mtight">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3281em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3552em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.1472em;vertical-align:-0.3972em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.5198em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mspace mtight newline"></span><span class="mord mathnormal mtight">t</span><span class="mord mathnormal mtight">h</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight">t</span><span class="mord mathnormal mtight">a</span><span class="mopen mtight">(</span><span class="mord mathnormal mtight">x</span><span class="mord mtight" style="margin-right:0.02778em;">_</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3972em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose">)</span></span></span></span></p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>J</mi><mo stretchy="false">(</mo><mspace linebreak="newline"></mspace><mi>t</mi><mi>h</mi><mi>e</mi><mi>t</mi><mi>a</mi><mo stretchy="false">)</mo><mo>=</mo><mspace linebreak="newline"></mspace><mi>f</mi><mi>r</mi><mi>a</mi><mi>c</mi><mn>12</mn><mo stretchy="false">(</mo><mi>X</mi><mspace linebreak="newline"></mspace><mi>t</mi><mi>h</mi><mi>e</mi><mi>t</mi><mi>a</mi><mo>−</mo><mi>y</mi><msup><mo stretchy="false">)</mo><mi>T</mi></msup><mo stretchy="false">(</mo><mi>X</mi><mspace linebreak="newline"></mspace><mi>t</mi><mi>h</mi><mi>e</mi><mi>t</mi><mi>a</mi><mo>−</mo><mi>y</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">J(\\theta) = \\frac{1}{2}(X\\theta - y)^T(X\\theta - y)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.09618em;">J</span><span class="mopen">(</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">t</span><span class="mord mathnormal">h</span><span class="mord mathnormal">e</span><span class="mord mathnormal">t</span><span class="mord mathnormal">a</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal">a</span><span class="mord mathnormal">c</span><span class="mord"><span class="mord">1</span></span><span class="mord"><span class="mord">2</span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.7778em;vertical-align:-0.0833em;"></span><span class="mord mathnormal">t</span><span class="mord mathnormal">h</span><span class="mord mathnormal">e</span><span class="mord mathnormal">t</span><span class="mord mathnormal">a</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.0913em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.7778em;vertical-align:-0.0833em;"></span><span class="mord mathnormal">t</span><span class="mord mathnormal">h</span><span class="mord mathnormal">e</span><span class="mord mathnormal">t</span><span class="mord mathnormal">a</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose">)</span></span></span></span></p><p>之所以要使用转置T，是因为，矩阵运算规律是：矩阵A的一行乘以矩阵B的一列！</p><h4 id="2-2、多元一次方程举例">2.2、多元一次方程举例</h4><p>1、二元一次方程</p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mspace linebreak="newline"></mspace><mi>b</mi><mi>e</mi><mi>g</mi><mi>i</mi><mi>n</mi><mrow><mi>c</mi><mi>a</mi><mi>s</mi><mi>e</mi><mi>s</mi></mrow><mi>x</mi><mo>+</mo><mi>y</mi><mo>=</mo><mn>14</mn><mspace linebreak="newline"></mspace><mtext> </mtext><mn>2</mn><mi>x</mi><mo>−</mo><mi>y</mi><mo>=</mo><mn>10</mn><mspace linebreak="newline"></mspace><mspace linebreak="newline"></mspace><mi>e</mi><mi>n</mi><mi>d</mi><mrow><mi>c</mi><mi>a</mi><mi>s</mi><mi>e</mi><mi>s</mi></mrow></mrow><annotation encoding="application/x-tex">\\begin{cases} x + y=14\\  2x - y = 10\\ \\end{cases}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">b</span><span class="mord mathnormal">e</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">in</span><span class="mord"><span class="mord mathnormal">c</span><span class="mord mathnormal">a</span><span class="mord mathnormal">ses</span></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">14</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord"> 2</span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">10</span></span><span class="mspace newline"></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal">e</span><span class="mord mathnormal">n</span><span class="mord mathnormal">d</span><span class="mord"><span class="mord mathnormal">c</span><span class="mord mathnormal">a</span><span class="mord mathnormal">ses</span></span></span></span></span></p><p>2、三元一次方程</p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mspace linebreak="newline"></mspace><mi>b</mi><mi>e</mi><mi>g</mi><mi>i</mi><mi>n</mi><mrow><mi>c</mi><mi>a</mi><mi>s</mi><mi>e</mi><mi>s</mi></mrow><mi>x</mi><mo>−</mo><mi>y</mi><mo>+</mo><mi>z</mi><mo>=</mo><mn>100</mn><mspace linebreak="newline"></mspace><mn>2</mn><mi>x</mi><mo>+</mo><mi>y</mi><mo>−</mo><mi>z</mi><mo>=</mo><mn>80</mn><mspace linebreak="newline"></mspace><mn>3</mn><mi>x</mi><mo>−</mo><mn>2</mn><mi>y</mi><mo>+</mo><mn>6</mn><mi>z</mi><mo>=</mo><mn>256</mn><mspace linebreak="newline"></mspace><mspace linebreak="newline"></mspace><mi>e</mi><mi>n</mi><mi>d</mi><mrow><mi>c</mi><mi>a</mi><mi>s</mi><mi>e</mi><mi>s</mi></mrow></mrow><annotation encoding="application/x-tex">\\begin{cases} x - y + z = 100\\ 2x + y -z = 80\\ 3x - 2y + 6z = 256\\ \\end{cases}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">b</span><span class="mord mathnormal">e</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">in</span><span class="mord"><span class="mord mathnormal">c</span><span class="mord mathnormal">a</span><span class="mord mathnormal">ses</span></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.7778em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">100</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">2</span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.7778em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">80</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">3</span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8389em;vertical-align:-0.1944em;"></span><span class="mord">2</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">6</span><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">256</span></span><span class="mspace newline"></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal">e</span><span class="mord mathnormal">n</span><span class="mord mathnormal">d</span><span class="mord"><span class="mord mathnormal">c</span><span class="mord mathnormal">a</span><span class="mord mathnormal">ses</span></span></span></span></span></p><p>3、八元一次方程</p><p>\\left{\\begin{align}&14x\_2 + 8x\_3 + 5x\_5 + -2x\_6 + 9x\_7 + -3x\_8 = 339\\&-4x\_1 + 10x\_2 + 6x\_3 + 4x\_4 + -14x\_5 + -2x\_6 + -14x\_7 + 8x\_8 = -114\\&-1x\_1 + -6x\_2 + 5x\_3 + -12x\_4 + 3x\_5 + -3x\_6 + 2x\_7 + -2x\_8 = 30\\&5x\_1 + -2x\_2 + 3x\_3 + 10x\_4 + 5x\_5 + 11x\_6 + 4x\_7 + -8x\_8 = 126\\&-15x\_1 + -15x\_2 + -8x\_3 + -15x\_4 + 7x\_5 + -4x\_6 + -12x\_7 + 2x\_8 = -395\\&11x\_1 + -10x\_2 + -2x\_3 + 4x\_4 + 3x\_5 + -9x\_6 + -6x\_7 + 7x\_8 = -87\\&-14x\_1 + 4x\_3 + -3x\_4 + 5x\_5 + 10x\_6 + 13x\_7 + 7x\_8 = 422\\&-3x\_1 + -7x\_2 + -2x\_3 + -8x\_4 + -6x\_6 + -5x\_7 + -9x\_8 = -309\\end{align}\\right.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs Python"><span class="hljs-comment"># 上面八元一次方程对应的X数据</span><br>[[  <span class="hljs-number">0</span>  <span class="hljs-number">14</span>   <span class="hljs-number">8</span>   <span class="hljs-number">0</span>   <span class="hljs-number">5</span>  -<span class="hljs-number">2</span>   <span class="hljs-number">9</span>  -<span class="hljs-number">3</span>]<br> [ -<span class="hljs-number">4</span>  <span class="hljs-number">10</span>   <span class="hljs-number">6</span>   <span class="hljs-number">4</span> -<span class="hljs-number">14</span>  -<span class="hljs-number">2</span> -<span class="hljs-number">14</span>   <span class="hljs-number">8</span>]<br> [ -<span class="hljs-number">1</span>  -<span class="hljs-number">6</span>   <span class="hljs-number">5</span> -<span class="hljs-number">12</span>   <span class="hljs-number">3</span>  -<span class="hljs-number">3</span>   <span class="hljs-number">2</span>  -<span class="hljs-number">2</span>]<br> [  <span class="hljs-number">5</span>  -<span class="hljs-number">2</span>   <span class="hljs-number">3</span>  <span class="hljs-number">10</span>   <span class="hljs-number">5</span>  <span class="hljs-number">11</span>   <span class="hljs-number">4</span>  -<span class="hljs-number">8</span>]<br> [-<span class="hljs-number">15</span> -<span class="hljs-number">15</span>  -<span class="hljs-number">8</span> -<span class="hljs-number">15</span>   <span class="hljs-number">7</span>  -<span class="hljs-number">4</span> -<span class="hljs-number">12</span>   <span class="hljs-number">2</span>]<br> [ <span class="hljs-number">11</span> -<span class="hljs-number">10</span>  -<span class="hljs-number">2</span>   <span class="hljs-number">4</span>   <span class="hljs-number">3</span>  -<span class="hljs-number">9</span>  -<span class="hljs-number">6</span>   <span class="hljs-number">7</span>]<br> [-<span class="hljs-number">14</span>   <span class="hljs-number">0</span>   <span class="hljs-number">4</span>  -<span class="hljs-number">3</span>   <span class="hljs-number">5</span>  <span class="hljs-number">10</span>  <span class="hljs-number">13</span>   <span class="hljs-number">7</span>]<br> [ -<span class="hljs-number">3</span>  -<span class="hljs-number">7</span>  -<span class="hljs-number">2</span>  -<span class="hljs-number">8</span>   <span class="hljs-number">0</span>  -<span class="hljs-number">6</span>  -<span class="hljs-number">5</span>  -<span class="hljs-number">9</span>]]<br><span class="hljs-comment"># 对应的y</span><br>[ <span class="hljs-number">339</span> -<span class="hljs-number">114</span>   <span class="hljs-number">30</span>  <span class="hljs-number">126</span> -<span class="hljs-number">395</span>  -<span class="hljs-number">87</span>  <span class="hljs-number">422</span> -<span class="hljs-number">309</span>]<br></code></pre></td></tr></table></figure><h4 id="2-3、矩阵转置公式与求导公式：">2.3、矩阵转置公式与求导公式：</h4><p><strong>转置公式如下：</strong></p><ul><li><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mi>m</mi><mi>A</mi><msup><mo stretchy="false">)</mo><mi>T</mi></msup><mo>=</mo><mi>m</mi><msup><mi>A</mi><mi>T</mi></msup></mrow><annotation encoding="application/x-tex">(mA)^T = mA^T</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0913em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal">m</span><span class="mord mathnormal">A</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8413em;"></span><span class="mord mathnormal">m</span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span></span></span></span>，其中m是常数</p></li><li><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mi>A</mi><mo>+</mo><mi>B</mi><msup><mo stretchy="false">)</mo><mi>T</mi></msup><mo>=</mo><msup><mi>A</mi><mi>T</mi></msup><mo>+</mo><msup><mi>B</mi><mi>T</mi></msup></mrow><annotation encoding="application/x-tex">(A + B)^T = A^T + B^T</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal">A</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.0913em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.9247em;vertical-align:-0.0833em;"></span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8413em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span></span></span></span></p></li><li><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mi>A</mi><mi>B</mi><msup><mo stretchy="false">)</mo><mi>T</mi></msup><mo>=</mo><msup><mi>B</mi><mi>T</mi></msup><msup><mi>A</mi><mi>T</mi></msup></mrow><annotation encoding="application/x-tex">(AB)^T = B^TA^T</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0913em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal">A</span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8413em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span></span></span></span></p></li><li><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><msup><mi>A</mi><mi>T</mi></msup><msup><mo stretchy="false">)</mo><mi>T</mi></msup><mo>=</mo><mi>A</mi></mrow><annotation encoding="application/x-tex">(A^T)^T = A</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0913em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">A</span></span></span></span></p></li></ul><p><strong>求导公式如下：</strong></p><ul><li><p>\\frac{\\partial X^T}{\\partial X} = I$$ 求解出来是单位矩阵</p></li><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mspace linebreak="newline"></mspace><mi>f</mi><mi>r</mi><mi>a</mi><mi>c</mi><mrow><mspace linebreak="newline"></mspace><mi>p</mi><mi>a</mi><mi>r</mi><mi>t</mi><mi>i</mi><mi>a</mi><mi>l</mi><mi>A</mi><msup><mi>X</mi><mi>T</mi></msup></mrow><mrow><mspace linebreak="newline"></mspace><mi>p</mi><mi>a</mi><mi>r</mi><mi>t</mi><mi>i</mi><mi>a</mi><mi>l</mi><mi>X</mi></mrow><mo>=</mo><mi>A</mi></mrow><annotation encoding="application/x-tex">\\frac{\\partial AX^T}{\\partial X} = A</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1.0358em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal">a</span><span class="mord mathnormal">c</span><span class="mord"><span class="mspace newline"></span><span class="mord mathnormal">p</span><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal">t</span><span class="mord mathnormal">ia</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">A</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span></span><span class="mord"><span class="mspace newline"></span><span class="mord mathnormal">p</span><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal">t</span><span class="mord mathnormal">ia</span><span class="mord mathnormal" style="margin-right:0.07847em;">lX</span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">A</span></span></span></span></li><li><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mspace linebreak="newline"></mspace><mi>f</mi><mi>r</mi><mi>a</mi><mi>c</mi><mrow><mspace linebreak="newline"></mspace><mi>p</mi><mi>a</mi><mi>r</mi><mi>t</mi><mi>i</mi><mi>a</mi><mi>l</mi><mi>A</mi><mi>X</mi></mrow><mrow><mspace linebreak="newline"></mspace><mi>p</mi><mi>a</mi><mi>r</mi><mi>t</mi><mi>i</mi><mi>a</mi><mi>l</mi><mi>X</mi></mrow><mo>=</mo><msup><mi>A</mi><mi>T</mi></msup></mrow><annotation encoding="application/x-tex">\\frac{\\partial AX}{\\partial X} = A^T</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal">a</span><span class="mord mathnormal">c</span><span class="mord"><span class="mspace newline"></span><span class="mord mathnormal">p</span><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal">t</span><span class="mord mathnormal">ia</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">A</span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span></span><span class="mord"><span class="mspace newline"></span><span class="mord mathnormal">p</span><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal">t</span><span class="mord mathnormal">ia</span><span class="mord mathnormal" style="margin-right:0.07847em;">lX</span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8913em;"></span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span></span></span></span></span></p></li><li><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mspace linebreak="newline"></mspace><mi>f</mi><mi>r</mi><mi>a</mi><mi>c</mi><mrow><mspace linebreak="newline"></mspace><mi>p</mi><mi>a</mi><mi>r</mi><mi>t</mi><mi>i</mi><mi>a</mi><mi>l</mi><mi>X</mi><mi>A</mi></mrow><mrow><mspace linebreak="newline"></mspace><mi>p</mi><mi>a</mi><mi>r</mi><mi>t</mi><mi>i</mi><mi>a</mi><mi>l</mi><mi>X</mi></mrow><mo>=</mo><msup><mi>A</mi><mi>T</mi></msup></mrow><annotation encoding="application/x-tex">\\frac{\\partial XA}{\\partial X} = A^T</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal">a</span><span class="mord mathnormal">c</span><span class="mord"><span class="mspace newline"></span><span class="mord mathnormal">p</span><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal">t</span><span class="mord mathnormal">ia</span><span class="mord mathnormal" style="margin-right:0.07847em;">lX</span><span class="mord mathnormal">A</span></span><span class="mord"><span class="mspace newline"></span><span class="mord mathnormal">p</span><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal">t</span><span class="mord mathnormal">ia</span><span class="mord mathnormal" style="margin-right:0.07847em;">lX</span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8913em;"></span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span></span></span></span></span></p></li><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mspace linebreak="newline"></mspace><mi>f</mi><mi>r</mi><mi>a</mi><mi>c</mi><mrow><mspace linebreak="newline"></mspace><mi>p</mi><mi>a</mi><mi>r</mi><mi>t</mi><mi>i</mi><mi>a</mi><mi>l</mi><msup><mi>X</mi><mi>T</mi></msup><mi>A</mi><mi>X</mi></mrow><mrow><mspace linebreak="newline"></mspace><mi>p</mi><mi>a</mi><mi>r</mi><mi>t</mi><mi>i</mi><mi>a</mi><mi>l</mi><mi>X</mi></mrow><mo>=</mo><mo stretchy="false">(</mo><mi>A</mi><mo>+</mo><msup><mi>A</mi><mi>T</mi></msup><mo stretchy="false">)</mo><mi>X</mi><mo separator="true">;</mo></mrow><annotation encoding="application/x-tex">\\frac{\\partial X^TAX}{\\partial X} = (A + A^T)X;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1.0358em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal">a</span><span class="mord mathnormal">c</span><span class="mord"><span class="mspace newline"></span><span class="mord mathnormal">p</span><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal">t</span><span class="mord mathnormal">ia</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mord mathnormal">A</span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span></span><span class="mord"><span class="mspace newline"></span><span class="mord mathnormal">p</span><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal">t</span><span class="mord mathnormal">ia</span><span class="mord mathnormal" style="margin-right:0.07847em;">lX</span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal">A</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.0913em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mpunct">;</span></span></span></span> A不是对称矩阵</li><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mspace linebreak="newline"></mspace><mi>f</mi><mi>r</mi><mi>a</mi><mi>c</mi><mrow><mspace linebreak="newline"></mspace><mi>p</mi><mi>a</mi><mi>r</mi><mi>t</mi><mi>i</mi><mi>a</mi><mi>l</mi><msup><mi>X</mi><mi>T</mi></msup><mi>A</mi><mi>X</mi></mrow><mrow><mspace linebreak="newline"></mspace><mi>p</mi><mi>a</mi><mi>r</mi><mi>t</mi><mi>i</mi><mi>a</mi><mi>l</mi><mi>X</mi></mrow><mo>=</mo><mn>2</mn><mi>A</mi><mi>X</mi><mo separator="true">;</mo></mrow><annotation encoding="application/x-tex">\\frac{\\partial X^TAX}{\\partial X} = 2AX;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1.0358em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal">a</span><span class="mord mathnormal">c</span><span class="mord"><span class="mspace newline"></span><span class="mord mathnormal">p</span><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal">t</span><span class="mord mathnormal">ia</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mord mathnormal">A</span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span></span><span class="mord"><span class="mspace newline"></span><span class="mord mathnormal">p</span><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal">t</span><span class="mord mathnormal">ia</span><span class="mord mathnormal" style="margin-right:0.07847em;">lX</span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord">2</span><span class="mord mathnormal">A</span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mpunct">;</span></span></span></span> A是对称矩阵</li></ul><h4 id="2-4、推导正规方程-theta-的解：">2.4、推导正规方程 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mspace linebreak="newline"></mspace><mi>t</mi><mi>h</mi><mi>e</mi><mi>t</mi><mi>a</mi></mrow><annotation encoding="application/x-tex">\\theta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal">t</span><span class="mord mathnormal">h</span><span class="mord mathnormal">e</span><span class="mord mathnormal">t</span><span class="mord mathnormal">a</span></span></span></span> 的解：</h4><ol><li><strong>矩阵乘法公式展开</strong></li></ol><ul><li><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>J</mi><mo stretchy="false">(</mo><mspace linebreak="newline"></mspace><mi>t</mi><mi>h</mi><mi>e</mi><mi>t</mi><mi>a</mi><mo stretchy="false">)</mo><mo>=</mo><mspace linebreak="newline"></mspace><mi>f</mi><mi>r</mi><mi>a</mi><mi>c</mi><mn>12</mn><mo stretchy="false">(</mo><mi>X</mi><mspace linebreak="newline"></mspace><mi>t</mi><mi>h</mi><mi>e</mi><mi>t</mi><mi>a</mi><mo>−</mo><mi>y</mi><msup><mo stretchy="false">)</mo><mi>T</mi></msup><mo stretchy="false">(</mo><mi>X</mi><mspace linebreak="newline"></mspace><mi>t</mi><mi>h</mi><mi>e</mi><mi>t</mi><mi>a</mi><mo>−</mo><mi>y</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">J(\\theta) = \\frac{1}{2}(X\\theta - y)^T(X\\theta - y)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.09618em;">J</span><span class="mopen">(</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">t</span><span class="mord mathnormal">h</span><span class="mord mathnormal">e</span><span class="mord mathnormal">t</span><span class="mord mathnormal">a</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal">a</span><span class="mord mathnormal">c</span><span class="mord"><span class="mord">1</span></span><span class="mord"><span class="mord">2</span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.7778em;vertical-align:-0.0833em;"></span><span class="mord mathnormal">t</span><span class="mord mathnormal">h</span><span class="mord mathnormal">e</span><span class="mord mathnormal">t</span><span class="mord mathnormal">a</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.0913em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.7778em;vertical-align:-0.0833em;"></span><span class="mord mathnormal">t</span><span class="mord mathnormal">h</span><span class="mord mathnormal">e</span><span class="mord mathnormal">t</span><span class="mord mathnormal">a</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose">)</span></span></span></span></p></li><li><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>J</mi><mo stretchy="false">(</mo><mspace linebreak="newline"></mspace><mi>t</mi><mi>h</mi><mi>e</mi><mi>t</mi><mi>a</mi><mo stretchy="false">)</mo><mo>=</mo><mspace linebreak="newline"></mspace><mi>f</mi><mi>r</mi><mi>a</mi><mi>c</mi><mn>12</mn><mo stretchy="false">(</mo><mspace linebreak="newline"></mspace><mi>t</mi><mi>h</mi><mi>e</mi><mi>t</mi><msup><mi>a</mi><mi>T</mi></msup><msup><mi>X</mi><mi>T</mi></msup><mo>−</mo><msup><mi>y</mi><mi>T</mi></msup><mo stretchy="false">)</mo><mo stretchy="false">(</mo><mi>X</mi><mspace linebreak="newline"></mspace><mi>t</mi><mi>h</mi><mi>e</mi><mi>t</mi><mi>a</mi><mo>−</mo><mi>y</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">J(\\theta) = \\frac{1}{2}(\\theta^TX^T - y^T)(X\\theta - y)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.09618em;">J</span><span class="mopen">(</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">t</span><span class="mord mathnormal">h</span><span class="mord mathnormal">e</span><span class="mord mathnormal">t</span><span class="mord mathnormal">a</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal">a</span><span class="mord mathnormal">c</span><span class="mord"><span class="mord">1</span></span><span class="mord"><span class="mord">2</span></span><span class="mopen">(</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.9247em;vertical-align:-0.0833em;"></span><span class="mord mathnormal">t</span><span class="mord mathnormal">h</span><span class="mord mathnormal">e</span><span class="mord mathnormal">t</span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.0913em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.7778em;vertical-align:-0.0833em;"></span><span class="mord mathnormal">t</span><span class="mord mathnormal">h</span><span class="mord mathnormal">e</span><span class="mord mathnormal">t</span><span class="mord mathnormal">a</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose">)</span></span></span></span></p></li><li><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>J</mi><mo stretchy="false">(</mo><mspace linebreak="newline"></mspace><mi>t</mi><mi>h</mi><mi>e</mi><mi>t</mi><mi>a</mi><mo stretchy="false">)</mo><mo>=</mo><mspace linebreak="newline"></mspace><mi>f</mi><mi>r</mi><mi>a</mi><mi>c</mi><mn>12</mn><mo stretchy="false">(</mo><mspace linebreak="newline"></mspace><mi>t</mi><mi>h</mi><mi>e</mi><mi>t</mi><msup><mi>a</mi><mi>T</mi></msup><msup><mi>X</mi><mi>T</mi></msup><mi>X</mi><mspace linebreak="newline"></mspace><mi>t</mi><mi>h</mi><mi>e</mi><mi>t</mi><mi>a</mi><mo>−</mo><mspace linebreak="newline"></mspace><mi>t</mi><mi>h</mi><mi>e</mi><mi>t</mi><msup><mi>a</mi><mi>T</mi></msup><msup><mi>X</mi><mi>T</mi></msup><mi>y</mi><mo>−</mo><msup><mi>y</mi><mi>T</mi></msup><mi>X</mi><mspace linebreak="newline"></mspace><mi>t</mi><mi>h</mi><mi>e</mi><mi>t</mi><mi>a</mi><mo>+</mo><msup><mi>y</mi><mi>T</mi></msup><mi>y</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">J(\\theta) = \\frac{1}{2}(\\theta^TX^TX\\theta - \\theta^TX^Ty -y^TX\\theta + y^Ty)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.09618em;">J</span><span class="mopen">(</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">t</span><span class="mord mathnormal">h</span><span class="mord mathnormal">e</span><span class="mord mathnormal">t</span><span class="mord mathnormal">a</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal">a</span><span class="mord mathnormal">c</span><span class="mord"><span class="mord">1</span></span><span class="mord"><span class="mord">2</span></span><span class="mopen">(</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.8413em;"></span><span class="mord mathnormal">t</span><span class="mord mathnormal">h</span><span class="mord mathnormal">e</span><span class="mord mathnormal">t</span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.7778em;vertical-align:-0.0833em;"></span><span class="mord mathnormal">t</span><span class="mord mathnormal">h</span><span class="mord mathnormal">e</span><span class="mord mathnormal">t</span><span class="mord mathnormal">a</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1.0358em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">t</span><span class="mord mathnormal">h</span><span class="mord mathnormal">e</span><span class="mord mathnormal">t</span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.0358em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.7778em;vertical-align:-0.0833em;"></span><span class="mord mathnormal">t</span><span class="mord mathnormal">h</span><span class="mord mathnormal">e</span><span class="mord mathnormal">t</span><span class="mord mathnormal">a</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.0913em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose">)</span></span></span></span></p></li></ul><ol start="2"><li><strong>进行求导（注意X、y是已知量，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mspace linebreak="newline"></mspace><mi>t</mi><mi>h</mi><mi>e</mi><mi>t</mi><mi>a</mi></mrow><annotation encoding="application/x-tex">\\theta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal">t</span><span class="mord mathnormal">h</span><span class="mord mathnormal">e</span><span class="mord mathnormal">t</span><span class="mord mathnormal">a</span></span></span></span> 是未知数）：</strong></li></ol><ul><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>J</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo stretchy="false">(</mo><mspace linebreak="newline"></mspace><mi>t</mi><mi>h</mi><mi>e</mi><mi>t</mi><mi>a</mi><mo stretchy="false">)</mo><mo>=</mo><mspace linebreak="newline"></mspace><mi>f</mi><mi>r</mi><mi>a</mi><mi>c</mi><mn>12</mn><mo stretchy="false">(</mo><mspace linebreak="newline"></mspace><mi>t</mi><mi>h</mi><mi>e</mi><mi>t</mi><msup><mi>a</mi><mi>T</mi></msup><msup><mi>X</mi><mi>T</mi></msup><mi>X</mi><mspace linebreak="newline"></mspace><mi>t</mi><mi>h</mi><mi>e</mi><mi>t</mi><mi>a</mi><mo>−</mo><mspace linebreak="newline"></mspace><mi>t</mi><mi>h</mi><mi>e</mi><mi>t</mi><msup><mi>a</mi><mi>T</mi></msup><msup><mi>X</mi><mi>T</mi></msup><mi>y</mi><mo>−</mo><msup><mi>y</mi><mi>T</mi></msup><mi>X</mi><mspace linebreak="newline"></mspace><mi>t</mi><mi>h</mi><mi>e</mi><mi>t</mi><mi>a</mi><mo>+</mo><msup><mi>y</mi><mi>T</mi></msup><mi>y</mi><msup><mo stretchy="false">)</mo><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup></mrow><annotation encoding="application/x-tex">J&#x27;(\\theta) = \\frac{1}{2}(\\theta^TX^TX\\theta - \\theta^TX^Ty -y^TX\\theta + y^Ty)&#x27;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0019em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.09618em;">J</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7519em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mopen">(</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">t</span><span class="mord mathnormal">h</span><span class="mord mathnormal">e</span><span class="mord mathnormal">t</span><span class="mord mathnormal">a</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal">a</span><span class="mord mathnormal">c</span><span class="mord"><span class="mord">1</span></span><span class="mord"><span class="mord">2</span></span><span class="mopen">(</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.8413em;"></span><span class="mord mathnormal">t</span><span class="mord mathnormal">h</span><span class="mord mathnormal">e</span><span class="mord mathnormal">t</span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.7778em;vertical-align:-0.0833em;"></span><span class="mord mathnormal">t</span><span class="mord mathnormal">h</span><span class="mord mathnormal">e</span><span class="mord mathnormal">t</span><span class="mord mathnormal">a</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1.0358em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">t</span><span class="mord mathnormal">h</span><span class="mord mathnormal">e</span><span class="mord mathnormal">t</span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.0358em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.7778em;vertical-align:-0.0833em;"></span><span class="mord mathnormal">t</span><span class="mord mathnormal">h</span><span class="mord mathnormal">e</span><span class="mord mathnormal">t</span><span class="mord mathnormal">a</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.0913em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7519em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span></li></ul><ol start="3"><li><strong>根据上面求导公式进行运算：</strong></li></ol><ul><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>J</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo stretchy="false">(</mo><mspace linebreak="newline"></mspace><mi>t</mi><mi>h</mi><mi>e</mi><mi>t</mi><mi>a</mi><mo stretchy="false">)</mo><mo>=</mo><mspace linebreak="newline"></mspace><mi>f</mi><mi>r</mi><mi>a</mi><mi>c</mi><mn>12</mn><mo stretchy="false">(</mo><msup><mi>X</mi><mi>T</mi></msup><mi>X</mi><mspace linebreak="newline"></mspace><mi>t</mi><mi>h</mi><mi>e</mi><mi>t</mi><mi>a</mi><mo>+</mo><mo stretchy="false">(</mo><mspace linebreak="newline"></mspace><mi>t</mi><mi>h</mi><mi>e</mi><mi>t</mi><msup><mi>a</mi><mi>T</mi></msup><msup><mi>X</mi><mi>T</mi></msup><mi>X</mi><msup><mo stretchy="false">)</mo><mi>T</mi></msup><mo>−</mo><msup><mi>X</mi><mi>T</mi></msup><mi>y</mi><mo>−</mo><mo stretchy="false">(</mo><msup><mi>y</mi><mi>T</mi></msup><mi>X</mi><msup><mo stretchy="false">)</mo><mi>T</mi></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">J&#x27;(\\theta) = \\frac{1}{2}(X^TX\\theta + (\\theta^TX^TX)^T-X^Ty - (y^TX)^T)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0019em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.09618em;">J</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7519em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mopen">(</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">t</span><span class="mord mathnormal">h</span><span class="mord mathnormal">e</span><span class="mord mathnormal">t</span><span class="mord mathnormal">a</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1.0913em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal">a</span><span class="mord mathnormal">c</span><span class="mord"><span class="mord">1</span></span><span class="mord"><span class="mord">2</span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.7778em;vertical-align:-0.0833em;"></span><span class="mord mathnormal">t</span><span class="mord mathnormal">h</span><span class="mord mathnormal">e</span><span class="mord mathnormal">t</span><span class="mord mathnormal">a</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1.0913em;vertical-align:-0.25em;"></span><span class="mord mathnormal">t</span><span class="mord mathnormal">h</span><span class="mord mathnormal">e</span><span class="mord mathnormal">t</span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.0358em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.0913em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></li><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>J</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo stretchy="false">(</mo><mspace linebreak="newline"></mspace><mi>t</mi><mi>h</mi><mi>e</mi><mi>t</mi><mi>a</mi><mo stretchy="false">)</mo><mo>=</mo><mspace linebreak="newline"></mspace><mi>f</mi><mi>r</mi><mi>a</mi><mi>c</mi><mn>12</mn><mo stretchy="false">(</mo><msup><mi>X</mi><mi>T</mi></msup><mi>X</mi><mspace linebreak="newline"></mspace><mi>t</mi><mi>h</mi><mi>e</mi><mi>t</mi><mi>a</mi><mo>+</mo><msup><mi>X</mi><mi>T</mi></msup><mi>X</mi><mspace linebreak="newline"></mspace><mi>t</mi><mi>h</mi><mi>e</mi><mi>t</mi><mi>a</mi><mo>−</mo><msup><mi>X</mi><mi>T</mi></msup><mi>y</mi><mo>−</mo><msup><mi>X</mi><mi>T</mi></msup><mi>y</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">J&#x27;(\\theta) = \\frac{1}{2}(X^TX\\theta + X^TX\\theta -X^Ty - X^Ty)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0019em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.09618em;">J</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7519em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mopen">(</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">t</span><span class="mord mathnormal">h</span><span class="mord mathnormal">e</span><span class="mord mathnormal">t</span><span class="mord mathnormal">a</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1.0913em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal">a</span><span class="mord mathnormal">c</span><span class="mord"><span class="mord">1</span></span><span class="mord"><span class="mord">2</span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.7778em;vertical-align:-0.0833em;"></span><span class="mord mathnormal">t</span><span class="mord mathnormal">h</span><span class="mord mathnormal">e</span><span class="mord mathnormal">t</span><span class="mord mathnormal">a</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8413em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.7778em;vertical-align:-0.0833em;"></span><span class="mord mathnormal">t</span><span class="mord mathnormal">h</span><span class="mord mathnormal">e</span><span class="mord mathnormal">t</span><span class="mord mathnormal">a</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.0358em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.0913em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose">)</span></span></span></span></li><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>J</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo stretchy="false">(</mo><mspace linebreak="newline"></mspace><mi>t</mi><mi>h</mi><mi>e</mi><mi>t</mi><mi>a</mi><mo stretchy="false">)</mo><mo>=</mo><mspace linebreak="newline"></mspace><mi>f</mi><mi>r</mi><mi>a</mi><mi>c</mi><mn>12</mn><mo stretchy="false">(</mo><mn>2</mn><msup><mi>X</mi><mi>T</mi></msup><mi>X</mi><mspace linebreak="newline"></mspace><mi>t</mi><mi>h</mi><mi>e</mi><mi>t</mi><mi>a</mi><mo>−</mo><mn>2</mn><msup><mi>X</mi><mi>T</mi></msup><mi>y</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">J&#x27;(\\theta) = \\frac{1}{2}(2X^TX\\theta -2X^Ty)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0019em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.09618em;">J</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7519em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mopen">(</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">t</span><span class="mord mathnormal">h</span><span class="mord mathnormal">e</span><span class="mord mathnormal">t</span><span class="mord mathnormal">a</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1.0913em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal">a</span><span class="mord mathnormal">c</span><span class="mord"><span class="mord">1</span></span><span class="mord"><span class="mord">2</span></span><span class="mopen">(</span><span class="mord">2</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.7778em;vertical-align:-0.0833em;"></span><span class="mord mathnormal">t</span><span class="mord mathnormal">h</span><span class="mord mathnormal">e</span><span class="mord mathnormal">t</span><span class="mord mathnormal">a</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.0913em;vertical-align:-0.25em;"></span><span class="mord">2</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose">)</span></span></span></span></li><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>J</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo stretchy="false">(</mo><mspace linebreak="newline"></mspace><mi>t</mi><mi>h</mi><mi>e</mi><mi>t</mi><mi>a</mi><mo stretchy="false">)</mo><mo>=</mo><msup><mi>X</mi><mi>T</mi></msup><mi>X</mi><mspace linebreak="newline"></mspace><mi>t</mi><mi>h</mi><mi>e</mi><mi>t</mi><mi>a</mi><mo>−</mo><msup><mi>X</mi><mi>T</mi></msup><mi>y</mi></mrow><annotation encoding="application/x-tex">J&#x27;(\\theta) =X^TX\\theta -X^Ty</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0019em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.09618em;">J</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7519em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mopen">(</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">t</span><span class="mord mathnormal">h</span><span class="mord mathnormal">e</span><span class="mord mathnormal">t</span><span class="mord mathnormal">a</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8413em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.7778em;vertical-align:-0.0833em;"></span><span class="mord mathnormal">t</span><span class="mord mathnormal">h</span><span class="mord mathnormal">e</span><span class="mord mathnormal">t</span><span class="mord mathnormal">a</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.0358em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span></span></span></li><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>J</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo stretchy="false">(</mo><mspace linebreak="newline"></mspace><mi>t</mi><mi>h</mi><mi>e</mi><mi>t</mi><mi>a</mi><mo stretchy="false">)</mo><mo>=</mo><msup><mi>X</mi><mi>T</mi></msup><mo stretchy="false">(</mo><mi>X</mi><mspace linebreak="newline"></mspace><mi>t</mi><mi>h</mi><mi>e</mi><mi>t</mi><mi>a</mi><mo>−</mo><mi>y</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">J&#x27;(\\theta) =X^T(X\\theta -y)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0019em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.09618em;">J</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7519em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mopen">(</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">t</span><span class="mord mathnormal">h</span><span class="mord mathnormal">e</span><span class="mord mathnormal">t</span><span class="mord mathnormal">a</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.0913em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.7778em;vertical-align:-0.0833em;"></span><span class="mord mathnormal">t</span><span class="mord mathnormal">h</span><span class="mord mathnormal">e</span><span class="mord mathnormal">t</span><span class="mord mathnormal">a</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose">)</span></span></span></span> 矩阵运算分配律</li></ul><ol start="4"><li><strong>令导数<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>J</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo stretchy="false">(</mo><mspace linebreak="newline"></mspace><mi>t</mi><mi>h</mi><mi>e</mi><mi>t</mi><mi>a</mi><mo stretchy="false">)</mo><mo>=</mo><mn>0</mn><mtext>：</mtext></mrow><annotation encoding="application/x-tex">J&#x27;(\\theta) = 0：</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0019em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.09618em;">J</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7519em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mopen">(</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">t</span><span class="mord mathnormal">h</span><span class="mord mathnormal">e</span><span class="mord mathnormal">t</span><span class="mord mathnormal">a</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord">0</span><span class="mord cjk_fallback">：</span></span></span></span></strong></li></ol><ul><li><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>0</mn><mo>=</mo><msup><mi>X</mi><mi>T</mi></msup><mi>X</mi><mspace linebreak="newline"></mspace><mi>t</mi><mi>h</mi><mi>e</mi><mi>t</mi><mi>a</mi><mo>−</mo><msup><mi>X</mi><mi>T</mi></msup><mi>y</mi></mrow><annotation encoding="application/x-tex">0 =X^TX\\theta -X^Ty</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8413em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.7778em;vertical-align:-0.0833em;"></span><span class="mord mathnormal">t</span><span class="mord mathnormal">h</span><span class="mord mathnormal">e</span><span class="mord mathnormal">t</span><span class="mord mathnormal">a</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.0358em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span></span></span></p></li><li><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>X</mi><mi>T</mi></msup><mi>X</mi><mspace linebreak="newline"></mspace><mi>t</mi><mi>h</mi><mi>e</mi><mi>t</mi><mi>a</mi><mo>=</mo><msup><mi>X</mi><mi>T</mi></msup><mi>y</mi></mrow><annotation encoding="application/x-tex">X^TX\\theta = X^Ty</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8413em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal">t</span><span class="mord mathnormal">h</span><span class="mord mathnormal">e</span><span class="mord mathnormal">t</span><span class="mord mathnormal">a</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.0358em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span></span></span></p></li></ul><ol start="5"><li><strong>矩阵没有除法，使用逆矩阵进行转化：</strong></li></ol><ul><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><msup><mi>X</mi><mi>T</mi></msup><mi>X</mi><msup><mo stretchy="false">)</mo><mrow><mo>−</mo><mn>1</mn></mrow></msup><msup><mi>X</mi><mi>T</mi></msup><mi>X</mi><mspace linebreak="newline"></mspace><mi>t</mi><mi>h</mi><mi>e</mi><mi>t</mi><mi>a</mi><mo>=</mo><mo stretchy="false">(</mo><msup><mi>X</mi><mi>T</mi></msup><mi>X</mi><msup><mo stretchy="false">)</mo><mrow><mo>−</mo><mn>1</mn></mrow></msup><msup><mi>X</mi><mi>T</mi></msup><mi>y</mi></mrow><annotation encoding="application/x-tex">(X^TX)^{-1}X^TX\\theta = (X^TX)^{-1}X^Ty</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0913em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal">t</span><span class="mord mathnormal">h</span><span class="mord mathnormal">e</span><span class="mord mathnormal">t</span><span class="mord mathnormal">a</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.0913em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span></span></span></li><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>I</mi><mspace linebreak="newline"></mspace><mi>t</mi><mi>h</mi><mi>e</mi><mi>t</mi><mi>a</mi><mo>=</mo><mo stretchy="false">(</mo><msup><mi>X</mi><mi>T</mi></msup><mi>X</mi><msup><mo stretchy="false">)</mo><mrow><mo>−</mo><mn>1</mn></mrow></msup><msup><mi>X</mi><mi>T</mi></msup><mi>y</mi></mrow><annotation encoding="application/x-tex">I\\theta = (X^TX)^{-1}X^Ty</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal">t</span><span class="mord mathnormal">h</span><span class="mord mathnormal">e</span><span class="mord mathnormal">t</span><span class="mord mathnormal">a</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.0913em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span></span></span></li><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mspace linebreak="newline"></mspace><mi>t</mi><mi>h</mi><mi>e</mi><mi>t</mi><mi>a</mi><mo>=</mo><mo stretchy="false">(</mo><msup><mi>X</mi><mi>T</mi></msup><mi>X</mi><msup><mo stretchy="false">)</mo><mrow><mo>−</mo><mn>1</mn></mrow></msup><msup><mi>X</mi><mi>T</mi></msup><mi>y</mi></mrow><annotation encoding="application/x-tex">\\theta = (X^TX)^{-1}X^Ty</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal">t</span><span class="mord mathnormal">h</span><span class="mord mathnormal">e</span><span class="mord mathnormal">t</span><span class="mord mathnormal">a</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.0913em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span></span></span></li></ul><p>到此为止，公式推导出来了~</p><p><img src="./%E5%9B%BE%E7%89%87/15-%E7%83%AD%E7%83%88%E5%BA%86%E7%A5%9D.gif" alt=""></p><h4 id="2-5、凸函数判定">2.5、凸函数判定</h4><p>判定损失函数是凸函数的好处在于我们可能很肯定的知道我们求得的极值即最优解，一定是全局最优解。</p><p><img src="./%E5%9B%BE%E7%89%87/16-%E5%87%B8%E5%87%BD%E6%95%B0.jpeg" alt=""></p><p>如果是非凸函数，那就不一定可以获取全局最优解~</p><p><img src="./%E5%9B%BE%E7%89%87/17-%E9%9D%9E%E5%87%B8%E5%87%BD%E6%95%B0.jpg" alt=""></p><p>来一个更加立体的效果图：</p><p><img src="./%E5%9B%BE%E7%89%87/14-%E5%B7%A6%E5%87%B8%E5%8F%B3%E9%9D%9E%E5%87%B8%E5%87%BD%E6%95%B0.jpeg" alt=""></p><p>判定凸函数的方式: 判定凸函数的方式非常多，其中一个方法是看<strong>黑塞矩阵</strong>是否是<strong>半正定</strong>的。</p><p>黑塞矩阵(hessian matrix)是由目标函数在点 X 处的二阶偏导数组成的对称矩阵。</p><p>对于我们的式子来说就是在导函数的基础上再次对θ来求偏导，结果就是 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>X</mi><mi>T</mi></msup><mi>X</mi></mrow><annotation encoding="application/x-tex">X^TX</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8413em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span></span></span></span>。所谓正定就是 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>X</mi><mi>T</mi></msup><mi>X</mi></mrow><annotation encoding="application/x-tex">X^TX</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8413em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span></span></span></span> 的特征值全为正数，半正定就是 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>X</mi><mi>T</mi></msup><mi>X</mi></mrow><annotation encoding="application/x-tex">X^TX</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8413em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span></span></span></span> 的特征值大于等于 0， 就是半正定。</p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>J</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo stretchy="false">(</mo><mspace linebreak="newline"></mspace><mi>t</mi><mi>h</mi><mi>e</mi><mi>t</mi><mi>a</mi><mo stretchy="false">)</mo><mo>=</mo><msup><mi>X</mi><mi>T</mi></msup><mi>X</mi><mspace linebreak="newline"></mspace><mi>t</mi><mi>h</mi><mi>e</mi><mi>t</mi><mi>a</mi><mo>−</mo><msup><mi>X</mi><mi>T</mi></msup><mi>y</mi></mrow><annotation encoding="application/x-tex">J&#x27;(\\theta) =X^TX\\theta -X^Ty</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0019em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.09618em;">J</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7519em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mopen">(</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">t</span><span class="mord mathnormal">h</span><span class="mord mathnormal">e</span><span class="mord mathnormal">t</span><span class="mord mathnormal">a</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8413em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.7778em;vertical-align:-0.0833em;"></span><span class="mord mathnormal">t</span><span class="mord mathnormal">h</span><span class="mord mathnormal">e</span><span class="mord mathnormal">t</span><span class="mord mathnormal">a</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.0358em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span></span></span></p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>J</mi><mrow><mo mathvariant="normal">′</mo><mo mathvariant="normal">′</mo></mrow></msup><mo stretchy="false">(</mo><mspace linebreak="newline"></mspace><mi>t</mi><mi>h</mi><mi>e</mi><mi>t</mi><mi>a</mi><mo stretchy="false">)</mo><mo>=</mo><msup><mi>X</mi><mi>T</mi></msup><mi>X</mi></mrow><annotation encoding="application/x-tex">J&#x27;&#x27;(\\theta) =X^TX</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0019em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.09618em;">J</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7519em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′′</span></span></span></span></span></span></span></span></span><span class="mopen">(</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">t</span><span class="mord mathnormal">h</span><span class="mord mathnormal">e</span><span class="mord mathnormal">t</span><span class="mord mathnormal">a</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8413em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span></span></span></span></p><p>这里我们对 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>J</mi><mo stretchy="false">(</mo><mspace linebreak="newline"></mspace><mi>t</mi><mi>h</mi><mi>e</mi><mi>t</mi><mi>a</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">J(\\theta)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.09618em;">J</span><span class="mopen">(</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">t</span><span class="mord mathnormal">h</span><span class="mord mathnormal">e</span><span class="mord mathnormal">t</span><span class="mord mathnormal">a</span><span class="mclose">)</span></span></span></span> 损失函数求二阶导数的黑塞矩阵是 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>X</mi><mi>T</mi></msup><mi>X</mi></mrow><annotation encoding="application/x-tex">X^TX</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8413em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span></span></span></span> ，得到的一定是半正定的，自己和自己做点乘嘛！</p><p>这里不用数学推导证明这一点。在机器学习中往往损失函数都是<strong>凸函数</strong>，到<strong>深度学习</strong>中损失函数往往是<strong>非凸函数</strong>，即找到的解<strong>未必</strong>是全局最优，只要模型堪用就好！机器学习特点是：不强调模型 100% 正确，只要是有价值的，堪用的，就Okay！</p><p><img src="./%E5%9B%BE%E7%89%87/18-%E6%95%B0%E5%AD%A6%E4%B9%8B%E7%BE%8E.jpeg" alt=""></p><h3 id="3、线性回归算法推导">3、线性回归算法推导</h3><h4 id="3-1、深入理解回归">3.1、深入理解回归</h4><p><strong>回归</strong>简单来说就是“回归平均值”(regression to the mean)。但是这里的 mean 并不是把 历史数据直接当成未来的预测值，而是会把期望值当作预测值。 追根溯源<strong>回归</strong>这个词是一个叫高尔顿的人发明的，他通过大量观察数据发现:父亲比较高，儿子也比较高；父亲比较矮，那么儿子也比较矮！正所谓“龙生龙凤生凤老鼠的儿子会打洞”！但是会存在一定偏差~</p><p>父亲是 1.98，儿子肯定很高，但有可能不会达到1.98   父亲是 1.69，儿子肯定不高，但是有可能比 1.69 高</p><p>大自然让我们<strong>回归</strong>到一定的区间之内，这就是<strong>大自然神奇</strong>的力量。</p><p>高尔顿是谁?<strong>达尔文</strong>的表弟，这下可以相信他说的十有八九是<strong>对的</strong>了吧！</p><p>人类社会很多事情都被大自然这种神奇的力量只配置：身高、体重、智商、相貌……</p><p>这种神秘的力量就叫<strong>正态分布</strong>。大数学家高斯，深入研究了正态分布，最终推导出了线性回归的原理：<strong>最小二乘法</strong>！</p><p><img src="./%E5%9B%BE%E7%89%87/5-%E6%AD%A3%E6%80%81%E5%88%86%E5%B8%83.jpg" alt=""></p><p>接下来，我们跟着高斯的足迹继续向下走~</p><h4 id="3-2、误差分析">3.2、误差分析</h4><p>误差 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mspace linebreak="newline"></mspace><mi>v</mi><mi>a</mi><mi>r</mi><mi>e</mi><mi>p</mi><mi>s</mi><mi>i</mi><mi>l</mi><mi>o</mi><mi>n</mi><mi mathvariant="normal">_</mi><mi>i</mi></mrow><annotation encoding="application/x-tex">\\varepsilon\_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1.0044em;vertical-align:-0.31em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mord mathnormal">a</span><span class="mord mathnormal">re</span><span class="mord mathnormal">p</span><span class="mord mathnormal">s</span><span class="mord mathnormal">i</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord mathnormal">n</span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord mathnormal">i</span></span></span></span> 等于第 i 个样本实际的值 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>y</mi><mi mathvariant="normal">_</mi><mi>i</mi></mrow><annotation encoding="application/x-tex">y\_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9695em;vertical-align:-0.31em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord mathnormal">i</span></span></span></span> 减去预测的值 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mspace linebreak="newline"></mspace><mi>h</mi><mi>a</mi><mi>t</mi><mi>y</mi></mrow><annotation encoding="application/x-tex">\\hat{y}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">ha</span><span class="mord mathnormal">t</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span></span></span></span> ，公式可以表达为如下：</p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mspace linebreak="newline"></mspace><mi>v</mi><mi>a</mi><mi>r</mi><mi>e</mi><mi>p</mi><mi>s</mi><mi>i</mi><mi>l</mi><mi>o</mi><mi>n</mi><mi mathvariant="normal">_</mi><mi>i</mi><mo>=</mo><mi>y</mi><mi mathvariant="normal">_</mi><mi>i</mi><mo>−</mo><mspace linebreak="newline"></mspace><mi>h</mi><mi>a</mi><mi>t</mi><mi>y</mi></mrow><annotation encoding="application/x-tex">\\varepsilon\_i = y\_i - \\hat{y}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1.0044em;vertical-align:-0.31em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mord mathnormal">a</span><span class="mord mathnormal">re</span><span class="mord mathnormal">p</span><span class="mord mathnormal">s</span><span class="mord mathnormal">i</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord mathnormal">n</span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.9695em;vertical-align:-0.31em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">ha</span><span class="mord mathnormal">t</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span></span></span></span></p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mspace linebreak="newline"></mspace><mi>v</mi><mi>a</mi><mi>r</mi><mi>e</mi><mi>p</mi><mi>s</mi><mi>i</mi><mi>l</mi><mi>o</mi><mi>n</mi><mi mathvariant="normal">_</mi><mi>i</mi><mo>=</mo><mi>y</mi><mi mathvariant="normal">_</mi><mi>i</mi><mo>−</mo><msup><mi>W</mi><mi>T</mi></msup><mi>x</mi><mi mathvariant="normal">_</mi><mi>i</mi></mrow><annotation encoding="application/x-tex">\\varepsilon\_i = y\_i - W^Tx\_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1.0044em;vertical-align:-0.31em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mord mathnormal">a</span><span class="mord mathnormal">re</span><span class="mord mathnormal">p</span><span class="mord mathnormal">s</span><span class="mord mathnormal">i</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord mathnormal">n</span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.9695em;vertical-align:-0.31em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.1513em;vertical-align:-0.31em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mord mathnormal">x</span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord mathnormal">i</span></span></span></span></p><p>假定所有的样本的误差都是<strong>独立的</strong>，有上下的震荡，震荡认为是随机变量，足够多的随机变量叠加之后形成的分布，它服从的就是正态分布，因为它是正常状态下的分布，也就是高斯分布！<strong>均值</strong>是某一个值，<strong>方差</strong>是某一个值。 方差我们先不管，均值我们总有办法让它去等于零 0 的，因为我们这里是有截距b， 所有误差我们就可以认为是独立分布的，1&lt;=i&lt;=n，服从均值为 0，方差为某定值的<strong>高斯分布</strong>。机器学习中我们<strong>假设</strong>误差符合均值为0，方差为定值的正态分布！！！</p><p><img src="./%E5%9B%BE%E7%89%87/6-%E8%AF%AF%E5%B7%AE%E5%88%86%E6%9E%90.jpeg" alt=""></p><h4 id="3-3、最大似然估计">3.3、最大似然估计</h4><p>最大似然估计(maximum likelihood estimation, MLE)一种重要而普遍的求估计量的方法。<strong>最大似然估计</strong>明确地使用概率模型，其目标是寻找能够以较高概率产生观察数据的系统发生树。最大似然估计是一类完全基于<strong>统计</strong>的系统发生树重建方法的代表。</p><p>是不是，有点看不懂，<strong>太学术</strong>了，我们举例说明~</p><p>假如有一个罐子，里面有<strong>黑白</strong>两种颜色的球，数目多少不知，两种颜色的<strong>比例</strong>也不知。我们想知道罐中白球和黑球的比例，但我们<strong>不能</strong>把罐中的球全部拿出来数。现在我们可以每次任意从已经<strong>摇匀</strong>的罐中拿一个球出来，<strong>记录</strong>球的颜色，然后把拿出来的球再<strong>放回</strong>罐中。这个过程可以<strong>重复</strong>，我们可以用记录的球的颜色来估计罐中黑白球的比例。假如在前面的一百次重复记录中，有七十次是白球，请问罐中白球所占的比例<strong>最有可能</strong>是多少？</p><p><img src="./%E5%9B%BE%E7%89%87/7-%E9%BB%91%E7%99%BD%E7%90%83.jpeg" alt=""></p><p>请告诉我答案！</p><p><img src="./%E5%9B%BE%E7%89%87/8-%E9%BB%91%E7%99%BD%E7%90%83%E7%AD%94%E6%A1%88.jpeg" alt=""></p><p>很多小伙伴，甚至不用算，凭感觉，就能给出答案：<strong>70%</strong>！</p><p><strong>下面是详细推导过程：</strong></p><ul><li><p>最大似然估计，计算</p></li><li><p>白球概率是p，黑球是1-p（罐子中非黑即白）</p></li><li><p>罐子中取一个请问是白球的概率是多少？</p><ul><li><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>p</mi></mrow><annotation encoding="application/x-tex">p</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">p</span></span></span></span></span></p></li></ul></li><li><p>罐子中取两个球，两个球都是白色，概率是多少？</p><ul><li><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msup><mi>p</mi><mn>2</mn></msup></mrow><annotation encoding="application/x-tex">p^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0585em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span></span></p></li></ul></li><li><p>罐子中取5个球都是白色，概率是多少？</p><ul><li><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msup><mi>p</mi><mn>5</mn></msup></mrow><annotation encoding="application/x-tex">p^5</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0585em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">5</span></span></span></span></span></span></span></span></span></span></span></span></p></li></ul></li><li><p>罐子中取10个球，9个是白色，一个是黑色，概率是多少呢？</p><p><img src="./%E5%9B%BE%E7%89%87/9-%E6%9C%89%E6%94%BE%E5%9B%9E%E6%8A%BD%E6%A0%B7%E6%A6%82%E7%8E%87.jpeg" alt=""></p><ul><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mi>C</mi><mn>10</mn><mn>1</mn></msubsup><mo>=</mo><msubsup><mi>C</mi><mn>10</mn><mn>1</mn></msubsup></mrow><annotation encoding="application/x-tex">C_{10}^1 = C_{10}^1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0622em;vertical-align:-0.2481em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-2.4519em;margin-left:-0.0715em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">10</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2481em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.0622em;vertical-align:-0.2481em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-2.4519em;margin-left:-0.0715em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">10</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2481em;"><span></span></span></span></span></span></span></span></span></span> 这个两个排列组合公式是<strong>相等的</strong>~</li><li><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msubsup><mi>C</mi><mn>10</mn><mn>9</mn></msubsup><msup><mi>p</mi><mn>9</mn></msup><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><mi>p</mi><mo stretchy="false">)</mo><mo>=</mo><msubsup><mi>C</mi><mn>10</mn><mn>1</mn></msubsup><msup><mi>p</mi><mn>9</mn></msup><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><mi>p</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">C_{10}^9p^9(1-p) = C_{10}^1p^9(1-p)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.1141em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8641em;"><span style="top:-2.453em;margin-left:-0.0715em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">10</span></span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">9</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">9</span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">p</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.1141em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8641em;"><span style="top:-2.453em;margin-left:-0.0715em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">10</span></span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">9</span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">p</span><span class="mclose">)</span></span></span></span></span></p></li></ul></li><li><p>罐子取100个球，70次是白球，30次是黑球，概率是多少？</p><ul><li><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>P</mi><mo>=</mo><mi>C</mi><mi mathvariant="normal">_</mi><msup><mn>100</mn><mn>30</mn></msup><msup><mi>p</mi><mn>70</mn></msup><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><mi>p</mi><msup><mo stretchy="false">)</mo><mn>30</mn></msup></mrow><annotation encoding="application/x-tex">P = C\_{100}^{30}p^{70}(1-p)^{30}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.1741em;vertical-align:-0.31em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord"><span class="mord"><span class="mord">100</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">30</span></span></span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">70</span></span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.1141em;vertical-align:-0.25em;"></span><span class="mord mathnormal">p</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">30</span></span></span></span></span></span></span></span></span></span></span></span></span></p></li></ul></li><li><p>最大似然估计，什么时候P最大呢？</p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>C</mi><mi mathvariant="normal">_</mi><msup><mn>100</mn><mn>30</mn></msup></mrow><annotation encoding="application/x-tex">C\_{100}^{30}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.1584em;vertical-align:-0.31em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord"><span class="mord"><span class="mord">100</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8484em;"><span style="top:-3.0973em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">30</span></span></span></span></span></span></span></span></span></span></span></span>是常量，可以<strong>去掉</strong>！</p><p>p &gt; 0，1- p &gt; 0，所以上面概率想要求最大值，那么求<strong>导数</strong>即可！</p></li><li><p>P' = 70_p^{69}_(1-p)^{30} + p^{70}_30_(1-p)^{29}\*(-1)</p><p><strong>令导数为0：</strong></p></li><li><p>0 = 70_p^{69}_(1-p)^{30} +p^{70}_30_(1-p)^{29}\*(-1)</p><p><strong>公式化简：</strong></p></li><li><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mn>0</mn><mo>=</mo><msub><mn>70</mn><mo stretchy="false">(</mo></msub><mn>1</mn><mo>−</mo><mi>p</mi><mo stretchy="false">)</mo><mo>−</mo><msub><mi>p</mi><mn>3</mn></msub><mn>0</mn></mrow><annotation encoding="application/x-tex">0 = 70_(1-p) - p_30</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.9996em;vertical-align:-0.3552em;"></span><span class="mord">7</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.5198em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mopen mtight">(</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3552em;"><span></span></span></span></span></span></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">p</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8389em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">0</span></span></span></span></span></p></li><li><p>0 = 70 - 100\*p</p></li><li><p><strong>p = 70%</strong></p></li></ul><h4 id="3-4、高斯分布-概率密度函数">3.4、高斯分布-概率密度函数</h4><p>最常见的连续概率分布是<strong>正态分布</strong>，也叫<strong>高斯分布</strong>，而这正是我们所需要的，其概率密度函数如下:</p><p><img src="./%E5%9B%BE%E7%89%87/10-%E9%AB%98%E6%96%AF%E5%88%86%E5%B8%83.jpeg" alt=""></p><p>公式如下：</p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mspace linebreak="newline"></mspace><mi>m</mi><mi>u</mi><mo separator="true">,</mo><mspace linebreak="newline"></mspace><mi>s</mi><mi>i</mi><mi>g</mi><mi>m</mi><msup><mi>a</mi><mn>2</mn></msup><mo stretchy="false">)</mo><mo>=</mo><mspace linebreak="newline"></mspace><mi>f</mi><mi>r</mi><mi>a</mi><mi>c</mi><mn>1</mn><mrow><mspace linebreak="newline"></mspace><mi>s</mi><mi>q</mi><mi>r</mi><mi>t</mi><mrow><mn>2</mn><mspace linebreak="newline"></mspace><mi>p</mi><mi>i</mi></mrow><mspace linebreak="newline"></mspace><mi>s</mi><mi>i</mi><mi>g</mi><mi>m</mi><mi>a</mi></mrow><msup><mi>e</mi><mrow><mo>−</mo><mspace linebreak="newline"></mspace><mi>f</mi><mi>r</mi><mi>a</mi><mi>c</mi><mrow><mo stretchy="false">(</mo><mi>x</mi><mo>−</mo><mspace linebreak="newline"></mspace><mi>m</mi><mi>u</mi><msup><mo stretchy="false">)</mo><mn>2</mn></msup></mrow><mrow><mn>2</mn><mspace linebreak="newline"></mspace><mi>s</mi><mi>i</mi><mi>g</mi><mi>m</mi><msup><mi>a</mi><mn>2</mn></msup></mrow></mrow></msup></mrow><annotation encoding="application/x-tex">f(x\\mu,\\sigma^2) = \\frac{1}{\\sqrt{2\\pi}\\sigma}e^{-\\frac{(x - \\mu)^2}{2\\sigma^2}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">x</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">m</span><span class="mord mathnormal">u</span><span class="mpunct">,</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1.0641em;vertical-align:-0.25em;"></span><span class="mord mathnormal">s</span><span class="mord mathnormal">i</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">m</span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1.1814em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal">a</span><span class="mord mathnormal">c</span><span class="mord"><span class="mord">1</span></span><span class="mord"><span class="mspace newline"></span><span class="mord mathnormal">s</span><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal">t</span><span class="mord"><span class="mord">2</span><span class="mspace newline"></span><span class="mord mathnormal">p</span><span class="mord mathnormal">i</span></span><span class="mspace newline"></span><span class="mord mathnormal">s</span><span class="mord mathnormal">i</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">ma</span></span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9869em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mspace mtight newline"></span><span class="mord mathnormal mtight" style="margin-right:0.10764em;">f</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight">c</span><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">x</span><span class="mbin mtight">−</span><span class="mspace mtight newline"></span><span class="mord mathnormal mtight">m</span><span class="mord mathnormal mtight">u</span><span class="mclose mtight"><span class="mclose mtight">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913em;"><span style="top:-2.931em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span><span class="mord mtight"><span class="mord mtight">2</span><span class="mspace mtight newline"></span><span class="mord mathnormal mtight">s</span><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">g</span><span class="mord mathnormal mtight">m</span><span class="mord mtight"><span class="mord mathnormal mtight">a</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913em;"><span style="top:-2.931em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p><p>随着参数μ和σ<strong>变化</strong>，概率分布也产生变化。 下面重要的步骤来了，我们要把一组数据误差出现的<strong>总似然</strong>，也就是一组数据之所以对应误差出现的<strong>整体可能性</strong>表达出来了，因为数据的误差我们假设服从一个高斯分布，并且通过<strong>截距</strong>项来平移整体分布的位置从而使得<strong>μ=0</strong>，所以样本的误差我们可以表达其概率密度函数的值如下:</p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>f</mi><mo stretchy="false">(</mo><mspace linebreak="newline"></mspace><mi>v</mi><mi>a</mi><mi>r</mi><mi>e</mi><mi>p</mi><mi>s</mi><mi>i</mi><mi>l</mi><mi>o</mi><mi>n</mi><mspace linebreak="newline"></mspace><mi>m</mi><mi>u</mi><mo>=</mo><mn>0</mn><mo separator="true">,</mo><mspace linebreak="newline"></mspace><mi>s</mi><mi>i</mi><mi>g</mi><mi>m</mi><msup><mi>a</mi><mn>2</mn></msup><mo stretchy="false">)</mo><mo>=</mo><mspace linebreak="newline"></mspace><mi>f</mi><mi>r</mi><mi>a</mi><mi>c</mi><mn>1</mn><mrow><mspace linebreak="newline"></mspace><mi>s</mi><mi>q</mi><mi>r</mi><mi>t</mi><mrow><mn>2</mn><mspace linebreak="newline"></mspace><mi>p</mi><mi>i</mi></mrow><mspace linebreak="newline"></mspace><mi>s</mi><mi>i</mi><mi>g</mi><mi>m</mi><mi>a</mi></mrow><msup><mi>e</mi><mrow><mo>−</mo><mspace linebreak="newline"></mspace><mi>f</mi><mi>r</mi><mi>a</mi><mi>c</mi><mrow><mo stretchy="false">(</mo><mspace linebreak="newline"></mspace><mi>v</mi><mi>a</mi><mi>r</mi><mi>e</mi><mi>p</mi><mi>s</mi><mi>i</mi><mi>l</mi><mi>o</mi><mi>n</mi><mo>−</mo><mn>0</mn><msup><mo stretchy="false">)</mo><mn>2</mn></msup></mrow><mrow><mn>2</mn><mspace linebreak="newline"></mspace><mi>s</mi><mi>i</mi><mi>g</mi><mi>m</mi><msup><mi>a</mi><mn>2</mn></msup></mrow></mrow></msup></mrow><annotation encoding="application/x-tex">f(\\varepsilon\\mu = 0,\\sigma^2) = \\frac{1}{\\sqrt{2\\pi}\\sigma}e^{-\\frac{(\\varepsilon - 0)^2}{2\\sigma^2}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mord mathnormal">a</span><span class="mord mathnormal">re</span><span class="mord mathnormal">p</span><span class="mord mathnormal">s</span><span class="mord mathnormal">i</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord mathnormal">n</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">m</span><span class="mord mathnormal">u</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8389em;vertical-align:-0.1944em;"></span><span class="mord">0</span><span class="mpunct">,</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1.0641em;vertical-align:-0.25em;"></span><span class="mord mathnormal">s</span><span class="mord mathnormal">i</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">m</span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1.1814em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal">a</span><span class="mord mathnormal">c</span><span class="mord"><span class="mord">1</span></span><span class="mord"><span class="mspace newline"></span><span class="mord mathnormal">s</span><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal">t</span><span class="mord"><span class="mord">2</span><span class="mspace newline"></span><span class="mord mathnormal">p</span><span class="mord mathnormal">i</span></span><span class="mspace newline"></span><span class="mord mathnormal">s</span><span class="mord mathnormal">i</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">ma</span></span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9869em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mspace mtight newline"></span><span class="mord mathnormal mtight" style="margin-right:0.10764em;">f</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight">c</span><span class="mord mtight"><span class="mopen mtight">(</span><span class="mspace mtight newline"></span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">v</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight">re</span><span class="mord mathnormal mtight">p</span><span class="mord mathnormal mtight">s</span><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span><span class="mord mathnormal mtight">o</span><span class="mord mathnormal mtight">n</span><span class="mbin mtight">−</span><span class="mord mtight">0</span><span class="mclose mtight"><span class="mclose mtight">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913em;"><span style="top:-2.931em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span><span class="mord mtight"><span class="mord mtight">2</span><span class="mspace mtight newline"></span><span class="mord mathnormal mtight">s</span><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">g</span><span class="mord mathnormal mtight">m</span><span class="mord mtight"><span class="mord mathnormal mtight">a</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913em;"><span style="top:-2.931em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p><p><strong>简化</strong>如下：</p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>f</mi><mo stretchy="false">(</mo><mspace linebreak="newline"></mspace><mi>v</mi><mi>a</mi><mi>r</mi><mi>e</mi><mi>p</mi><mi>s</mi><mi>i</mi><mi>l</mi><mi>o</mi><mi>n</mi><mn>0</mn><mo separator="true">,</mo><mspace linebreak="newline"></mspace><mi>s</mi><mi>i</mi><mi>g</mi><mi>m</mi><msup><mi>a</mi><mn>2</mn></msup><mo stretchy="false">)</mo><mo>=</mo><mspace linebreak="newline"></mspace><mi>f</mi><mi>r</mi><mi>a</mi><mi>c</mi><mn>1</mn><mrow><mspace linebreak="newline"></mspace><mi>s</mi><mi>q</mi><mi>r</mi><mi>t</mi><mrow><mn>2</mn><mspace linebreak="newline"></mspace><mi>p</mi><mi>i</mi></mrow><mspace linebreak="newline"></mspace><mi>s</mi><mi>i</mi><mi>g</mi><mi>m</mi><mi>a</mi></mrow><msup><mi>e</mi><mrow><mo>−</mo><mspace linebreak="newline"></mspace><mi>f</mi><mi>r</mi><mi>a</mi><mi>c</mi><mrow><mspace linebreak="newline"></mspace><mi>v</mi><mi>a</mi><mi>r</mi><mi>e</mi><mi>p</mi><mi>s</mi><mi>i</mi><mi>l</mi><mi>o</mi><msup><mi>n</mi><mn>2</mn></msup></mrow><mrow><mn>2</mn><mspace linebreak="newline"></mspace><mi>s</mi><mi>i</mi><mi>g</mi><mi>m</mi><msup><mi>a</mi><mn>2</mn></msup></mrow></mrow></msup></mrow><annotation encoding="application/x-tex">f(\\varepsilon 0,\\sigma^2) = \\frac{1}{\\sqrt{2\\pi}\\sigma}e^{-\\frac{\\varepsilon ^2}{2\\sigma^2}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mord mathnormal">a</span><span class="mord mathnormal">re</span><span class="mord mathnormal">p</span><span class="mord mathnormal">s</span><span class="mord mathnormal">i</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord mathnormal">n</span><span class="mord">0</span><span class="mpunct">,</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1.0641em;vertical-align:-0.25em;"></span><span class="mord mathnormal">s</span><span class="mord mathnormal">i</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">m</span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1.1814em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal">a</span><span class="mord mathnormal">c</span><span class="mord"><span class="mord">1</span></span><span class="mord"><span class="mspace newline"></span><span class="mord mathnormal">s</span><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal">t</span><span class="mord"><span class="mord">2</span><span class="mspace newline"></span><span class="mord mathnormal">p</span><span class="mord mathnormal">i</span></span><span class="mspace newline"></span><span class="mord mathnormal">s</span><span class="mord mathnormal">i</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">ma</span></span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9869em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mspace mtight newline"></span><span class="mord mathnormal mtight" style="margin-right:0.10764em;">f</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight">c</span><span class="mord mtight"><span class="mspace mtight newline"></span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">v</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight">re</span><span class="mord mathnormal mtight">p</span><span class="mord mathnormal mtight">s</span><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span><span class="mord mathnormal mtight">o</span><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913em;"><span style="top:-2.931em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span><span class="mord mtight"><span class="mord mtight">2</span><span class="mspace mtight newline"></span><span class="mord mathnormal mtight">s</span><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">g</span><span class="mord mathnormal mtight">m</span><span class="mord mtight"><span class="mord mathnormal mtight">a</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913em;"><span style="top:-2.931em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p><h4 id="3-5、误差总似然">3.5、误差总似然</h4><p>和前面黑球白球问题<strong>类似</strong>，也是一个<strong>累乘</strong>问题~</p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>P</mi><mo>=</mo><mspace linebreak="newline"></mspace><mi>p</mi><mi>r</mi><mi>o</mi><mi>d</mi><mspace linebreak="newline"></mspace><mi>l</mi><mi>i</mi><mi>m</mi><mi>i</mi><mi>t</mi><mi>s</mi><mi mathvariant="normal">_</mi><msup><mrow><mi>i</mi><mo>=</mo><mn>0</mn></mrow><mi>n</mi></msup><mi>f</mi><mo stretchy="false">(</mo><mspace linebreak="newline"></mspace><mi>v</mi><mi>a</mi><mi>r</mi><mi>e</mi><mi>p</mi><mi>s</mi><mi>i</mi><mi>l</mi><mi>o</mi><msub><mi>n</mi><mi>i</mi></msub><mn>0</mn><mo separator="true">,</mo><mspace linebreak="newline"></mspace><mi>s</mi><mi>i</mi><mi>g</mi><mi>m</mi><msup><mi>a</mi><mn>2</mn></msup><mo stretchy="false">)</mo><mo>=</mo><mspace linebreak="newline"></mspace><mi>p</mi><mi>r</mi><mi>o</mi><mi>d</mi><mspace linebreak="newline"></mspace><mi>l</mi><mi>i</mi><mi>m</mi><mi>i</mi><mi>t</mi><msubsup><mi>s</mi><mrow><mi>i</mi><mo>=</mo><mn>0</mn></mrow><mi>n</mi></msubsup><mspace linebreak="newline"></mspace><mi>f</mi><mi>r</mi><mi>a</mi><mi>c</mi><mn>1</mn><mrow><mspace linebreak="newline"></mspace><mi>s</mi><mi>q</mi><mi>r</mi><mi>t</mi><mrow><mn>2</mn><mspace linebreak="newline"></mspace><mi>p</mi><mi>i</mi></mrow><mspace linebreak="newline"></mspace><mi>s</mi><mi>i</mi><mi>g</mi><mi>m</mi><mi>a</mi></mrow><msup><mi>e</mi><mrow><mo>−</mo><mspace linebreak="newline"></mspace><mi>f</mi><mi>r</mi><mi>a</mi><mi>c</mi><mrow><mspace linebreak="newline"></mspace><mi>v</mi><mi>a</mi><mi>r</mi><mi>e</mi><mi>p</mi><mi>s</mi><mi>i</mi><mi>l</mi><mi>o</mi><mi>n</mi><mi mathvariant="normal">_</mi><msup><mi>i</mi><mn>2</mn></msup></mrow><mrow><mn>2</mn><mspace linebreak="newline"></mspace><mi>s</mi><mi>i</mi><mi>g</mi><mi>m</mi><msup><mi>a</mi><mn>2</mn></msup></mrow></mrow></msup></mrow><annotation encoding="application/x-tex">P = \\prod\\limits\_{i = 0}^{n}f(\\varepsilon_i0,\\sigma^2) = \\prod\\limits_{i = 0}^{n}\\frac{1}{\\sqrt{2\\pi}\\sigma}e^{-\\frac{\\varepsilon\_i ^2}{2\\sigma^2}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">p</span><span class="mord mathnormal">ro</span><span class="mord mathnormal">d</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1.06em;vertical-align:-0.31em;"></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">imi</span><span class="mord mathnormal">t</span><span class="mord mathnormal">s</span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord"><span class="mord"><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">0</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7138em;"><span style="top:-3.1124em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mord mathnormal">a</span><span class="mord mathnormal">re</span><span class="mord mathnormal">p</span><span class="mord mathnormal">s</span><span class="mord mathnormal">i</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">0</span><span class="mpunct">,</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1.0641em;vertical-align:-0.25em;"></span><span class="mord mathnormal">s</span><span class="mord mathnormal">i</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">m</span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">p</span><span class="mord mathnormal">ro</span><span class="mord mathnormal">d</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.9531em;vertical-align:-0.2587em;"></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">imi</span><span class="mord mathnormal">t</span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6644em;"><span style="top:-2.4413em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">0</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2587em;"><span></span></span></span></span></span></span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1.1814em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal">a</span><span class="mord mathnormal">c</span><span class="mord"><span class="mord">1</span></span><span class="mord"><span class="mspace newline"></span><span class="mord mathnormal">s</span><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal">t</span><span class="mord"><span class="mord">2</span><span class="mspace newline"></span><span class="mord mathnormal">p</span><span class="mord mathnormal">i</span></span><span class="mspace newline"></span><span class="mord mathnormal">s</span><span class="mord mathnormal">i</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">ma</span></span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9869em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mspace mtight newline"></span><span class="mord mathnormal mtight" style="margin-right:0.10764em;">f</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight">c</span><span class="mord mtight"><span class="mspace mtight newline"></span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">v</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight">re</span><span class="mord mathnormal mtight">p</span><span class="mord mathnormal mtight">s</span><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span><span class="mord mathnormal mtight">o</span><span class="mord mathnormal mtight">n</span><span class="mord mtight" style="margin-right:0.02778em;">_</span><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913em;"><span style="top:-2.931em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span><span class="mord mtight"><span class="mord mtight">2</span><span class="mspace mtight newline"></span><span class="mord mathnormal mtight">s</span><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">g</span><span class="mord mathnormal mtight">m</span><span class="mord mtight"><span class="mord mathnormal mtight">a</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913em;"><span style="top:-2.931em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p><p>根据前面公式<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mspace linebreak="newline"></mspace><mi>v</mi><mi>a</mi><mi>r</mi><mi>e</mi><mi>p</mi><mi>s</mi><mi>i</mi><mi>l</mi><mi>o</mi><mi>n</mi><mi mathvariant="normal">_</mi><mi>i</mi><mo>=</mo><mi>y</mi><mi mathvariant="normal">_</mi><mi>i</mi><mo>−</mo><msup><mi>W</mi><mi>T</mi></msup><mi>x</mi><mi mathvariant="normal">_</mi><mi>i</mi></mrow><annotation encoding="application/x-tex">\\varepsilon\_i = y\_i - W^Tx\_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1.0044em;vertical-align:-0.31em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mord mathnormal">a</span><span class="mord mathnormal">re</span><span class="mord mathnormal">p</span><span class="mord mathnormal">s</span><span class="mord mathnormal">i</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord mathnormal">n</span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.9695em;vertical-align:-0.31em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.1513em;vertical-align:-0.31em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mord mathnormal">x</span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord mathnormal">i</span></span></span></span>可以推导出来如下公式：</p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>P</mi><mo>=</mo><mspace linebreak="newline"></mspace><mi>p</mi><mi>r</mi><mi>o</mi><mi>d</mi><mspace linebreak="newline"></mspace><mi>l</mi><mi>i</mi><mi>m</mi><mi>i</mi><mi>t</mi><mi>s</mi><mi mathvariant="normal">_</mi><msup><mrow><mi>i</mi><mo>=</mo><mn>0</mn></mrow><mi>n</mi></msup><mi>f</mi><mo stretchy="false">(</mo><mspace linebreak="newline"></mspace><mi>v</mi><mi>a</mi><mi>r</mi><mi>e</mi><mi>p</mi><mi>s</mi><mi>i</mi><mi>l</mi><mi>o</mi><msub><mi>n</mi><mi>i</mi></msub><mn>0</mn><mo separator="true">,</mo><mspace linebreak="newline"></mspace><mi>s</mi><mi>i</mi><mi>g</mi><mi>m</mi><msup><mi>a</mi><mn>2</mn></msup><mo stretchy="false">)</mo><mo>=</mo><mspace linebreak="newline"></mspace><mi>p</mi><mi>r</mi><mi>o</mi><mi>d</mi><mspace linebreak="newline"></mspace><mi>l</mi><mi>i</mi><mi>m</mi><mi>i</mi><mi>t</mi><msubsup><mi>s</mi><mrow><mi>i</mi><mo>=</mo><mn>0</mn></mrow><mi>n</mi></msubsup><mspace linebreak="newline"></mspace><mi>f</mi><mi>r</mi><mi>a</mi><mi>c</mi><mn>1</mn><mrow><mspace linebreak="newline"></mspace><mi>s</mi><mi>q</mi><mi>r</mi><mi>t</mi><mrow><mn>2</mn><mspace linebreak="newline"></mspace><mi>p</mi><mi>i</mi></mrow><mspace linebreak="newline"></mspace><mi>s</mi><mi>i</mi><mi>g</mi><mi>m</mi><mi>a</mi></mrow><msup><mi>e</mi><mrow><mo>−</mo><mspace linebreak="newline"></mspace><mi>f</mi><mi>r</mi><mi>a</mi><mi>c</mi><mrow><mo stretchy="false">(</mo><mi>y</mi><mi mathvariant="normal">_</mi><mi>i</mi><mo>−</mo><msup><mi>W</mi><mi>T</mi></msup><mi>x</mi><mi mathvariant="normal">_</mi><mi>i</mi><msup><mo stretchy="false">)</mo><mn>2</mn></msup></mrow><mrow><mn>2</mn><mspace linebreak="newline"></mspace><mi>s</mi><mi>i</mi><mi>g</mi><mi>m</mi><msup><mi>a</mi><mn>2</mn></msup></mrow></mrow></msup></mrow><annotation encoding="application/x-tex">P = \\prod\\limits\_{i = 0}^{n}f(\\varepsilon_i0,\\sigma^2) = \\prod\\limits_{i = 0}^{n}\\frac{1}{\\sqrt{2\\pi}\\sigma}e^{-\\frac{(y\_i - W^Tx\_i)^2}{2\\sigma^2}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">p</span><span class="mord mathnormal">ro</span><span class="mord mathnormal">d</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1.06em;vertical-align:-0.31em;"></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">imi</span><span class="mord mathnormal">t</span><span class="mord mathnormal">s</span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord"><span class="mord"><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">0</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7138em;"><span style="top:-3.1124em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mord mathnormal">a</span><span class="mord mathnormal">re</span><span class="mord mathnormal">p</span><span class="mord mathnormal">s</span><span class="mord mathnormal">i</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">0</span><span class="mpunct">,</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1.0641em;vertical-align:-0.25em;"></span><span class="mord mathnormal">s</span><span class="mord mathnormal">i</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">m</span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">p</span><span class="mord mathnormal">ro</span><span class="mord mathnormal">d</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.9531em;vertical-align:-0.2587em;"></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">imi</span><span class="mord mathnormal">t</span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6644em;"><span style="top:-2.4413em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">0</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2587em;"><span></span></span></span></span></span></span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1.2008em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal">a</span><span class="mord mathnormal">c</span><span class="mord"><span class="mord">1</span></span><span class="mord"><span class="mspace newline"></span><span class="mord mathnormal">s</span><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal">t</span><span class="mord"><span class="mord">2</span><span class="mspace newline"></span><span class="mord mathnormal">p</span><span class="mord mathnormal">i</span></span><span class="mspace newline"></span><span class="mord mathnormal">s</span><span class="mord mathnormal">i</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">ma</span></span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.0064em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mspace mtight newline"></span><span class="mord mathnormal mtight" style="margin-right:0.10764em;">f</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight">c</span><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span><span class="mord mtight" style="margin-right:0.02778em;">_</span><span class="mord mathnormal mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9191em;"><span style="top:-2.931em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mord mathnormal mtight">x</span><span class="mord mtight" style="margin-right:0.02778em;">_</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight"><span class="mclose mtight">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913em;"><span style="top:-2.931em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span><span class="mord mtight"><span class="mord mtight">2</span><span class="mspace mtight newline"></span><span class="mord mathnormal mtight">s</span><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">g</span><span class="mord mathnormal mtight">m</span><span class="mord mtight"><span class="mord mathnormal mtight">a</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913em;"><span style="top:-2.931em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p><p>公式中的<strong>未知变量</strong>就是<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>W</mi><mi>T</mi></msup></mrow><annotation encoding="application/x-tex">W^T</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8413em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span></span></span></span>，即方程的系数，系数包含截距~如果，把上面当成一个方程，就是概率P关于W的方程！其余符号，都是常量！</p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>P</mi><mi>W</mi></msub><mo>=</mo><mspace linebreak="newline"></mspace><mi>p</mi><mi>r</mi><mi>o</mi><mi>d</mi><mspace linebreak="newline"></mspace><mi>l</mi><mi>i</mi><mi>m</mi><mi>i</mi><mi>t</mi><msubsup><mi>s</mi><mrow><mi>i</mi><mo>=</mo><mn>0</mn></mrow><mi>n</mi></msubsup><mspace linebreak="newline"></mspace><mi>f</mi><mi>r</mi><mi>a</mi><mi>c</mi><mn>1</mn><mrow><mspace linebreak="newline"></mspace><mi>s</mi><mi>q</mi><mi>r</mi><mi>t</mi><mrow><mn>2</mn><mspace linebreak="newline"></mspace><mi>p</mi><mi>i</mi></mrow><mspace linebreak="newline"></mspace><mi>s</mi><mi>i</mi><mi>g</mi><mi>m</mi><mi>a</mi></mrow><msup><mi>e</mi><mrow><mo>−</mo><mspace linebreak="newline"></mspace><mi>f</mi><mi>r</mi><mi>a</mi><mi>c</mi><mrow><mo stretchy="false">(</mo><mi>y</mi><mi mathvariant="normal">_</mi><mi>i</mi><mo>−</mo><msup><mi>W</mi><mi>T</mi></msup><mi>x</mi><mi mathvariant="normal">_</mi><mi>i</mi><msup><mo stretchy="false">)</mo><mn>2</mn></msup></mrow><mrow><mn>2</mn><mspace linebreak="newline"></mspace><mi>s</mi><mi>i</mi><mi>g</mi><mi>m</mi><msup><mi>a</mi><mn>2</mn></msup></mrow></mrow></msup></mrow><annotation encoding="application/x-tex">P_W= \\prod\\limits_{i = 0}^{n}\\frac{1}{\\sqrt{2\\pi}\\sigma}e^{-\\frac{(y\_i - W^Tx\_i)^2}{2\\sigma^2}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">W</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">p</span><span class="mord mathnormal">ro</span><span class="mord mathnormal">d</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.9531em;vertical-align:-0.2587em;"></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">imi</span><span class="mord mathnormal">t</span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6644em;"><span style="top:-2.4413em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">0</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2587em;"><span></span></span></span></span></span></span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1.2008em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal">a</span><span class="mord mathnormal">c</span><span class="mord"><span class="mord">1</span></span><span class="mord"><span class="mspace newline"></span><span class="mord mathnormal">s</span><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal">t</span><span class="mord"><span class="mord">2</span><span class="mspace newline"></span><span class="mord mathnormal">p</span><span class="mord mathnormal">i</span></span><span class="mspace newline"></span><span class="mord mathnormal">s</span><span class="mord mathnormal">i</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">ma</span></span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.0064em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mspace mtight newline"></span><span class="mord mathnormal mtight" style="margin-right:0.10764em;">f</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight">c</span><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span><span class="mord mtight" style="margin-right:0.02778em;">_</span><span class="mord mathnormal mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9191em;"><span style="top:-2.931em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mord mathnormal mtight">x</span><span class="mord mtight" style="margin-right:0.02778em;">_</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight"><span class="mclose mtight">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913em;"><span style="top:-2.931em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span><span class="mord mtight"><span class="mord mtight">2</span><span class="mspace mtight newline"></span><span class="mord mathnormal mtight">s</span><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">g</span><span class="mord mathnormal mtight">m</span><span class="mord mtight"><span class="mord mathnormal mtight">a</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913em;"><span style="top:-2.931em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p><p>现在问题，就变换成了，求<strong>最大似然</strong>问题了！不过，等等~</p><p>累乘的最大似然，求解是非常麻烦的！</p><p>接下来，我们通过，求<strong>对数</strong>把<strong>累乘</strong>问题，转变为<strong>累加</strong>问题（加法问题，无论多复杂，都难不倒我了！）</p><p><img src="./%E5%9B%BE%E7%89%87/11-%E5%AF%B9%E6%95%B0.jpeg" alt=""></p><h4 id="3-6、最小二乘法MSE">3.6、最小二乘法MSE</h4><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>P</mi><mi>W</mi></msub><mo>=</mo><mspace linebreak="newline"></mspace><mi>p</mi><mi>r</mi><mi>o</mi><mi>d</mi><mspace linebreak="newline"></mspace><mi>l</mi><mi>i</mi><mi>m</mi><mi>i</mi><mi>t</mi><msubsup><mi>s</mi><mrow><mi>i</mi><mo>=</mo><mn>0</mn></mrow><mi>n</mi></msubsup><mspace linebreak="newline"></mspace><mi>f</mi><mi>r</mi><mi>a</mi><mi>c</mi><mn>1</mn><mrow><mspace linebreak="newline"></mspace><mi>s</mi><mi>q</mi><mi>r</mi><mi>t</mi><mrow><mn>2</mn><mspace linebreak="newline"></mspace><mi>p</mi><mi>i</mi></mrow><mspace linebreak="newline"></mspace><mi>s</mi><mi>i</mi><mi>g</mi><mi>m</mi><mi>a</mi></mrow><msup><mi>e</mi><mrow><mo>−</mo><mspace linebreak="newline"></mspace><mi>f</mi><mi>r</mi><mi>a</mi><mi>c</mi><mrow><mo stretchy="false">(</mo><mi>y</mi><mi mathvariant="normal">_</mi><mi>i</mi><mo>−</mo><msup><mi>W</mi><mi>T</mi></msup><mi>x</mi><mi mathvariant="normal">_</mi><mi>i</mi><msup><mo stretchy="false">)</mo><mn>2</mn></msup></mrow><mrow><mn>2</mn><mspace linebreak="newline"></mspace><mi>s</mi><mi>i</mi><mi>g</mi><mi>m</mi><msup><mi>a</mi><mn>2</mn></msup></mrow></mrow></msup></mrow><annotation encoding="application/x-tex">P_W = \\prod\\limits_{i = 0}^{n}\\frac{1}{\\sqrt{2\\pi}\\sigma}e^{-\\frac{(y\_i - W^Tx\_i)^2}{2\\sigma^2}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">W</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">p</span><span class="mord mathnormal">ro</span><span class="mord mathnormal">d</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.9531em;vertical-align:-0.2587em;"></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">imi</span><span class="mord mathnormal">t</span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6644em;"><span style="top:-2.4413em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">0</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2587em;"><span></span></span></span></span></span></span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1.2008em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal">a</span><span class="mord mathnormal">c</span><span class="mord"><span class="mord">1</span></span><span class="mord"><span class="mspace newline"></span><span class="mord mathnormal">s</span><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal">t</span><span class="mord"><span class="mord">2</span><span class="mspace newline"></span><span class="mord mathnormal">p</span><span class="mord mathnormal">i</span></span><span class="mspace newline"></span><span class="mord mathnormal">s</span><span class="mord mathnormal">i</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">ma</span></span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.0064em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mspace mtight newline"></span><span class="mord mathnormal mtight" style="margin-right:0.10764em;">f</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight">c</span><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span><span class="mord mtight" style="margin-right:0.02778em;">_</span><span class="mord mathnormal mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9191em;"><span style="top:-2.931em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mord mathnormal mtight">x</span><span class="mord mtight" style="margin-right:0.02778em;">_</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight"><span class="mclose mtight">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913em;"><span style="top:-2.931em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span><span class="mord mtight"><span class="mord mtight">2</span><span class="mspace mtight newline"></span><span class="mord mathnormal mtight">s</span><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">g</span><span class="mord mathnormal mtight">m</span><span class="mord mtight"><span class="mord mathnormal mtight">a</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913em;"><span style="top:-2.931em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p><p>根据对数，单调性，对上面公式求自然底数e的对数，效果不变~</p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>l</mi><mi>o</mi><mi>g</mi><mi mathvariant="normal">_</mi><mi>e</mi><mo stretchy="false">(</mo><mi>P</mi><mi mathvariant="normal">_</mi><mi>W</mi><mo stretchy="false">)</mo><mo>=</mo><mi>l</mi><mi>o</mi><msub><mi>g</mi><mi>e</mi></msub><mo stretchy="false">(</mo><mspace linebreak="newline"></mspace><mi>p</mi><mi>r</mi><mi>o</mi><mi>d</mi><mspace linebreak="newline"></mspace><mi>l</mi><mi>i</mi><mi>m</mi><mi>i</mi><mi>t</mi><msubsup><mi>s</mi><mrow><mi>i</mi><mo>=</mo><mn>0</mn></mrow><mi>n</mi></msubsup><mspace linebreak="newline"></mspace><mi>f</mi><mi>r</mi><mi>a</mi><mi>c</mi><mn>1</mn><mrow><mspace linebreak="newline"></mspace><mi>s</mi><mi>q</mi><mi>r</mi><mi>t</mi><mrow><mn>2</mn><mspace linebreak="newline"></mspace><mi>p</mi><mi>i</mi></mrow><mspace linebreak="newline"></mspace><mi>s</mi><mi>i</mi><mi>g</mi><mi>m</mi><mi>a</mi></mrow><msup><mi>e</mi><mrow><mo>−</mo><mspace linebreak="newline"></mspace><mi>f</mi><mi>r</mi><mi>a</mi><mi>c</mi><mrow><mo stretchy="false">(</mo><mi>y</mi><mi mathvariant="normal">_</mi><mi>i</mi><mo>−</mo><msup><mi>W</mi><mi>T</mi></msup><mi>x</mi><mi mathvariant="normal">_</mi><mi>i</mi><msup><mo stretchy="false">)</mo><mn>2</mn></msup></mrow><mrow><mn>2</mn><mspace linebreak="newline"></mspace><mi>s</mi><mi>i</mi><mi>g</mi><mi>m</mi><msup><mi>a</mi><mn>2</mn></msup></mrow></mrow></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">log\_e(P\_W) = log_e(\\prod\\limits_{i = 0}^{n}\\frac{1}{\\sqrt{2\\pi}\\sigma}e^{-\\frac{(y\_i - W^Tx\_i)^2}{2\\sigma^2}})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.06em;vertical-align:-0.31em;"></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord mathnormal">e</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">e</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">p</span><span class="mord mathnormal">ro</span><span class="mord mathnormal">d</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.9531em;vertical-align:-0.2587em;"></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">imi</span><span class="mord mathnormal">t</span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6644em;"><span style="top:-2.4413em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">0</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2587em;"><span></span></span></span></span></span></span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1.2564em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal">a</span><span class="mord mathnormal">c</span><span class="mord"><span class="mord">1</span></span><span class="mord"><span class="mspace newline"></span><span class="mord mathnormal">s</span><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal">t</span><span class="mord"><span class="mord">2</span><span class="mspace newline"></span><span class="mord mathnormal">p</span><span class="mord mathnormal">i</span></span><span class="mspace newline"></span><span class="mord mathnormal">s</span><span class="mord mathnormal">i</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">ma</span></span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.0064em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mspace mtight newline"></span><span class="mord mathnormal mtight" style="margin-right:0.10764em;">f</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight">c</span><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span><span class="mord mtight" style="margin-right:0.02778em;">_</span><span class="mord mathnormal mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9191em;"><span style="top:-2.931em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mord mathnormal mtight">x</span><span class="mord mtight" style="margin-right:0.02778em;">_</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight"><span class="mclose mtight">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913em;"><span style="top:-2.931em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span><span class="mord mtight"><span class="mord mtight">2</span><span class="mspace mtight newline"></span><span class="mord mathnormal mtight">s</span><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">g</span><span class="mord mathnormal mtight">m</span><span class="mord mtight"><span class="mord mathnormal mtight">a</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913em;"><span style="top:-2.931em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></p><p>接下来 log 函数继续为你带来惊喜，数学上连乘是个大麻烦，即使交给计算机去求解它也得<strong>哭出声来</strong>。惊喜是:</p><ul><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>l</mi><mi>o</mi><mi>g</mi><mi mathvariant="normal">_</mi><mi>a</mi><mo stretchy="false">(</mo><mi>X</mi><mi>Y</mi><mo stretchy="false">)</mo><mo>=</mo><mi>l</mi><mi>o</mi><mi>g</mi><mi mathvariant="normal">_</mi><mi>a</mi><mi>X</mi><mo>+</mo><mi>l</mi><mi>o</mi><mi>g</mi><mi mathvariant="normal">_</mi><mi>a</mi><mi>Y</mi></mrow><annotation encoding="application/x-tex">log\_a(XY) = log\_aX + log\_aY</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.06em;vertical-align:-0.31em;"></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord mathnormal">a</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.0044em;vertical-align:-0.31em;"></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.0044em;vertical-align:-0.31em;"></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord mathnormal" style="margin-right:0.22222em;">aY</span></span></span></span></li><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>l</mi><mi>o</mi><mi>g</mi><mi mathvariant="normal">_</mi><mi>a</mi><mspace linebreak="newline"></mspace><mi>f</mi><mi>r</mi><mi>a</mi><mi>c</mi><mi>X</mi><mi>Y</mi><mo>=</mo><mi>l</mi><mi>o</mi><mi>g</mi><mi mathvariant="normal">_</mi><mi>a</mi><mi>X</mi><mo>−</mo><mi>l</mi><mi>o</mi><mi>g</mi><mi mathvariant="normal">_</mi><mi>a</mi><mi>Y</mi></mrow><annotation encoding="application/x-tex">log\_a\\frac{X}{Y} = log\_aX - log\_aY</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0044em;vertical-align:-0.31em;"></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord mathnormal">a</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal">a</span><span class="mord mathnormal">c</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.0044em;vertical-align:-0.31em;"></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.0044em;vertical-align:-0.31em;"></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord mathnormal" style="margin-right:0.22222em;">aY</span></span></span></span></li><li>log\_aX^n = n\*log\_aX</li><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>l</mi><mi>o</mi><mi>g</mi><mi mathvariant="normal">_</mi><mi>a</mi><mo stretchy="false">(</mo><mi>X</mi><mi mathvariant="normal">_</mi><mn>1</mn><mi>X</mi><mi mathvariant="normal">_</mi><mn>2</mn><mo>…</mo><mo>…</mo><mi>X</mi><mi mathvariant="normal">_</mi><mi>n</mi><mo stretchy="false">)</mo><mo>=</mo><mi>l</mi><mi>o</mi><mi>g</mi><mi mathvariant="normal">_</mi><mi>a</mi><mi>X</mi><mi mathvariant="normal">_</mi><mn>1</mn><mo>+</mo><mi>l</mi><mi>o</mi><mi>g</mi><mi mathvariant="normal">_</mi><mi>a</mi><mi>X</mi><mi mathvariant="normal">_</mi><mn>2</mn><mo>+</mo><mo>…</mo><mo>…</mo><mo>+</mo><mi>l</mi><mi>o</mi><mi>g</mi><mi mathvariant="normal">_</mi><mi>a</mi><mi>X</mi><mi mathvariant="normal">_</mi><mi>n</mi></mrow><annotation encoding="application/x-tex">log\_a(X\_1X\_2……X\_n) = log\_aX\_1 + log\_aX\_2 + …… + log\_aX\_n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.06em;vertical-align:-0.31em;"></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord mathnormal">a</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mord">_1</span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mord">_2</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner">……</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord mathnormal">n</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.0044em;vertical-align:-0.31em;"></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mord">_1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.0044em;vertical-align:-0.31em;"></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mord">_2</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6667em;vertical-align:-0.0833em;"></span><span class="minner">……</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.0044em;vertical-align:-0.31em;"></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord mathnormal">n</span></span></span></span></li><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>l</mi><mi>o</mi><mi>g</mi><mi mathvariant="normal">_</mi><mi>x</mi><msup><mi>x</mi><mi>n</mi></msup><mo>=</mo><mi>n</mi><mo stretchy="false">(</mo><mi>n</mi><mspace linebreak="newline"></mspace><mi>i</mi><mi>n</mi><mi>R</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">log\_xx^n = n(n\\in R)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0044em;vertical-align:-0.31em;"></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord mathnormal">x</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6644em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">n</span><span class="mopen">(</span><span class="mord mathnormal">n</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">in</span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mclose">)</span></span></span></span></li><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>l</mi><mi>o</mi><mi>g</mi><mi mathvariant="normal">_</mi><mi>a</mi><mspace linebreak="newline"></mspace><mi>f</mi><mi>r</mi><mi>a</mi><mi>c</mi><mn>1</mn><mi>X</mi><mo>=</mo><mo>−</mo><mi>l</mi><mi>o</mi><mi>g</mi><mi mathvariant="normal">_</mi><mi>a</mi><mi>X</mi></mrow><annotation encoding="application/x-tex">log\_a\\frac{1}{X} = -log\_aX</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0044em;vertical-align:-0.31em;"></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord mathnormal">a</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal">a</span><span class="mord mathnormal">c</span><span class="mord"><span class="mord">1</span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.0044em;vertical-align:-0.31em;"></span><span class="mord">−</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span></span></span></span></li><li>log\_a\\sqrt\[x\]{N^y} = \\frac{y}{x}log\_aN</li></ul><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>l</mi><mi>o</mi><mi>g</mi><mi mathvariant="normal">_</mi><mi>e</mi><mo stretchy="false">(</mo><mi>P</mi><mi mathvariant="normal">_</mi><mi>W</mi><mo stretchy="false">)</mo><mo>=</mo><mi>l</mi><mi>o</mi><msub><mi>g</mi><mi>e</mi></msub><mo stretchy="false">(</mo><mspace linebreak="newline"></mspace><mi>p</mi><mi>r</mi><mi>o</mi><mi>d</mi><mspace linebreak="newline"></mspace><mi>l</mi><mi>i</mi><mi>m</mi><mi>i</mi><mi>t</mi><msubsup><mi>s</mi><mrow><mi>i</mi><mo>=</mo><mn>0</mn></mrow><mi>n</mi></msubsup><mspace linebreak="newline"></mspace><mi>f</mi><mi>r</mi><mi>a</mi><mi>c</mi><mn>1</mn><mrow><mspace linebreak="newline"></mspace><mi>s</mi><mi>q</mi><mi>r</mi><mi>t</mi><mrow><mn>2</mn><mspace linebreak="newline"></mspace><mi>p</mi><mi>i</mi></mrow><mspace linebreak="newline"></mspace><mi>s</mi><mi>i</mi><mi>g</mi><mi>m</mi><mi>a</mi></mrow><msup><mi>e</mi><mrow><mo>−</mo><mspace linebreak="newline"></mspace><mi>f</mi><mi>r</mi><mi>a</mi><mi>c</mi><mrow><mo stretchy="false">(</mo><mi>y</mi><mi mathvariant="normal">_</mi><mi>i</mi><mo>−</mo><msup><mi>W</mi><mi>T</mi></msup><mi>x</mi><mi mathvariant="normal">_</mi><mi>i</mi><msup><mo stretchy="false">)</mo><mn>2</mn></msup></mrow><mrow><mn>2</mn><mspace linebreak="newline"></mspace><mi>s</mi><mi>i</mi><mi>g</mi><mi>m</mi><msup><mi>a</mi><mn>2</mn></msup></mrow></mrow></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">log\_e(P\_W) = log_e(\\prod\\limits_{i = 0}^{n}\\frac{1}{\\sqrt{2\\pi}\\sigma}e^{-\\frac{(y\_i - W^Tx\_i)^2}{2\\sigma^2}})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.06em;vertical-align:-0.31em;"></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord mathnormal">e</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">e</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">p</span><span class="mord mathnormal">ro</span><span class="mord mathnormal">d</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.9531em;vertical-align:-0.2587em;"></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">imi</span><span class="mord mathnormal">t</span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6644em;"><span style="top:-2.4413em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">0</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2587em;"><span></span></span></span></span></span></span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1.2564em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal">a</span><span class="mord mathnormal">c</span><span class="mord"><span class="mord">1</span></span><span class="mord"><span class="mspace newline"></span><span class="mord mathnormal">s</span><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal">t</span><span class="mord"><span class="mord">2</span><span class="mspace newline"></span><span class="mord mathnormal">p</span><span class="mord mathnormal">i</span></span><span class="mspace newline"></span><span class="mord mathnormal">s</span><span class="mord mathnormal">i</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">ma</span></span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.0064em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mspace mtight newline"></span><span class="mord mathnormal mtight" style="margin-right:0.10764em;">f</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight">c</span><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span><span class="mord mtight" style="margin-right:0.02778em;">_</span><span class="mord mathnormal mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9191em;"><span style="top:-2.931em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mord mathnormal mtight">x</span><span class="mord mtight" style="margin-right:0.02778em;">_</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight"><span class="mclose mtight">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913em;"><span style="top:-2.931em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span><span class="mord mtight"><span class="mord mtight">2</span><span class="mspace mtight newline"></span><span class="mord mathnormal mtight">s</span><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">g</span><span class="mord mathnormal mtight">m</span><span class="mord mtight"><span class="mord mathnormal mtight">a</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913em;"><span style="top:-2.931em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>=</mo><mspace linebreak="newline"></mspace><mi>s</mi><mi>u</mi><mi>m</mi><mspace linebreak="newline"></mspace><mi>l</mi><mi>i</mi><mi>m</mi><mi>i</mi><mi>t</mi><mi>s</mi><mi mathvariant="normal">_</mi><msup><mrow><mi>i</mi><mo>=</mo><mn>0</mn></mrow><mi>n</mi></msup><mi>l</mi><mi>o</mi><mi>g</mi><mi mathvariant="normal">_</mi><mi>e</mi><mo stretchy="false">(</mo><mspace linebreak="newline"></mspace><mi>f</mi><mi>r</mi><mi>a</mi><mi>c</mi><mn>1</mn><mrow><mspace linebreak="newline"></mspace><mi>s</mi><mi>q</mi><mi>r</mi><mi>t</mi><mrow><mn>2</mn><mspace linebreak="newline"></mspace><mi>p</mi><mi>i</mi></mrow><mspace linebreak="newline"></mspace><mi>s</mi><mi>i</mi><mi>g</mi><mi>m</mi><mi>a</mi></mrow><msup><mi>e</mi><mrow><mo>−</mo><mspace linebreak="newline"></mspace><mi>f</mi><mi>r</mi><mi>a</mi><mi>c</mi><mrow><mo stretchy="false">(</mo><mi>y</mi><mi mathvariant="normal">_</mi><mi>i</mi><mo>−</mo><msup><mi>W</mi><mi>T</mi></msup><mi>x</mi><mi mathvariant="normal">_</mi><mi>i</mi><msup><mo stretchy="false">)</mo><mn>2</mn></msup></mrow><mrow><mn>2</mn><mspace linebreak="newline"></mspace><mi>s</mi><mi>i</mi><mi>g</mi><mi>m</mi><msup><mi>a</mi><mn>2</mn></msup></mrow></mrow></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">=\\sum\\limits\_{i = 0}^{n}log\_e(\\frac{1}{\\sqrt{2\\pi}\\sigma}e^{-\\frac{(y\_i - W^Tx\_i)^2}{2\\sigma^2}})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.3669em;"></span><span class="mrel">=</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">s</span><span class="mord mathnormal">u</span><span class="mord mathnormal">m</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1.06em;vertical-align:-0.31em;"></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">imi</span><span class="mord mathnormal">t</span><span class="mord mathnormal">s</span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord"><span class="mord"><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">0</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7138em;"><span style="top:-3.1124em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord mathnormal">e</span><span class="mopen">(</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1.2564em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal">a</span><span class="mord mathnormal">c</span><span class="mord"><span class="mord">1</span></span><span class="mord"><span class="mspace newline"></span><span class="mord mathnormal">s</span><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal">t</span><span class="mord"><span class="mord">2</span><span class="mspace newline"></span><span class="mord mathnormal">p</span><span class="mord mathnormal">i</span></span><span class="mspace newline"></span><span class="mord mathnormal">s</span><span class="mord mathnormal">i</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">ma</span></span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.0064em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mspace mtight newline"></span><span class="mord mathnormal mtight" style="margin-right:0.10764em;">f</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight">c</span><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span><span class="mord mtight" style="margin-right:0.02778em;">_</span><span class="mord mathnormal mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9191em;"><span style="top:-2.931em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mord mathnormal mtight">x</span><span class="mord mtight" style="margin-right:0.02778em;">_</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight"><span class="mclose mtight">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913em;"><span style="top:-2.931em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span><span class="mord mtight"><span class="mord mtight">2</span><span class="mspace mtight newline"></span><span class="mord mathnormal mtight">s</span><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">g</span><span class="mord mathnormal mtight">m</span><span class="mord mtight"><span class="mord mathnormal mtight">a</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913em;"><span style="top:-2.931em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>累乘问题变成<strong>累加</strong>问题~</p><p><strong>乘风破浪，继续推导—&gt;</strong></p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>=</mo><mspace linebreak="newline"></mspace><mi>s</mi><mi>u</mi><mi>m</mi><mspace linebreak="newline"></mspace><mi>l</mi><mi>i</mi><mi>m</mi><mi>i</mi><mi>t</mi><mi>s</mi><mi mathvariant="normal">_</mi><msup><mrow><mi>i</mi><mo>=</mo><mn>0</mn></mrow><mi>n</mi></msup><mo stretchy="false">(</mo><mi>l</mi><mi>o</mi><mi>g</mi><mi mathvariant="normal">_</mi><mi>e</mi><mspace linebreak="newline"></mspace><mi>f</mi><mi>r</mi><mi>a</mi><mi>c</mi><mn>1</mn><mrow><mspace linebreak="newline"></mspace><mi>s</mi><mi>q</mi><mi>r</mi><mi>t</mi><mrow><mn>2</mn><mspace linebreak="newline"></mspace><mi>p</mi><mi>i</mi></mrow><mspace linebreak="newline"></mspace><mi>s</mi><mi>i</mi><mi>g</mi><mi>m</mi><mi>a</mi></mrow><mo>−</mo><mspace linebreak="newline"></mspace><mi>f</mi><mi>r</mi><mi>a</mi><mi>c</mi><mrow><mo stretchy="false">(</mo><mi>y</mi><mi mathvariant="normal">_</mi><mi>i</mi><mo>−</mo><msup><mi>W</mi><mi>T</mi></msup><mi>x</mi><mi mathvariant="normal">_</mi><mi>i</mi><msup><mo stretchy="false">)</mo><mn>2</mn></msup></mrow><mrow><mn>2</mn><mspace linebreak="newline"></mspace><mi>s</mi><mi>i</mi><mi>g</mi><mi>m</mi><msup><mi>a</mi><mn>2</mn></msup></mrow><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">=\\sum\\limits\_{i = 0}^{n}(log\_e\\frac{1}{\\sqrt{2\\pi}\\sigma} - \\frac{(y\_i - W^Tx\_i)^2}{2\\sigma^2})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.3669em;"></span><span class="mrel">=</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">s</span><span class="mord mathnormal">u</span><span class="mord mathnormal">m</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1.06em;vertical-align:-0.31em;"></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">imi</span><span class="mord mathnormal">t</span><span class="mord mathnormal">s</span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord"><span class="mord"><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">0</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7138em;"><span style="top:-3.1124em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord mathnormal">e</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal">a</span><span class="mord mathnormal">c</span><span class="mord"><span class="mord">1</span></span><span class="mord"><span class="mspace newline"></span><span class="mord mathnormal">s</span><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal">t</span><span class="mord"><span class="mord">2</span><span class="mspace newline"></span><span class="mord mathnormal">p</span><span class="mord mathnormal">i</span></span><span class="mspace newline"></span><span class="mord mathnormal">s</span><span class="mord mathnormal">i</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">ma</span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1.1513em;vertical-align:-0.31em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal">a</span><span class="mord mathnormal">c</span><span class="mord"><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mord mathnormal">x</span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord mathnormal">i</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span><span class="mord"><span class="mord">2</span><span class="mspace newline"></span><span class="mord mathnormal">s</span><span class="mord mathnormal">i</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">m</span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>=</mo><mspace linebreak="newline"></mspace><mi>s</mi><mi>u</mi><mi>m</mi><mspace linebreak="newline"></mspace><mi>l</mi><mi>i</mi><mi>m</mi><mi>i</mi><mi>t</mi><mi>s</mi><mi mathvariant="normal">_</mi><msup><mrow><mi>i</mi><mo>=</mo><mn>0</mn></mrow><mi>n</mi></msup><mo stretchy="false">(</mo><mi>l</mi><mi>o</mi><mi>g</mi><mi mathvariant="normal">_</mi><mi>e</mi><mspace linebreak="newline"></mspace><mi>f</mi><mi>r</mi><mi>a</mi><mi>c</mi><mn>1</mn><mrow><mspace linebreak="newline"></mspace><mi>s</mi><mi>q</mi><mi>r</mi><mi>t</mi><mrow><mn>2</mn><mspace linebreak="newline"></mspace><mi>p</mi><mi>i</mi></mrow><mspace linebreak="newline"></mspace><mi>s</mi><mi>i</mi><mi>g</mi><mi>m</mi><mi>a</mi></mrow><mo>−</mo><mspace linebreak="newline"></mspace><mi>f</mi><mi>r</mi><mi>a</mi><mi>c</mi><mn>1</mn><mrow><mspace linebreak="newline"></mspace><mi>s</mi><mi>i</mi><mi>g</mi><mi>m</mi><msup><mi>a</mi><mn>2</mn></msup></mrow><mspace linebreak="newline"></mspace><mi>c</mi><mi>d</mi><mi>o</mi><mi>t</mi><mspace linebreak="newline"></mspace><mi>f</mi><mi>r</mi><mi>a</mi><mi>c</mi><mn>12</mn><mo stretchy="false">(</mo><mi>y</mi><mi mathvariant="normal">_</mi><mi>i</mi><mo>−</mo><msup><mi>W</mi><mi>T</mi></msup><mi>x</mi><mi mathvariant="normal">_</mi><mi>i</mi><msup><mo stretchy="false">)</mo><mn>2</mn></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">=\\sum\\limits\_{i = 0}^{n}(log\_e\\frac{1}{\\sqrt{2\\pi}\\sigma} - \\frac{1}{\\sigma^2}\\cdot\\frac{1}{2}(y\_i - W^Tx\_i)^2)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.3669em;"></span><span class="mrel">=</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">s</span><span class="mord mathnormal">u</span><span class="mord mathnormal">m</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1.06em;vertical-align:-0.31em;"></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">imi</span><span class="mord mathnormal">t</span><span class="mord mathnormal">s</span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord"><span class="mord"><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">0</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7138em;"><span style="top:-3.1124em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord mathnormal">e</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal">a</span><span class="mord mathnormal">c</span><span class="mord"><span class="mord">1</span></span><span class="mord"><span class="mspace newline"></span><span class="mord mathnormal">s</span><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal">t</span><span class="mord"><span class="mord">2</span><span class="mspace newline"></span><span class="mord mathnormal">p</span><span class="mord mathnormal">i</span></span><span class="mspace newline"></span><span class="mord mathnormal">s</span><span class="mord mathnormal">i</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">ma</span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1.0085em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal">a</span><span class="mord mathnormal">c</span><span class="mord"><span class="mord">1</span></span><span class="mord"><span class="mspace newline"></span><span class="mord mathnormal">s</span><span class="mord mathnormal">i</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">m</span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal">c</span><span class="mord mathnormal">d</span><span class="mord mathnormal">o</span><span class="mord mathnormal">t</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1.06em;vertical-align:-0.31em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal">a</span><span class="mord mathnormal">c</span><span class="mord"><span class="mord">1</span></span><span class="mord"><span class="mord">2</span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.1513em;vertical-align:-0.31em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mord mathnormal">x</span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord mathnormal">i</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></p><p>上面公式是最大似然求对数后的变形，其中<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mspace linebreak="newline"></mspace><mi>p</mi><mi>i</mi><mtext>、</mtext><mspace linebreak="newline"></mspace><mi>s</mi><mi>i</mi><mi>g</mi><mi>m</mi><mi>a</mi></mrow><annotation encoding="application/x-tex">\\pi、\\sigma</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">p</span><span class="mord mathnormal">i</span><span class="mord cjk_fallback">、</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.854em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">s</span><span class="mord mathnormal">i</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">ma</span></span></span></span>都是常量，而<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mi>y</mi><mi mathvariant="normal">_</mi><mi>i</mi><mo>−</mo><msup><mi>W</mi><mi>T</mi></msup><mi>x</mi><mi mathvariant="normal">_</mi><mi>i</mi><msup><mo stretchy="false">)</mo><mn>2</mn></msup></mrow><annotation encoding="application/x-tex">(y\_i - W^Tx\_i)^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.06em;vertical-align:-0.31em;"></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.1513em;vertical-align:-0.31em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mord mathnormal">x</span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord mathnormal">i</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span>肯定大于<strong>零</strong>！上面求最大值问题，即可转变为如下求<strong>最小值</strong>问题：</p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>L</mi><mo stretchy="false">(</mo><mi>W</mi><mo stretchy="false">)</mo><mo>=</mo><mspace linebreak="newline"></mspace><mi>f</mi><mi>r</mi><mi>a</mi><mi>c</mi><mn>12</mn><mspace linebreak="newline"></mspace><mi>s</mi><mi>u</mi><mi>m</mi><mspace linebreak="newline"></mspace><mi>l</mi><mi>i</mi><mi>m</mi><mi>i</mi><mi>t</mi><mi>s</mi><mi mathvariant="normal">_</mi><msup><mrow><mi>i</mi><mo>=</mo><mn>0</mn></mrow><mi>n</mi></msup><mo stretchy="false">(</mo><msup><mi>y</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><mo>−</mo><msup><mi>W</mi><mi>T</mi></msup><msup><mi>x</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><msup><mo stretchy="false">)</mo><mn>2</mn></msup></mrow><annotation encoding="application/x-tex">L(W) = \\frac{1}{2}\\sum\\limits\_{i = 0}^n(y^{(i)} - W^Tx^{(i)})^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">L</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal">a</span><span class="mord mathnormal">c</span><span class="mord"><span class="mord">1</span></span><span class="mord"><span class="mord">2</span></span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">s</span><span class="mord mathnormal">u</span><span class="mord mathnormal">m</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1.198em;vertical-align:-0.31em;"></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">imi</span><span class="mord mathnormal">t</span><span class="mord mathnormal">s</span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord"><span class="mord"><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">0</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7138em;"><span style="top:-3.1124em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.888em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.138em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.888em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span> L代表Loss，表示损失函数，损失函数<strong>越小</strong>，那么上面最大似然就<strong>越大</strong>~</p><p>有的书本上公式，也可以这样写，用<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>J</mi><mo stretchy="false">(</mo><mspace linebreak="newline"></mspace><mi>t</mi><mi>h</mi><mi>e</mi><mi>t</mi><mi>a</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">J(\\theta)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.09618em;">J</span><span class="mopen">(</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">t</span><span class="mord mathnormal">h</span><span class="mord mathnormal">e</span><span class="mord mathnormal">t</span><span class="mord mathnormal">a</span><span class="mclose">)</span></span></span></span>表示一个意思，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mspace linebreak="newline"></mspace><mi>t</mi><mi>h</mi><mi>e</mi><mi>t</mi><mi>a</mi></mrow><annotation encoding="application/x-tex">\\theta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal">t</span><span class="mord mathnormal">h</span><span class="mord mathnormal">e</span><span class="mord mathnormal">t</span><span class="mord mathnormal">a</span></span></span></span> 的角色就是W：</p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>J</mi><mo stretchy="false">(</mo><mspace linebreak="newline"></mspace><mi>t</mi><mi>h</mi><mi>e</mi><mi>t</mi><mi>a</mi><mo stretchy="false">)</mo><mo>=</mo><mspace linebreak="newline"></mspace><mi>f</mi><mi>r</mi><mi>a</mi><mi>c</mi><mn>12</mn><mspace linebreak="newline"></mspace><mi>s</mi><mi>u</mi><mi>m</mi><mspace linebreak="newline"></mspace><mi>l</mi><mi>i</mi><mi>m</mi><mi>i</mi><mi>t</mi><msubsup><mi>s</mi><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></msubsup><mo stretchy="false">(</mo><msup><mi>y</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><mo>−</mo><mspace linebreak="newline"></mspace><mi>t</mi><mi>h</mi><mi>e</mi><mi>t</mi><msup><mi>a</mi><mi>T</mi></msup><msup><mi>x</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><msup><mo stretchy="false">)</mo><mn>2</mn></msup><mo>=</mo><mspace linebreak="newline"></mspace><mi>f</mi><mi>r</mi><mi>a</mi><mi>c</mi><mn>12</mn><mspace linebreak="newline"></mspace><mi>s</mi><mi>u</mi><mi>m</mi><mspace linebreak="newline"></mspace><mi>l</mi><mi>i</mi><mi>m</mi><mi>i</mi><mi>t</mi><msubsup><mi>s</mi><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></msubsup><mo stretchy="false">(</mo><mspace linebreak="newline"></mspace><mi>t</mi><mi>h</mi><mi>e</mi><mi>t</mi><msup><mi>a</mi><mi>T</mi></msup><msup><mi>x</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><mo>−</mo><msup><mi>y</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><msup><mo stretchy="false">)</mo><mn>2</mn></msup></mrow><annotation encoding="application/x-tex">J(\\theta) = \\frac{1}{2}\\sum\\limits_{i = 1}^n(y^{(i)} - \\theta^Tx^{(i)})^2 = \\frac{1}{2}\\sum\\limits_{i = 1}^n(\\theta^Tx^{(i)} - y^{(i)})^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.09618em;">J</span><span class="mopen">(</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">t</span><span class="mord mathnormal">h</span><span class="mord mathnormal">e</span><span class="mord mathnormal">t</span><span class="mord mathnormal">a</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal">a</span><span class="mord mathnormal">c</span><span class="mord"><span class="mord">1</span></span><span class="mord"><span class="mord">2</span></span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">s</span><span class="mord mathnormal">u</span><span class="mord mathnormal">m</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1.1467em;vertical-align:-0.2587em;"></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">imi</span><span class="mord mathnormal">t</span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6644em;"><span style="top:-2.4413em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2587em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.888em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1.138em;vertical-align:-0.25em;"></span><span class="mord mathnormal">t</span><span class="mord mathnormal">h</span><span class="mord mathnormal">e</span><span class="mord mathnormal">t</span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.888em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal">a</span><span class="mord mathnormal">c</span><span class="mord"><span class="mord">1</span></span><span class="mord"><span class="mord">2</span></span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">s</span><span class="mord mathnormal">u</span><span class="mord mathnormal">m</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1.0087em;vertical-align:-0.2587em;"></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">imi</span><span class="mord mathnormal">t</span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6644em;"><span style="top:-2.4413em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2587em;"><span></span></span></span></span></span></span><span class="mopen">(</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.9713em;vertical-align:-0.0833em;"></span><span class="mord mathnormal">t</span><span class="mord mathnormal">h</span><span class="mord mathnormal">e</span><span class="mord mathnormal">t</span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.888em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.138em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.888em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span></p><p><strong>进一步提取：</strong></p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>J</mi><mo stretchy="false">(</mo><mspace linebreak="newline"></mspace><mi>t</mi><mi>h</mi><mi>e</mi><mi>t</mi><mi>a</mi><mo stretchy="false">)</mo><mo>=</mo><mspace linebreak="newline"></mspace><mi>f</mi><mi>r</mi><mi>a</mi><mi>c</mi><mn>12</mn><mspace linebreak="newline"></mspace><mi>s</mi><mi>u</mi><mi>m</mi><mspace linebreak="newline"></mspace><mi>l</mi><mi>i</mi><mi>m</mi><mi>i</mi><mi>t</mi><msubsup><mi>s</mi><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></msubsup><mo stretchy="false">(</mo><msub><mi>h</mi><mrow><mspace linebreak="newline"></mspace><mi>t</mi><mi>h</mi><mi>e</mi><mi>t</mi><mi>a</mi></mrow></msub><mo stretchy="false">(</mo><msup><mi>x</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><mo stretchy="false">)</mo><mo>−</mo><msup><mi>y</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><msup><mo stretchy="false">)</mo><mn>2</mn></msup></mrow><annotation encoding="application/x-tex">J(\\theta) = \\frac{1}{2}\\sum\\limits_{i = 1}^n(h_{\\theta}(x^{(i)}) - y^{(i)})^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.09618em;">J</span><span class="mopen">(</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">t</span><span class="mord mathnormal">h</span><span class="mord mathnormal">e</span><span class="mord mathnormal">t</span><span class="mord mathnormal">a</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal">a</span><span class="mord mathnormal">c</span><span class="mord"><span class="mord">1</span></span><span class="mord"><span class="mord">2</span></span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">s</span><span class="mord mathnormal">u</span><span class="mord mathnormal">m</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1.1467em;vertical-align:-0.2587em;"></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">imi</span><span class="mord mathnormal">t</span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6644em;"><span style="top:-2.4413em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2587em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mspace mtight newline"></span><span class="mord mathnormal mtight">t</span><span class="mord mathnormal mtight">h</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight">t</span><span class="mord mathnormal mtight">a</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.888em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.138em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.888em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span></p><p>其中：</p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mspace linebreak="newline"></mspace><mi>h</mi><mi>a</mi><mi>t</mi><mi>y</mi><mo>=</mo><mi>h</mi><mi mathvariant="normal">_</mi><mrow><mspace linebreak="newline"></mspace><mi>t</mi><mi>h</mi><mi>e</mi><mi>t</mi><mi>a</mi></mrow><mo stretchy="false">(</mo><mi>X</mi><mo stretchy="false">)</mo><mo>=</mo><mi>X</mi><mspace linebreak="newline"></mspace><mi>t</mi><mi>h</mi><mi>e</mi><mi>t</mi><mi>a</mi></mrow><annotation encoding="application/x-tex">\\hat{y} = h\_{\\theta}(X) =X \\theta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">ha</span><span class="mord mathnormal">t</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.06em;vertical-align:-0.31em;"></span><span class="mord mathnormal">h</span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord"><span class="mspace newline"></span><span class="mord mathnormal">t</span><span class="mord mathnormal">h</span><span class="mord mathnormal">e</span><span class="mord mathnormal">t</span><span class="mord mathnormal">a</span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal">t</span><span class="mord mathnormal">h</span><span class="mord mathnormal">e</span><span class="mord mathnormal">t</span><span class="mord mathnormal">a</span></span></span></span> 表示全部数据，是矩阵，X表示多个数据，进行矩阵乘法时，放在前面</p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mspace linebreak="newline"></mspace><mi>h</mi><mi>a</mi><mi>t</mi><msub><mi>y</mi><mi>i</mi></msub><mo>=</mo><msub><mi>h</mi><mrow><mspace linebreak="newline"></mspace><mi>t</mi><mi>h</mi><mi>e</mi><mi>t</mi><mi>a</mi></mrow></msub><mo stretchy="false">(</mo><msup><mi>x</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><mo stretchy="false">)</mo><mo>=</mo><mspace linebreak="newline"></mspace><mi>t</mi><mi>h</mi><mi>e</mi><mi>t</mi><msup><mi>a</mi><mi>T</mi></msup><msup><mi>x</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup></mrow><annotation encoding="application/x-tex">\\hat{y}_i = h_{\\theta}(x^{(i)}) = \\theta^Tx^{(i)}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">ha</span><span class="mord mathnormal">t</span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.138em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mspace mtight newline"></span><span class="mord mathnormal mtight">t</span><span class="mord mathnormal mtight">h</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight">t</span><span class="mord mathnormal mtight">a</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.888em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.888em;"></span><span class="mord mathnormal">t</span><span class="mord mathnormal">h</span><span class="mord mathnormal">e</span><span class="mord mathnormal">t</span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.888em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span></span></span></span> 表示第i个数据，是向量，所以进行乘法时，其中一方需要转置</p><p>因为最大似然公式中有个<strong>负号</strong>，所以最大总似然变成了<strong>最小化</strong>负号后面的部分。 到这里，我们就已经推导出来了 MSE 损失函数<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>J</mi><mo stretchy="false">(</mo><mspace linebreak="newline"></mspace><mi>t</mi><mi>h</mi><mi>e</mi><mi>t</mi><mi>a</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">J(\\theta)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.09618em;">J</span><span class="mopen">(</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">t</span><span class="mord mathnormal">h</span><span class="mord mathnormal">e</span><span class="mord mathnormal">t</span><span class="mord mathnormal">a</span><span class="mclose">)</span></span></span></span>，从公式我们也可以看出来 MSE 名字的来 历，mean squared error，上式也叫做最小二乘法！</p><h4 id="3-7、归纳总结升华">3.7、归纳总结升华</h4><p>这种最小二乘法估计，其实我们就可以认为，假定了误差服从正太分布，认为样本误差的出现是随机的，独立的，使用最大似然估计思想，利用损失函数最小化 MSE 就能求出最优解！所以反过来说，如果我们的数据误差不是互相独立的，或者不是随机出现的，那么就不适合去假设为正太分布，就不能去用正太分布的概率密度函数带入到总似然的函数中，故而就不能用 MSE 作为损失函数去求解最优解了！所以，最小二乘法不是万能的~</p><p>还有譬如假设误差服从泊松分布，或其他分布那就得用其他分布的概率密度函数去推导出损失函数了。</p><p>所以有时我们也可以把线性回归看成是广义线性回归。比如，逻辑回归，泊松回归都属于广义线性回归的一种，这里我们线性回归可以说是最小二乘线性回归。</p><h3 id="4、线性回归实战">4、线性回归实战</h3><h4 id="4-1、使用正规方程进行求解">4.1、使用正规方程进行求解</h4><h5 id="4-1-1、简单线性回归">4.1.1、简单线性回归</h5><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>y</mi><mo>=</mo><mi>w</mi><mi>x</mi><mo>+</mo><mi>b</mi></mrow><annotation encoding="application/x-tex">y = wx + b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal">b</span></span></span></span></p><p>一元一次方程，在机器学习中一元表示一个特征，b表示截距，y表示目标值。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs Python"><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<br><span class="hljs-keyword">import</span> matplotlib.pyplot <span class="hljs-keyword">as</span> plt<br><span class="hljs-comment"># 转化成矩阵</span><br>X = np.linspace(<span class="hljs-number">0</span>,<span class="hljs-number">10</span>,num = <span class="hljs-number">30</span>).reshape(-<span class="hljs-number">1</span>,<span class="hljs-number">1</span>)<br><span class="hljs-comment"># 斜率和截距，随机生成</span><br>w = np.random.randint(<span class="hljs-number">1</span>,<span class="hljs-number">5</span>,size = <span class="hljs-number">1</span>)<br>b = np.random.randint(<span class="hljs-number">1</span>,<span class="hljs-number">10</span>,size = <span class="hljs-number">1</span>)<br><span class="hljs-comment"># 根据一元一次方程计算目标值y，并加上“噪声”，数据有上下波动~</span><br>y = X * w + b + np.random.randn(<span class="hljs-number">30</span>,<span class="hljs-number">1</span>)<br>plt.scatter(X,y)<br><span class="hljs-comment"># 重新构造X，b截距，相当于系数w0，前面统一乘以1</span><br>X = np.concatenate([X,np.full(shape = (<span class="hljs-number">30</span>,<span class="hljs-number">1</span>),fill_value= <span class="hljs-number">1</span>)],axis = <span class="hljs-number">1</span>)<br><span class="hljs-comment"># 正规方程求解</span><br>θ = np.linalg.inv(X.T.dot(X)).dot(X.T).dot(y).<span class="hljs-built_in">round</span>(<span class="hljs-number">2</span>)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;一元一次方程真实的斜率和截距是：&#x27;</span>,w, b)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;通过正规方程求解的斜率和截距是：&#x27;</span>,θ)<br><span class="hljs-comment"># 根据求解的斜率和截距绘制线性回归线型图</span><br>plt.plot(X[:,<span class="hljs-number">0</span>],X.dot(θ),color = <span class="hljs-string">&#x27;green&#x27;</span>)<br></code></pre></td></tr></table></figure><p>效果如下（random.randn是随机生成正太分布数据，所以每次执行图形会有所不同）：</p><p><img src="./%E5%9B%BE%E7%89%87/19-%E7%AE%80%E5%8D%95%E7%BA%BF%E6%80%A7%E5%9B%9E%E5%BD%92.jpg" alt=""></p><h5 id="4-1-2、多元线性回归">4.1.2、多元线性回归</h5><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>y</mi><mo>=</mo><mi>w</mi><mi mathvariant="normal">_</mi><mn>1</mn><mi>x</mi><mi mathvariant="normal">_</mi><mn>1</mn><mo>+</mo><mi>w</mi><mi mathvariant="normal">_</mi><mn>2</mn><mi>x</mi><mi mathvariant="normal">_</mi><mn>2</mn><mo>+</mo><mi>b</mi></mrow><annotation encoding="application/x-tex">y = w\_1x\_1 + w\_2x\_2 + b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.9544em;vertical-align:-0.31em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mord">_1</span><span class="mord mathnormal">x</span><span class="mord">_1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.9544em;vertical-align:-0.31em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mord">_2</span><span class="mord mathnormal">x</span><span class="mord">_2</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal">b</span></span></span></span></p><p>二元一次方程，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi><mi mathvariant="normal">_</mi><mn>1</mn><mtext>、</mtext><mi>x</mi><mi mathvariant="normal">_</mi><mn>2</mn></mrow><annotation encoding="application/x-tex">x\_1、x\_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9933em;vertical-align:-0.31em;"></span><span class="mord mathnormal">x</span><span class="mord">_1</span><span class="mord cjk_fallback">、</span><span class="mord mathnormal">x</span><span class="mord">_2</span></span></span></span> 相当于两个特征，b是方程截距</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs Python"><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<br><span class="hljs-keyword">import</span> matplotlib.pyplot <span class="hljs-keyword">as</span> plt<br><span class="hljs-keyword">from</span> mpl_toolkits.mplot3d.axes3d <span class="hljs-keyword">import</span> Axes3D <span class="hljs-comment"># 绘制三维图像</span><br><span class="hljs-comment"># 转化成矩阵</span><br>x1 = np.random.randint(-<span class="hljs-number">150</span>,<span class="hljs-number">150</span>,size = (<span class="hljs-number">300</span>,<span class="hljs-number">1</span>))<br>x2 = np.random.randint(<span class="hljs-number">0</span>,<span class="hljs-number">300</span>,size = (<span class="hljs-number">300</span>,<span class="hljs-number">1</span>))<br><span class="hljs-comment"># 斜率和截距，随机生成</span><br>w = np.random.randint(<span class="hljs-number">1</span>,<span class="hljs-number">5</span>,size = <span class="hljs-number">2</span>)<br>b = np.random.randint(<span class="hljs-number">1</span>,<span class="hljs-number">10</span>,size = <span class="hljs-number">1</span>)<br><span class="hljs-comment"># 根据二元一次方程计算目标值y，并加上“噪声”，数据有上下波动~</span><br>y = x1 * w[<span class="hljs-number">0</span>] + x2 * w[<span class="hljs-number">1</span>] + b + np.random.randn(<span class="hljs-number">300</span>,<span class="hljs-number">1</span>)<br>fig = plt.figure(figsize=(<span class="hljs-number">9</span>,<span class="hljs-number">6</span>))<br>ax = Axes3D(fig)<br>ax.scatter(x1,x2,y) <span class="hljs-comment"># 三维散点图</span><br>ax.view_init(elev=<span class="hljs-number">10</span>, azim=-<span class="hljs-number">20</span>) <span class="hljs-comment"># 调整视角</span><br><span class="hljs-comment"># 重新构造X，将x1、x2以及截距b，相当于系数w0，前面统一乘以1进行数据合并</span><br>X = np.concatenate([x1,x2,np.full(shape = (<span class="hljs-number">300</span>,<span class="hljs-number">1</span>),fill_value=<span class="hljs-number">1</span>)],axis = <span class="hljs-number">1</span>)<br>w = np.concatenate([w,b])<br><span class="hljs-comment"># 正规方程求解</span><br>θ = np.linalg.inv(X.T.dot(X)).dot(X.T).dot(y).<span class="hljs-built_in">round</span>(<span class="hljs-number">2</span>)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;二元一次方程真实的斜率和截距是：&#x27;</span>,w)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;通过正规方程求解的斜率和截距是：&#x27;</span>,θ.reshape(-<span class="hljs-number">1</span>))<br><span class="hljs-comment"># # 根据求解的斜率和截距绘制线性回归线型图</span><br>x = np.linspace(-<span class="hljs-number">150</span>,<span class="hljs-number">150</span>,<span class="hljs-number">100</span>)<br>y = np.linspace(<span class="hljs-number">0</span>,<span class="hljs-number">300</span>,<span class="hljs-number">100</span>)<br>z = x * θ[<span class="hljs-number">0</span>] + y * θ[<span class="hljs-number">1</span>] + θ[<span class="hljs-number">2</span>]<br>ax.plot(x,y,z ,color = <span class="hljs-string">&#x27;red&#x27;</span>)<br></code></pre></td></tr></table></figure><p>效果如下：</p><p><img src="./%E5%9B%BE%E7%89%87/20-%E5%A4%9A%E5%85%83%E7%BA%BF%E6%80%A7%E5%9B%9E%E5%BD%92.jpg" alt=""></p><h4 id="4-2、机器学习库scikit-learn">4.2、机器学习库scikit-learn</h4><h5 id="4-2-1、scikit-learn简介">4.2.1、<a href="https://scikit-learn.org/stable/index.html">scikit-learn简介</a></h5><p><img src="./%E5%9B%BE%E7%89%87/21-scikit-learn.jpeg" alt=""></p><h5 id="4-2-2、scikit-learn实现简单线性回归">4.2.2、scikit-learn实现简单线性回归</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs Python"><span class="hljs-keyword">from</span> sklearn.linear_model <span class="hljs-keyword">import</span> LinearRegression<br><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<br><span class="hljs-keyword">import</span> matplotlib.pyplot <span class="hljs-keyword">as</span> plt<br><span class="hljs-comment"># 转化成矩阵</span><br>X = np.linspace(<span class="hljs-number">0</span>,<span class="hljs-number">10</span>,num = <span class="hljs-number">30</span>).reshape(-<span class="hljs-number">1</span>,<span class="hljs-number">1</span>)<br><span class="hljs-comment"># 斜率和截距，随机生成</span><br>w = np.random.randint(<span class="hljs-number">1</span>,<span class="hljs-number">5</span>,size = <span class="hljs-number">1</span>)<br>b = np.random.randint(<span class="hljs-number">1</span>,<span class="hljs-number">10</span>,size = <span class="hljs-number">1</span>)<br><span class="hljs-comment"># 根据一元一次方程计算目标值y，并加上“噪声”，数据有上下波动~</span><br>y = X * w + b + np.random.randn(<span class="hljs-number">30</span>,<span class="hljs-number">1</span>)<br>plt.scatter(X,y)<br><span class="hljs-comment"># 使用scikit-learn中的线性回归求解</span><br>model = LinearRegression()<br>model.fit(X,y)<br>w_ = model.coef_<br>b_ = model.intercept_<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;一元一次方程真实的斜率和截距是：&#x27;</span>,w, b)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;通过scikit-learn求解的斜率和截距是：&#x27;</span>,w_,b_)<br>plt.plot(X,X.dot(w_) + b_,color = <span class="hljs-string">&#x27;green&#x27;</span>)<br></code></pre></td></tr></table></figure><p><img src="./%E5%9B%BE%E7%89%87/22-scikit-learn%E7%AE%80%E5%8D%95%E7%BA%BF%E6%80%A7%E5%9B%9E%E5%BD%92.jpg" alt=""></p><h5 id="4-2-3、scikit-learn实现多元线性回归">4.2.3、scikit-learn实现多元线性回归</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs Python"><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<br><span class="hljs-keyword">import</span> matplotlib.pyplot <span class="hljs-keyword">as</span> plt<br><span class="hljs-keyword">from</span> mpl_toolkits.mplot3d.axes3d <span class="hljs-keyword">import</span> Axes3D<br><span class="hljs-comment"># 转化成矩阵</span><br>x1 = np.random.randint(-<span class="hljs-number">150</span>,<span class="hljs-number">150</span>,size = (<span class="hljs-number">300</span>,<span class="hljs-number">1</span>))<br>x2 = np.random.randint(<span class="hljs-number">0</span>,<span class="hljs-number">300</span>,size = (<span class="hljs-number">300</span>,<span class="hljs-number">1</span>))<br><span class="hljs-comment"># 斜率和截距，随机生成</span><br>w = np.random.randint(<span class="hljs-number">1</span>,<span class="hljs-number">5</span>,size = <span class="hljs-number">2</span>)<br>b = np.random.randint(<span class="hljs-number">1</span>,<span class="hljs-number">10</span>,size = <span class="hljs-number">1</span>)<br><span class="hljs-comment"># 根据二元一次方程计算目标值y，并加上“噪声”，数据有上下波动~</span><br>y = x1 * w[<span class="hljs-number">0</span>] + x2 * w[<span class="hljs-number">1</span>] + b + np.random.randn(<span class="hljs-number">300</span>,<span class="hljs-number">1</span>)<br>fig = plt.figure(figsize=(<span class="hljs-number">9</span>,<span class="hljs-number">6</span>))<br>ax = Axes3D(fig)<br>ax.scatter(x1,x2,y) <span class="hljs-comment"># 三维散点图</span><br>ax.view_init(elev=<span class="hljs-number">10</span>, azim=-<span class="hljs-number">20</span>) <span class="hljs-comment"># 调整视角</span><br><span class="hljs-comment"># 重新构造X，将x1、x2以及截距b，相当于系数w0，前面统一乘以1进行数据合并</span><br>X = np.concatenate([x1,x2],axis = <span class="hljs-number">1</span>)<br><span class="hljs-comment"># 使用scikit-learn中的线性回归求解</span><br>model = LinearRegression()<br>model.fit(X,y)<br>w_ = model.coef_.reshape(-<span class="hljs-number">1</span>)<br>b_ = model.intercept_<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;二元一次方程真实的斜率和截距是：&#x27;</span>,w,b)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;通过scikit-learn求解的斜率和截距是：&#x27;</span>,w_,b_)<br><span class="hljs-comment"># # 根据求解的斜率和截距绘制线性回归线型图</span><br>x = np.linspace(-<span class="hljs-number">150</span>,<span class="hljs-number">150</span>,<span class="hljs-number">100</span>)<br>y = np.linspace(<span class="hljs-number">0</span>,<span class="hljs-number">300</span>,<span class="hljs-number">100</span>)<br>z = x * w_[<span class="hljs-number">0</span>] + y * w_[<span class="hljs-number">1</span>] + b_<br>ax.plot(x,y,z ,color = <span class="hljs-string">&#x27;green&#x27;</span>)<br></code></pre></td></tr></table></figure><p><img src="./%E5%9B%BE%E7%89%87/23-scikit-learn%E5%A4%9A%E5%85%83%E7%BA%BF%E6%80%A7%E5%9B%9E%E5%BD%92.jpg" alt=""></p>]]></content>
      
      
      <categories>
          
          <category> program </category>
          
          <category> 机器学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> AI </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>1.14.无所吊胃，加油蓝桥杯，加油考研！</title>
      <link href="/posts/a3ba5a6b.html"/>
      <url>/posts/a3ba5a6b.html</url>
      
        <content type="html"><![CDATA[<p><em>今天是2025年1月14日</em></p><p>我打算写一写缓解焦虑。终于终于终于不用再上课了！！！</p><p>[progressbar progress=“12.3”]2025[/progressbar]</p><p>放寒假已经三四天了，期末考试成绩出来了，还是那样不太理想；</p><p>在上学的时间里，我都在上课和自习的挣扎中，既然在课堂中学不到东西，那为什么要上课，还不如自己学；在加上本来对自己的学业有点失望，总有人我就是考不过，那就这样吧，哼哼哼。</p><p>下学期我要免听！再不考上研我这辈子也就这样了，本科还不如上一个让自己高兴的大学，不管是二本还是一本。</p>]]></content>
      
      
      <categories>
          
          <category> uncategorized </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>pandas数据分析库</title>
      <link href="/posts/a67c1f02.html"/>
      <url>/posts/a67c1f02.html</url>
      
        <content type="html"><![CDATA[<hr><hr><h1>pandas数据分析库</h1><h2 id="第一部分-课程介绍">第一部分 课程介绍</h2><ul><li>Python在数据处理和准备方面一直做得很好，但在数据分析和建模方面就差一些。pandas帮助填补了这一空白，使您能够在Python中执行整个数据分析工作流程，而不必切换到更特定于领域的语言，如R。</li><li>与出色的 jupyter工具包和其他库相结合，Python中用于进行数据分析的环境在性能、生产率和协作能力方面都是卓越的。</li><li>pandas是 Python 的核心数据分析支持库，提供了快速、灵活、明确的数据结构，旨在简单、直观地处理关系型、标记型数据。pandas是Python进行数据分析的必备高级工具。</li><li>pandas的主要数据结构是 **Series(**一维数据)与 <strong>DataFrame</strong> (二维数据)，这两种数据结构足以处理金融、统计、社会科学、工程等领域里的大多数案例</li><li>处理数据一般分为几个阶段：数据整理与清洗、数据分析与建模、数据可视化与制表，Pandas 是处理数据的理想工具。</li><li>pip install pandas -i <a href="https://pypi.tuna.tsinghua.edu.cn/simple">https://pypi.tuna.tsinghua.edu.cn/simple</a></li></ul><h2 id="第二部分-数据结构">第二部分 数据结构</h2><h3 id="第一节-Series">第一节 Series</h3><p>用列表生成 Series时，Pandas 默认自动生成整数索引，也可以指定索引</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs python">l = [<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">7</span>,<span class="hljs-number">9</span>,np.NAN,<span class="hljs-literal">None</span>,<span class="hljs-number">1024</span>,<span class="hljs-number">512</span>]<br><span class="hljs-comment"># 无论是numpy中的NAN还是Python中的None在pandas中都以缺失数据NaN对待</span><br>s1 = pd.Series(data = l)  <span class="hljs-comment"># pandas自动添加索引</span><br>s2 = pd.Series(data = l,index = <span class="hljs-built_in">list</span>(<span class="hljs-string">&#x27;abcdefhi&#x27;</span>),dtype=<span class="hljs-string">&#x27;float32&#x27;</span>) <span class="hljs-comment"># 指定行索引</span><br><span class="hljs-comment"># 传入字典创建，key行索引</span><br>s3 = pd.Series(data = &#123;<span class="hljs-string">&#x27;a&#x27;</span>:<span class="hljs-number">99</span>,<span class="hljs-string">&#x27;b&#x27;</span>:<span class="hljs-number">137</span>,<span class="hljs-string">&#x27;c&#x27;</span>:<span class="hljs-number">149</span>&#125;,name = <span class="hljs-string">&#x27;Python_score&#x27;</span>) <br>display(s1,s2,s3)<br></code></pre></td></tr></table></figure><h3 id="第二节-DataFrame">第二节 DataFrame</h3><p>DataFrame是由多种类型的列构成的二维标签数据结构，类似于 Excel 、SQL 表，或 Series 对象构成的字典。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<br><span class="hljs-keyword">import</span> pandas <span class="hljs-keyword">as</span> pd<br><span class="hljs-comment"># index 作为行索引，字典中的key作为列索引，创建了3*3的DataFrame表格二维数组</span><br>df1 = pd.DataFrame(data = &#123;<span class="hljs-string">&#x27;Python&#x27;</span>:[<span class="hljs-number">99</span>,<span class="hljs-number">107</span>,<span class="hljs-number">122</span>],<span class="hljs-string">&#x27;Math&#x27;</span>:[<span class="hljs-number">111</span>,<span class="hljs-number">137</span>,<span class="hljs-number">88</span>],<span class="hljs-string">&#x27;En&#x27;</span>:[<span class="hljs-number">68</span>,<span class="hljs-number">108</span>,<span class="hljs-number">43</span>]&#125;,<span class="hljs-comment"># key作为列索引</span><br>                   index = [<span class="hljs-string">&#x27;张三&#x27;</span>,<span class="hljs-string">&#x27;李四&#x27;</span>,<span class="hljs-string">&#x27;Michael&#x27;</span>]) <span class="hljs-comment"># 行索引</span><br>df2 = pd.DataFrame(data = np.random.randint(<span class="hljs-number">0</span>,<span class="hljs-number">151</span>,size = (<span class="hljs-number">5</span>,<span class="hljs-number">3</span>)),<br>                   index = [<span class="hljs-string">&#x27;Danial&#x27;</span>,<span class="hljs-string">&#x27;Brandon&#x27;</span>,<span class="hljs-string">&#x27;softpo&#x27;</span>,<span class="hljs-string">&#x27;Ella&#x27;</span>,<span class="hljs-string">&#x27;Cindy&#x27;</span>],<span class="hljs-comment"># 行索引</span><br>                   columns=[<span class="hljs-string">&#x27;Python&#x27;</span>,<span class="hljs-string">&#x27;Math&#x27;</span>,<span class="hljs-string">&#x27;En&#x27;</span>])<span class="hljs-comment"># 列索引</span><br></code></pre></td></tr></table></figure><h2 id="第三部分-数据查看">第三部分 数据查看</h2><ul><li>查看DataFrame的常用属性和DataFrame的概览和统计信息</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<br><span class="hljs-keyword">import</span> pandas <span class="hljs-keyword">as</span> pd<br><span class="hljs-comment"># 创建 shape(150,3)的二维标签数组结构DataFrame</span><br>df = pd.DataFrame(data = np.random.randint(<span class="hljs-number">0</span>,<span class="hljs-number">151</span>,size = (<span class="hljs-number">150</span>,<span class="hljs-number">3</span>)),<br>                   index = <span class="hljs-literal">None</span>,<span class="hljs-comment"># 行索引默认</span><br>                   columns=[<span class="hljs-string">&#x27;Python&#x27;</span>,<span class="hljs-string">&#x27;Math&#x27;</span>,<span class="hljs-string">&#x27;En&#x27;</span>])<span class="hljs-comment"># 列索引</span><br><span class="hljs-comment"># 查看其属性、概览和统计信息</span><br>df.head(<span class="hljs-number">10</span>) <span class="hljs-comment"># 显示头部10行，默认5个</span><br>df.tail(<span class="hljs-number">10</span>) <span class="hljs-comment"># 显示末尾10行，默认5个</span><br>df.shape <span class="hljs-comment"># 查看形状，行数和列数</span><br>df.dtypes <span class="hljs-comment"># 查看数据类型</span><br>df.index <span class="hljs-comment"># 行索引</span><br>df.columns <span class="hljs-comment"># 列索引</span><br>df.values <span class="hljs-comment"># 对象值，二维ndarray数组</span><br>df.describe() <span class="hljs-comment"># 查看数值型列的汇总统计,计数、平均值、标准差、最小值、四分位数、最大值</span><br>df.info() <span class="hljs-comment"># 查看列索引、数据类型、非空计数和内存信息</span><br></code></pre></td></tr></table></figure><h2 id="第四部分-数据输入与输出">第四部分 数据输入与输出</h2><h3 id="第一节-csv">第一节 csv</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<br><span class="hljs-keyword">import</span> pandas <span class="hljs-keyword">as</span> pd<br>df = DataFrame(data = np.random.randint(<span class="hljs-number">0</span>,<span class="hljs-number">50</span>,size = [<span class="hljs-number">50</span>,<span class="hljs-number">5</span>]), <span class="hljs-comment"># 薪资情况</span><br>               columns=[<span class="hljs-string">&#x27;IT&#x27;</span>,<span class="hljs-string">&#x27;化工&#x27;</span>,<span class="hljs-string">&#x27;生物&#x27;</span>,<span class="hljs-string">&#x27;教师&#x27;</span>,<span class="hljs-string">&#x27;士兵&#x27;</span>])<br><span class="hljs-comment"># 保存到当前路径下，文件命名是：salary.csv。csv逗号分割值文件格式</span><br>df.to_csv(<span class="hljs-string">&#x27;./salary.csv&#x27;</span>,<br>          sep = <span class="hljs-string">&#x27;;&#x27;</span>, <span class="hljs-comment"># 文本分隔符，默认是逗号</span><br>          header = <span class="hljs-literal">True</span>,<span class="hljs-comment"># 是否保存列索引</span><br>          index = <span class="hljs-literal">True</span>) <span class="hljs-comment"># 是否保存行索引，保存行索引，文件被加载时，默认行索引会作为一列</span><br><span class="hljs-comment"># 加载</span><br>pd.read_csv(<span class="hljs-string">&#x27;./salary.csv&#x27;</span>,<br>            sep = <span class="hljs-string">&#x27;;&#x27;</span>,<span class="hljs-comment"># 默认是逗号</span><br>            header = [<span class="hljs-number">0</span>],<span class="hljs-comment">#指定列索引</span><br>            index_col=<span class="hljs-number">0</span>) <span class="hljs-comment"># 指定行索引</span><br>pd.read_table(<span class="hljs-string">&#x27;./salary.csv&#x27;</span>, <span class="hljs-comment"># 和read_csv类似，读取限定分隔符的文本文件</span><br>            sep = <span class="hljs-string">&#x27;;&#x27;</span>,<br>            header = [<span class="hljs-number">0</span>],<span class="hljs-comment">#指定列索引</span><br>            index_col=<span class="hljs-number">1</span>) <span class="hljs-comment"># 指定行索引,IT作为行索引</span><br></code></pre></td></tr></table></figure><h3 id="第二节-Excel">第二节 Excel</h3><p>pip install xlrd -i <a href="https://pypi.tuna.tsinghua.edu.cn/simple">https://pypi.tuna.tsinghua.edu.cn/simple</a></p><p>pip install xlwt -i <a href="https://pypi.tuna.tsinghua.edu.cn/simple">https://pypi.tuna.tsinghua.edu.cn/simple</a></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<br><span class="hljs-keyword">import</span> pandas <span class="hljs-keyword">as</span> pd<br>df1 = pd.DataFrame(data = np.random.randint(<span class="hljs-number">0</span>,<span class="hljs-number">50</span>,size = [<span class="hljs-number">50</span>,<span class="hljs-number">5</span>]), <span class="hljs-comment"># 薪资情况</span><br>               columns=[<span class="hljs-string">&#x27;IT&#x27;</span>,<span class="hljs-string">&#x27;化工&#x27;</span>,<span class="hljs-string">&#x27;生物&#x27;</span>,<span class="hljs-string">&#x27;教师&#x27;</span>,<span class="hljs-string">&#x27;士兵&#x27;</span>])<br>df2 = pd.DataFrame(data = np.random.randint(<span class="hljs-number">0</span>,<span class="hljs-number">50</span>,size = [<span class="hljs-number">150</span>,<span class="hljs-number">3</span>]),<span class="hljs-comment"># 计算机科目的考试成绩</span><br>                   columns=[<span class="hljs-string">&#x27;Python&#x27;</span>,<span class="hljs-string">&#x27;Tensorflow&#x27;</span>,<span class="hljs-string">&#x27;Keras&#x27;</span>])<br><span class="hljs-comment"># 保存到当前路径下，文件命名是：salary.xls</span><br>df1.to_excel(<span class="hljs-string">&#x27;./salary.xls&#x27;</span>,<br>            sheet_name = <span class="hljs-string">&#x27;salary&#x27;</span>,<span class="hljs-comment"># Excel中工作表的名字</span><br>            header = <span class="hljs-literal">True</span>,<span class="hljs-comment"># 是否保存列索引</span><br>            index = <span class="hljs-literal">False</span>) <span class="hljs-comment"># 是否保存行索引，保存行索引</span><br>pd.read_excel(<span class="hljs-string">&#x27;./salary.xls&#x27;</span>,<br>              sheet_name=<span class="hljs-number">0</span>,<span class="hljs-comment"># 读取哪一个Excel中工作表，默认第一个</span><br>              header = <span class="hljs-number">0</span>,<span class="hljs-comment"># 使用第一行数据作为列索引</span><br>              names = <span class="hljs-built_in">list</span>(<span class="hljs-string">&#x27;ABCDE&#x27;</span>),<span class="hljs-comment"># 替换行索引</span><br>              index_col=<span class="hljs-number">1</span>)<span class="hljs-comment"># 指定行索引，B作为行索引</span><br><span class="hljs-comment"># 一个Excel文件中保存多个工作表</span><br><span class="hljs-keyword">with</span> pd.ExcelWriter(<span class="hljs-string">&#x27;./data.xlsx&#x27;</span>) <span class="hljs-keyword">as</span> writer:<br>    df1.to_excel(writer,sheet_name=<span class="hljs-string">&#x27;salary&#x27;</span>,index = <span class="hljs-literal">False</span>)<br>    df2.to_excel(writer,sheet_name=<span class="hljs-string">&#x27;score&#x27;</span>,index = <span class="hljs-literal">False</span>)<br>pd.read_excel(<span class="hljs-string">&#x27;./data.xlsx&#x27;</span>,<br>              sheet_name=<span class="hljs-string">&#x27;salary&#x27;</span>) <span class="hljs-comment"># 读取Excel中指定名字的工作表 </span><br></code></pre></td></tr></table></figure><h3 id="第三节-SQL">第三节 SQL</h3><p>pip install sqlalchemy -i <a href="https://pypi.tuna.tsinghua.edu.cn/simple">https://pypi.tuna.tsinghua.edu.cn/simple</a></p><p>pip install pymysql -i <a href="https://pypi.tuna.tsinghua.edu.cn/simple">https://pypi.tuna.tsinghua.edu.cn/simple</a></p><p><a href="https://docs.sqlalchemy.org/en/13/core/engines.html">数据库引擎配置</a></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> pandas <span class="hljs-keyword">as</span> pd<br><span class="hljs-comment"># SQLAlchemy是Python编程语言下的一款开源软件。提供了SQL工具包及对象关系映射（ORM）工具</span><br><span class="hljs-keyword">from</span> sqlalchemy <span class="hljs-keyword">import</span> create_engine<br>df = pd.DataFrame(data = np.random.randint(<span class="hljs-number">0</span>,<span class="hljs-number">50</span>,size = [<span class="hljs-number">150</span>,<span class="hljs-number">3</span>]),<span class="hljs-comment"># 计算机科目的考试成绩</span><br>                   columns=[<span class="hljs-string">&#x27;Python&#x27;</span>,<span class="hljs-string">&#x27;Tensorflow&#x27;</span>,<span class="hljs-string">&#x27;Keras&#x27;</span>])<br><span class="hljs-comment"># 数据库连接</span><br>conn = create_engine(<span class="hljs-string">&#x27;mysql+pymysql://root:12345678@localhost/pandas?charset=UTF8MB4&#x27;</span>)<br><span class="hljs-comment"># 保存到数据库</span><br>df.to_sql(<span class="hljs-string">&#x27;score&#x27;</span>,<span class="hljs-comment">#数据库中表名</span><br>          conn,<span class="hljs-comment"># 数据库连接</span><br>          if_exists=<span class="hljs-string">&#x27;append&#x27;</span>)<span class="hljs-comment">#如果表名存在，追加数据</span><br><span class="hljs-comment"># 从数据库中加载</span><br>pd.read_sql(<span class="hljs-string">&#x27;select * from score limit 10&#x27;</span>, <span class="hljs-comment"># sql查询语句</span><br>            conn, <span class="hljs-comment"># 数据库连接</span><br>            index_col=<span class="hljs-string">&#x27;Python&#x27;</span>) <span class="hljs-comment"># 指定行索引名</span><br></code></pre></td></tr></table></figure><h3 id="第四节-HDF5">第四节 HDF5</h3><p>pip install tables -i <a href="https://pypi.tuna.tsinghua.edu.cn/simple">https://pypi.tuna.tsinghua.edu.cn/simple</a></p><p>HDF5是一个独特的技术套件，可以管理非常大和复杂的数据收集。</p><p>HDF5，可以存储不同类型数据的文件格式，后缀通常是.h5，它的结构是<strong>层次性</strong>的。</p><p>一个HDF5文件可以被看作是一个组包含了各类不同的<strong>数据集</strong>。</p><p>对于HDF5文件中的数据存储，有两个核心概念：group 和 dataset</p><p>dataset 代表数据集，一个文件当中可以存放不同种类的数据集，这些数据集如何管理，就用到了group</p><p>最直观的理解，可以参考我们的文件管理系统，不同的文件位于不同的目录下。</p><p>目录就是HDF5中的group, 描述了数据集dataset的分类信息，通过group 有效的将多种dataset 进行管理和区分；文件就是HDF5中的dataset, 表示的是具体的数据。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<br><span class="hljs-keyword">import</span> pandas <span class="hljs-keyword">as</span> pd<br>df1 = pd.DataFrame(data = np.random.randint(<span class="hljs-number">0</span>,<span class="hljs-number">50</span>,size = [<span class="hljs-number">50</span>,<span class="hljs-number">5</span>]), <span class="hljs-comment"># 薪资情况</span><br>               columns=[<span class="hljs-string">&#x27;IT&#x27;</span>,<span class="hljs-string">&#x27;化工&#x27;</span>,<span class="hljs-string">&#x27;生物&#x27;</span>,<span class="hljs-string">&#x27;教师&#x27;</span>,<span class="hljs-string">&#x27;士兵&#x27;</span>])<br>df2 = pd.DataFrame(data = np.random.randint(<span class="hljs-number">0</span>,<span class="hljs-number">50</span>,size = [<span class="hljs-number">150</span>,<span class="hljs-number">3</span>]),<span class="hljs-comment"># 计算机科目的考试成绩</span><br>                   columns=[<span class="hljs-string">&#x27;Python&#x27;</span>,<span class="hljs-string">&#x27;Tensorflow&#x27;</span>,<span class="hljs-string">&#x27;Keras&#x27;</span>])<br><span class="hljs-comment"># 保存到当前路径下，文件命名是：data.h5</span><br>df1.to_hdf(<span class="hljs-string">&#x27;./data.h5&#x27;</span>,key=<span class="hljs-string">&#x27;salary&#x27;</span>) <span class="hljs-comment"># 保存数据的key，标记</span><br>df2.to_hdf(<span class="hljs-string">&#x27;./data.h5&#x27;</span>,key = <span class="hljs-string">&#x27;score&#x27;</span>)<br><br>pd.read_hdf(<span class="hljs-string">&#x27;./data.h5&#x27;</span>,<br>            key = <span class="hljs-string">&#x27;salary&#x27;</span>)<span class="hljs-comment">#获取指定的标记、key的数据</span><br></code></pre></td></tr></table></figure><h2 id="第五部分-数据选取">第五部分 数据选取</h2><h3 id="第一节-字段数据">第一节 字段数据</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> pandas <span class="hljs-keyword">as</span> pd<br><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<br>df = pd.DataFrame(data = np.random.randint(<span class="hljs-number">0</span>,<span class="hljs-number">150</span>,size = [<span class="hljs-number">150</span>,<span class="hljs-number">3</span>]),<span class="hljs-comment"># 计算机科目的考试成绩</span><br>                   columns=[<span class="hljs-string">&#x27;Python&#x27;</span>,<span class="hljs-string">&#x27;Tensorflow&#x27;</span>,<span class="hljs-string">&#x27;Keras&#x27;</span>])<br>df[<span class="hljs-string">&#x27;Python&#x27;</span>] <span class="hljs-comment"># 获取单列，Series</span><br>df.Python <span class="hljs-comment"># 获取单列，Series</span><br>df[[<span class="hljs-string">&#x27;Python&#x27;</span>,<span class="hljs-string">&#x27;Keras&#x27;</span>]] <span class="hljs-comment"># 获取多列，DataFrame</span><br>df[<span class="hljs-number">3</span>:<span class="hljs-number">15</span>] <span class="hljs-comment"># 行切片</span><br></code></pre></td></tr></table></figure><h3 id="第二节-标签选择">第二节 标签选择</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> pandas <span class="hljs-keyword">as</span> pd<br><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<br>df = pd.DataFrame(data = np.random.randint(<span class="hljs-number">0</span>,<span class="hljs-number">150</span>,size = [<span class="hljs-number">10</span>,<span class="hljs-number">3</span>]),<span class="hljs-comment"># 计算机科目的考试成绩</span><br>                  index = <span class="hljs-built_in">list</span>(<span class="hljs-string">&#x27;ABCDEFGHIJ&#x27;</span>),<span class="hljs-comment"># 行标签</span><br>                  columns=[<span class="hljs-string">&#x27;Python&#x27;</span>,<span class="hljs-string">&#x27;Tensorflow&#x27;</span>,<span class="hljs-string">&#x27;Keras&#x27;</span>])<br>df.loc[[<span class="hljs-string">&#x27;A&#x27;</span>,<span class="hljs-string">&#x27;C&#x27;</span>,<span class="hljs-string">&#x27;D&#x27;</span>,<span class="hljs-string">&#x27;F&#x27;</span>]] <span class="hljs-comment"># 选取指定行标签数据。</span><br>df.loc[<span class="hljs-string">&#x27;A&#x27;</span>:<span class="hljs-string">&#x27;E&#x27;</span>,[<span class="hljs-string">&#x27;Python&#x27;</span>,<span class="hljs-string">&#x27;Keras&#x27;</span>]] <span class="hljs-comment"># 根据行标签切片，选取指定列标签的数据</span><br>df.loc[:,[<span class="hljs-string">&#x27;Keras&#x27;</span>,<span class="hljs-string">&#x27;Tensorflow&#x27;</span>]] <span class="hljs-comment"># :默认保留所有行</span><br>df.loc[<span class="hljs-string">&#x27;E&#x27;</span>::<span class="hljs-number">2</span>,<span class="hljs-string">&#x27;Python&#x27;</span>:<span class="hljs-string">&#x27;Tensorflow&#x27;</span>] <span class="hljs-comment"># 行切片从标签E开始每2个中取一个，列标签进行切片</span><br>df.loc[<span class="hljs-string">&#x27;A&#x27;</span>,<span class="hljs-string">&#x27;Python&#x27;</span>] <span class="hljs-comment"># 选取标量值</span><br></code></pre></td></tr></table></figure><h3 id="第三节-位置选择">第三节 位置选择</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> pandas <span class="hljs-keyword">as</span> pd<br><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<br>df = pd.DataFrame(data = np.random.randint(<span class="hljs-number">0</span>,<span class="hljs-number">150</span>,size = [<span class="hljs-number">10</span>,<span class="hljs-number">3</span>]),<span class="hljs-comment"># 计算机科目的考试成绩</span><br>                  index = <span class="hljs-built_in">list</span>(<span class="hljs-string">&#x27;ABCDEFGHIJ&#x27;</span>),<span class="hljs-comment"># 行标签</span><br>                  columns=[<span class="hljs-string">&#x27;Python&#x27;</span>,<span class="hljs-string">&#x27;Tensorflow&#x27;</span>,<span class="hljs-string">&#x27;Keras&#x27;</span>])<br>df.iloc[<span class="hljs-number">4</span>] <span class="hljs-comment"># 用整数位置选择。</span><br>df.iloc[<span class="hljs-number">2</span>:<span class="hljs-number">8</span>,<span class="hljs-number">0</span>:<span class="hljs-number">2</span>] <span class="hljs-comment"># 用整数切片，类似NumPy</span><br>df.iloc[[<span class="hljs-number">1</span>,<span class="hljs-number">3</span>,<span class="hljs-number">5</span>],[<span class="hljs-number">0</span>,<span class="hljs-number">2</span>,<span class="hljs-number">1</span>]] <span class="hljs-comment"># 整数列表按位置切片</span><br>df.iloc[<span class="hljs-number">1</span>:<span class="hljs-number">3</span>,:] <span class="hljs-comment"># 行切片</span><br>df.iloc[:,:<span class="hljs-number">2</span>] <span class="hljs-comment"># 列切片</span><br>df.iloc[<span class="hljs-number">0</span>,<span class="hljs-number">2</span>] <span class="hljs-comment"># 选取标量值</span><br></code></pre></td></tr></table></figure><h3 id="第四节-boolean索引">第四节 boolean索引</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> pandas <span class="hljs-keyword">as</span> pd<br><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<br>df = pd.DataFrame(data = np.random.randint(<span class="hljs-number">0</span>,<span class="hljs-number">150</span>,size = [<span class="hljs-number">10</span>,<span class="hljs-number">3</span>]),<span class="hljs-comment"># 计算机科目的考试成绩</span><br>                  index = <span class="hljs-built_in">list</span>(<span class="hljs-string">&#x27;ABCDEFGHIJ&#x27;</span>),<span class="hljs-comment"># 行标签，用户</span><br>                  columns=[<span class="hljs-string">&#x27;Python&#x27;</span>,<span class="hljs-string">&#x27;Tensorflow&#x27;</span>,<span class="hljs-string">&#x27;Keras&#x27;</span>]) <span class="hljs-comment"># 考试科目</span><br>cond1 = df.Python &gt; <span class="hljs-number">100</span> <span class="hljs-comment">#  判断Python分数是否大于100，返回值是boolean类型的Series</span><br>df[cond1] <span class="hljs-comment"># 返回Python分数大于100分的用户所有考试科目数据</span><br>cond2 = (df.Python &gt; <span class="hljs-number">50</span>) &amp; (df[<span class="hljs-string">&#x27;Keras&#x27;</span>] &gt; <span class="hljs-number">50</span>) <span class="hljs-comment"># &amp;与运算</span><br>df[cond2] <span class="hljs-comment"># 返回Python和Keras同时大于50分的用户的所有考试科目数据</span><br>df[df &gt; <span class="hljs-number">50</span>]<span class="hljs-comment"># 选择DataFrame中满足条件的值，如果满足返回值，不然返回空数据NaN</span><br>df[df.index.isin([<span class="hljs-string">&#x27;A&#x27;</span>,<span class="hljs-string">&#x27;C&#x27;</span>,<span class="hljs-string">&#x27;F&#x27;</span>])] <span class="hljs-comment"># isin判断是否在数组中，返回也是boolean类型值</span><br></code></pre></td></tr></table></figure><h3 id="第五节-赋值操作">第五节 赋值操作</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> pandas <span class="hljs-keyword">as</span> pd<br><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<br>df = pd.DataFrame(data = np.random.randint(<span class="hljs-number">0</span>,<span class="hljs-number">150</span>,size = [<span class="hljs-number">10</span>,<span class="hljs-number">3</span>]),<span class="hljs-comment"># 计算机科目的考试成绩</span><br>                  index = <span class="hljs-built_in">list</span>(<span class="hljs-string">&#x27;ABCDEFGHIJ&#x27;</span>),<span class="hljs-comment"># 行标签，用户</span><br>                  columns=[<span class="hljs-string">&#x27;Python&#x27;</span>,<span class="hljs-string">&#x27;Tensorflow&#x27;</span>,<span class="hljs-string">&#x27;Keras&#x27;</span>]) <span class="hljs-comment"># 考试科目</span><br>s = pd.Series(data = np.random.randint(<span class="hljs-number">0</span>,<span class="hljs-number">150</span>,size = <span class="hljs-number">9</span>),index=<span class="hljs-built_in">list</span>(<span class="hljs-string">&#x27;BCDEFGHIJ&#x27;</span>),name = <span class="hljs-string">&#x27;PyTorch&#x27;</span>)<br>df[<span class="hljs-string">&#x27;PyTorch&#x27;</span>] = s <span class="hljs-comment"># 增加一列，DataFrame行索引自动对齐</span><br>df.loc[<span class="hljs-string">&#x27;A&#x27;</span>,<span class="hljs-string">&#x27;Python&#x27;</span>] = <span class="hljs-number">256</span> <span class="hljs-comment"># 按标签赋值</span><br>df.iloc[<span class="hljs-number">3</span>,<span class="hljs-number">2</span>] = <span class="hljs-number">512</span> <span class="hljs-comment"># 按位置赋值</span><br>df.loc[:,<span class="hljs-string">&#x27;Python&#x27;</span>] = np.array([<span class="hljs-number">128</span>]*<span class="hljs-number">10</span>) <span class="hljs-comment"># 按NumPy数组进行赋值</span><br>df[df &gt;= <span class="hljs-number">128</span>] = -df <span class="hljs-comment"># 按照where条件进行赋值，大于等于128变成原来的负数，否则不变</span><br>df<br></code></pre></td></tr></table></figure><h2 id="第六部分-数据集成">第六部分 数据集成</h2><p>pandas 提供了多种将 Series、DataFrame 对象组合在一起的功能</p><h3 id="第一节-concat数据串联">第一节 concat数据串联</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> pandas <span class="hljs-keyword">as</span> pd<br><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<br>df1 = pd.DataFrame(data = np.random.randint(<span class="hljs-number">0</span>,<span class="hljs-number">150</span>,size = [<span class="hljs-number">10</span>,<span class="hljs-number">3</span>]),<span class="hljs-comment"># 计算机科目的考试成绩</span><br>                  index = <span class="hljs-built_in">list</span>(<span class="hljs-string">&#x27;ABCDEFGHIJ&#x27;</span>),<span class="hljs-comment"># 行标签，用户</span><br>                  columns=[<span class="hljs-string">&#x27;Python&#x27;</span>,<span class="hljs-string">&#x27;Tensorflow&#x27;</span>,<span class="hljs-string">&#x27;Keras&#x27;</span>]) <span class="hljs-comment"># 考试科目</span><br>df2 = pd.DataFrame(data = np.random.randint(<span class="hljs-number">0</span>,<span class="hljs-number">150</span>,size = [<span class="hljs-number">10</span>,<span class="hljs-number">3</span>]),<span class="hljs-comment"># 计算机科目的考试成绩</span><br>                  index = <span class="hljs-built_in">list</span>(<span class="hljs-string">&#x27;KLMNOPQRST&#x27;</span>),<span class="hljs-comment"># 行标签，用户</span><br>                  columns=[<span class="hljs-string">&#x27;Python&#x27;</span>,<span class="hljs-string">&#x27;Tensorflow&#x27;</span>,<span class="hljs-string">&#x27;Keras&#x27;</span>]) <span class="hljs-comment"># 考试科目</span><br>df3 = pd.DataFrame(data = np.random.randint(<span class="hljs-number">0</span>,<span class="hljs-number">150</span>,size = (<span class="hljs-number">10</span>,<span class="hljs-number">2</span>)),<br>                  index = <span class="hljs-built_in">list</span>(<span class="hljs-string">&#x27;ABCDEFGHIJ&#x27;</span>),<br>                  columns=[<span class="hljs-string">&#x27;PyTorch&#x27;</span>,<span class="hljs-string">&#x27;Paddle&#x27;</span>])<br>pd.concat([df1,df2],axis = <span class="hljs-number">0</span>) <span class="hljs-comment"># df1和df2行串联，df2的行追加df2行后面</span><br>df1.append(df2) <span class="hljs-comment"># 在df1后面追加df2</span><br>pd.concat([df1,df3],axis = <span class="hljs-number">1</span>) <span class="hljs-comment"># df1和df2列串联，df2的列追加到df1列后面</span><br></code></pre></td></tr></table></figure><h3 id="第二节-插入">第二节 插入</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<br><span class="hljs-keyword">import</span> pandas <span class="hljs-keyword">as</span> pd<br>df = pd.DataFrame(data = np.random.randint(<span class="hljs-number">0</span>,<span class="hljs-number">151</span>,size = (<span class="hljs-number">10</span>,<span class="hljs-number">3</span>)),<br>                  index = <span class="hljs-built_in">list</span>(<span class="hljs-string">&#x27;ABCDEFGHIJ&#x27;</span>),<br>                  columns = [<span class="hljs-string">&#x27;Python&#x27;</span>,<span class="hljs-string">&#x27;Keras&#x27;</span>,<span class="hljs-string">&#x27;Tensorflow&#x27;</span>])<br>df.insert(loc = <span class="hljs-number">1</span>,column=<span class="hljs-string">&#x27;Pytorch&#x27;</span>,value=<span class="hljs-number">1024</span>) <span class="hljs-comment"># 插入列</span><br>df<br><span class="hljs-comment"># 对行的操作，使用追加append，默认在最后面，无法指定位置</span><br><span class="hljs-comment"># 如果想要在指定位置插入行：切割-添加-合并</span><br></code></pre></td></tr></table></figure><h3 id="第三节-Join-SQL风格合并">第三节 Join SQL风格合并</h3><p>数据集的合并（merge）或连接（join）运算是通过一个或者多个键将数据链接起来的。这些运算是关系型数据库的核心操作。pandas的merge函数是数据集进行join运算的主要切入点。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> pandas <span class="hljs-keyword">as</span> pd<br><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<br><span class="hljs-comment"># 表一中记录的是name和体重信息</span><br>df1 = pd.DataFrame(data = &#123;<span class="hljs-string">&#x27;name&#x27;</span>:[<span class="hljs-string">&#x27;softpo&#x27;</span>,<span class="hljs-string">&#x27;Daniel&#x27;</span>,<span class="hljs-string">&#x27;Brandon&#x27;</span>,<span class="hljs-string">&#x27;Ella&#x27;</span>],<span class="hljs-string">&#x27;weight&#x27;</span>:[<span class="hljs-number">70</span>,<span class="hljs-number">55</span>,<span class="hljs-number">75</span>,<span class="hljs-number">65</span>]&#125;)<br><span class="hljs-comment"># 表二中记录的是name和身高信息</span><br>df2 = pd.DataFrame(data = &#123;<span class="hljs-string">&#x27;name&#x27;</span>:[<span class="hljs-string">&#x27;softpo&#x27;</span>,<span class="hljs-string">&#x27;Daniel&#x27;</span>,<span class="hljs-string">&#x27;Brandon&#x27;</span>,<span class="hljs-string">&#x27;Cindy&#x27;</span>],<span class="hljs-string">&#x27;height&#x27;</span>:[<span class="hljs-number">172</span>,<span class="hljs-number">170</span>,<span class="hljs-number">170</span>,<span class="hljs-number">166</span>]&#125;)<br>df3 = pd.DataFrame(data = &#123;<span class="hljs-string">&#x27;名字&#x27;</span>:[<span class="hljs-string">&#x27;softpo&#x27;</span>,<span class="hljs-string">&#x27;Daniel&#x27;</span>,<span class="hljs-string">&#x27;Brandon&#x27;</span>,<span class="hljs-string">&#x27;Cindy&#x27;</span>],<span class="hljs-string">&#x27;height&#x27;</span>:[<span class="hljs-number">172</span>,<span class="hljs-number">170</span>,<span class="hljs-number">170</span>,<span class="hljs-number">166</span>]&#125;)<br><span class="hljs-comment"># 根据共同的name将俩表的数据，进行合并</span><br>pd.merge(df1,df2,<br>         how = <span class="hljs-string">&#x27;inner&#x27;</span>,<span class="hljs-comment"># 内合并代表两对象交集</span><br>         on = <span class="hljs-string">&#x27;name&#x27;</span>)<br>pd.merge(df1,df3,<br>         how = <span class="hljs-string">&#x27;outer&#x27;</span>,<span class="hljs-comment"># 全外连接，两对象并集</span><br>         left_on = <span class="hljs-string">&#x27;name&#x27;</span>,<span class="hljs-comment"># 左边DataFrame使用列标签 name进行合并</span><br>         right_on = <span class="hljs-string">&#x27;名字&#x27;</span>)<span class="hljs-comment"># 右边DataFrame使用列标签 名字进行合并</span><br><span class="hljs-comment"># 创建10名学生的考试成绩</span><br>df4 = pd.DataFrame(data = np.random.randint(<span class="hljs-number">0</span>,<span class="hljs-number">151</span>,size = (<span class="hljs-number">10</span>,<span class="hljs-number">3</span>)),<br>                   index = <span class="hljs-built_in">list</span>(<span class="hljs-string">&#x27;ABCDEFHIJK&#x27;</span>),<br>                   columns=[<span class="hljs-string">&#x27;Python&#x27;</span>,<span class="hljs-string">&#x27;Keras&#x27;</span>,<span class="hljs-string">&#x27;Tensorflow&#x27;</span>])<br><span class="hljs-comment"># 计算每位学生各科平均分，转换成DataFrame</span><br>score_mean = pd.DataFrame(df4.mean(axis = <span class="hljs-number">1</span>).<span class="hljs-built_in">round</span>(<span class="hljs-number">1</span>),columns=[<span class="hljs-string">&#x27;平均分&#x27;</span>])<br><span class="hljs-comment"># 将平均分和df3使用merge进行合并，它俩有共同的行索引</span><br>pd.merge(left = df4,right = score_mean,<br>         left_index=<span class="hljs-literal">True</span>,<span class="hljs-comment"># 左边DataFrame使用行索引进行合并</span><br>         right_index=<span class="hljs-literal">True</span>)<span class="hljs-comment"># 右边的DataFrame使用行索引进行合并</span><br></code></pre></td></tr></table></figure><h2 id="第七部分-数据清洗">第七部分 数据清洗</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<br><span class="hljs-keyword">import</span> pandas <span class="hljs-keyword">as</span> pd<br>df = pd.DataFrame(data = &#123;<span class="hljs-string">&#x27;color&#x27;</span>:[<span class="hljs-string">&#x27;red&#x27;</span>,<span class="hljs-string">&#x27;blue&#x27;</span>,<span class="hljs-string">&#x27;red&#x27;</span>,<span class="hljs-string">&#x27;green&#x27;</span>,<span class="hljs-string">&#x27;blue&#x27;</span>,<span class="hljs-literal">None</span>,<span class="hljs-string">&#x27;red&#x27;</span>],<br>                          <span class="hljs-string">&#x27;price&#x27;</span>:[<span class="hljs-number">10</span>,<span class="hljs-number">20</span>,<span class="hljs-number">10</span>,<span class="hljs-number">15</span>,<span class="hljs-number">20</span>,<span class="hljs-number">0</span>,np.NaN]&#125;)<br><span class="hljs-comment"># 1、重复数据过滤</span><br>df.duplicated() <span class="hljs-comment"># 判断是否存在重复数据</span><br>df.drop_duplicates() <span class="hljs-comment"># 删除重复数据</span><br><br><span class="hljs-comment"># 2、空数据过滤</span><br>df.isnull() <span class="hljs-comment"># 判断是否存在空数据，存在返回True，否则返回False</span><br>df.dropna(how = <span class="hljs-string">&#x27;any&#x27;</span>) <span class="hljs-comment"># 删除空数据</span><br>df.fillna(value=<span class="hljs-number">1111</span>) <span class="hljs-comment"># 填充空数据</span><br><br><span class="hljs-comment"># 3、指定行或者列过滤</span><br><span class="hljs-keyword">del</span> df[<span class="hljs-string">&#x27;color&#x27;</span>] <span class="hljs-comment"># 直接删除某列</span><br>df.drop(labels = [<span class="hljs-string">&#x27;price&#x27;</span>],axis = <span class="hljs-number">1</span>)<span class="hljs-comment"># 删除指定列</span><br>df.drop(labels = [<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">5</span>],axis = <span class="hljs-number">0</span>) <span class="hljs-comment"># 删除指定行</span><br><br><span class="hljs-comment"># 4、函数filter使用</span><br>df = pd.DataFrame(np.array(([<span class="hljs-number">3</span>,<span class="hljs-number">7</span>,<span class="hljs-number">1</span>], [<span class="hljs-number">2</span>, <span class="hljs-number">8</span>, <span class="hljs-number">256</span>])),<br>                  index=[<span class="hljs-string">&#x27;dog&#x27;</span>, <span class="hljs-string">&#x27;cat&#x27;</span>],<br>                  columns=[<span class="hljs-string">&#x27;China&#x27;</span>, <span class="hljs-string">&#x27;America&#x27;</span>, <span class="hljs-string">&#x27;France&#x27;</span>])<br>df.<span class="hljs-built_in">filter</span>(items=[<span class="hljs-string">&#x27;China&#x27;</span>, <span class="hljs-string">&#x27;France&#x27;</span>])<br><span class="hljs-comment"># 根据正则表达式删选列标签</span><br>df.<span class="hljs-built_in">filter</span>(regex=<span class="hljs-string">&#x27;a$&#x27;</span>, axis=<span class="hljs-number">1</span>)<br><span class="hljs-comment"># 选择行中包含og</span><br>df.<span class="hljs-built_in">filter</span>(like=<span class="hljs-string">&#x27;og&#x27;</span>, axis=<span class="hljs-number">0</span>)<br><br><span class="hljs-comment"># 5、异常值过滤</span><br>df2 = pd.DataFrame(data = np.random.randn(<span class="hljs-number">10000</span>,<span class="hljs-number">3</span>)) <span class="hljs-comment"># 正态分布数据</span><br><span class="hljs-comment"># 3σ过滤异常值，σ即是标准差</span><br>cond = (df2 &gt; <span class="hljs-number">3</span>*df2.std()).<span class="hljs-built_in">any</span>(axis = <span class="hljs-number">1</span>)<br>index = df2[cond].index <span class="hljs-comment"># 不满足条件的行索引</span><br>df2.drop(labels=index,axis = <span class="hljs-number">0</span>) <span class="hljs-comment"># 根据行索引，进行数据删除</span><br></code></pre></td></tr></table></figure><h2 id="第八部分-数据转换">第八部分 数据转换</h2><h3 id="第一节-轴和元素替换">第一节 轴和元素替换</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<br><span class="hljs-keyword">import</span> pandas <span class="hljs-keyword">as</span> pd<br>df = pd.DataFrame(data = np.random.randint(<span class="hljs-number">0</span>,<span class="hljs-number">10</span>,size = (<span class="hljs-number">10</span>,<span class="hljs-number">3</span>)),<br>                  index = <span class="hljs-built_in">list</span>(<span class="hljs-string">&#x27;ABCDEFHIJK&#x27;</span>),<br>                  columns=[<span class="hljs-string">&#x27;Python&#x27;</span>,<span class="hljs-string">&#x27;Tensorflow&#x27;</span>,<span class="hljs-string">&#x27;Keras&#x27;</span>])<br>df.iloc[<span class="hljs-number">4</span>,<span class="hljs-number">2</span>] = <span class="hljs-literal">None</span> <span class="hljs-comment"># 空数据</span><br><span class="hljs-comment">#1、重命名轴索引</span><br>df.rename(index = &#123;<span class="hljs-string">&#x27;A&#x27;</span>:<span class="hljs-string">&#x27;AA&#x27;</span>,<span class="hljs-string">&#x27;B&#x27;</span>:<span class="hljs-string">&#x27;BB&#x27;</span>&#125;,columns = &#123;<span class="hljs-string">&#x27;Python&#x27;</span>:<span class="hljs-string">&#x27;人工智能&#x27;</span>&#125;) <br><br><span class="hljs-comment"># 2、替换值</span><br>df.replace(<span class="hljs-number">3</span>,<span class="hljs-number">1024</span>) <span class="hljs-comment">#将3替换为1024</span><br>df.replace([<span class="hljs-number">0</span>,<span class="hljs-number">7</span>],<span class="hljs-number">2048</span>) <span class="hljs-comment"># 将0和7替换为2048</span><br>df.replace(&#123;<span class="hljs-number">0</span>:<span class="hljs-number">512</span>,np.nan:<span class="hljs-number">998</span>&#125;) <span class="hljs-comment"># 根据字典键值对进行替换</span><br>df.replace(&#123;<span class="hljs-string">&#x27;Python&#x27;</span>:<span class="hljs-number">2</span>&#125;,-<span class="hljs-number">1024</span>) <span class="hljs-comment"># 将Python这一列中等于2的，替换为-1024</span><br></code></pre></td></tr></table></figure><h3 id="第二节-map-Series元素改变">第二节 map Series元素改变</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<br><span class="hljs-keyword">import</span> pandas <span class="hljs-keyword">as</span> pd<br>df = pd.DataFrame(data = np.random.randint(<span class="hljs-number">0</span>,<span class="hljs-number">10</span>,size = (<span class="hljs-number">10</span>,<span class="hljs-number">3</span>)),<br>                  index = <span class="hljs-built_in">list</span>(<span class="hljs-string">&#x27;ABCDEFHIJK&#x27;</span>),<br>                  columns=[<span class="hljs-string">&#x27;Python&#x27;</span>,<span class="hljs-string">&#x27;Tensorflow&#x27;</span>,<span class="hljs-string">&#x27;Keras&#x27;</span>])<br>df.iloc[<span class="hljs-number">4</span>,<span class="hljs-number">2</span>] = <span class="hljs-literal">None</span> <span class="hljs-comment"># 空数据</span><br><br><span class="hljs-comment"># 1、map批量元素改变，Series专有</span><br>df[<span class="hljs-string">&#x27;Keras&#x27;</span>].<span class="hljs-built_in">map</span>(&#123;<span class="hljs-number">1</span>:<span class="hljs-string">&#x27;Hello&#x27;</span>,<span class="hljs-number">5</span>:<span class="hljs-string">&#x27;World&#x27;</span>,<span class="hljs-number">7</span>:<span class="hljs-string">&#x27;AI&#x27;</span>&#125;) <span class="hljs-comment"># 字典映射</span><br>df[<span class="hljs-string">&#x27;Python&#x27;</span>].<span class="hljs-built_in">map</span>(<span class="hljs-keyword">lambda</span> x:<span class="hljs-literal">True</span> <span class="hljs-keyword">if</span> x &gt;=<span class="hljs-number">5</span> <span class="hljs-keyword">else</span> <span class="hljs-literal">False</span>) <span class="hljs-comment"># 隐式函数映射</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">convert</span>(<span class="hljs-params">x</span>): <span class="hljs-comment"># 显示函数映射</span><br>    <span class="hljs-keyword">if</span> x%<span class="hljs-number">3</span> == <span class="hljs-number">0</span>:<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">True</span><br>    <span class="hljs-keyword">elif</span> x%<span class="hljs-number">3</span> == <span class="hljs-number">1</span>:<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">False</span><br>df[<span class="hljs-string">&#x27;Tensorflow&#x27;</span>].<span class="hljs-built_in">map</span>(convert)<br></code></pre></td></tr></table></figure><h3 id="第三节-apply元素改变。既支持-Series，也支持-DataFrame">第三节 apply元素改变。既支持 Series，也支持 DataFrame</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<br><span class="hljs-keyword">import</span> pandas <span class="hljs-keyword">as</span> pd<br>df = pd.DataFrame(data = np.random.randint(<span class="hljs-number">0</span>,<span class="hljs-number">10</span>,size = (<span class="hljs-number">10</span>,<span class="hljs-number">3</span>)),<br>                  index = <span class="hljs-built_in">list</span>(<span class="hljs-string">&#x27;ABCDEFHIJK&#x27;</span>),<br>                  columns=[<span class="hljs-string">&#x27;Python&#x27;</span>,<span class="hljs-string">&#x27;Tensorflow&#x27;</span>,<span class="hljs-string">&#x27;Keras&#x27;</span>])<br>df.iloc[<span class="hljs-number">4</span>,<span class="hljs-number">2</span>] = <span class="hljs-literal">None</span> <span class="hljs-comment"># 空数据</span><br><span class="hljs-comment"># 1、apply 应用方法数据转换，通用</span><br><span class="hljs-comment"># Series，其中x是Series中元素</span><br>df[<span class="hljs-string">&#x27;Keras&#x27;</span>].apply(<span class="hljs-keyword">lambda</span> x:<span class="hljs-literal">True</span> <span class="hljs-keyword">if</span> x &gt;<span class="hljs-number">5</span> <span class="hljs-keyword">else</span> <span class="hljs-literal">False</span>) <br><span class="hljs-comment"># DataFrame，其中的x是DataFrame中列或者行，是Series</span><br>df.apply(<span class="hljs-keyword">lambda</span> x : x.median(),axis = <span class="hljs-number">0</span>) <span class="hljs-comment"># 列的中位数</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">convert</span>(<span class="hljs-params">x</span>): <span class="hljs-comment"># 自定义方法</span><br>    <span class="hljs-keyword">return</span> (x.mean().<span class="hljs-built_in">round</span>(<span class="hljs-number">1</span>),x.count())<br>df.apply(convert,axis = <span class="hljs-number">1</span>) <span class="hljs-comment"># 行平均值，计数</span><br><br><span class="hljs-comment"># 2、applymap DataFrame专有</span><br>df.applymap(<span class="hljs-keyword">lambda</span> x : x + <span class="hljs-number">100</span>) <span class="hljs-comment"># 计算DataFrame中每个元素</span><br></code></pre></td></tr></table></figure><h3 id="第四节-transform变形金刚">第四节 transform变形金刚</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<br><span class="hljs-keyword">import</span> pandas <span class="hljs-keyword">as</span> pd<br>df = pd.DataFrame(data = np.random.randint(<span class="hljs-number">0</span>,<span class="hljs-number">10</span>,size = (<span class="hljs-number">10</span>,<span class="hljs-number">3</span>)),<br>                  index = <span class="hljs-built_in">list</span>(<span class="hljs-string">&#x27;ABCDEFHIJK&#x27;</span>),<br>                  columns=[<span class="hljs-string">&#x27;Python&#x27;</span>,<span class="hljs-string">&#x27;Tensorflow&#x27;</span>,<span class="hljs-string">&#x27;Keras&#x27;</span>])<br>df.iloc[<span class="hljs-number">4</span>,<span class="hljs-number">2</span>] = <span class="hljs-literal">None</span> <span class="hljs-comment"># 空数据</span><br><br><span class="hljs-comment"># 1、一列执行多项计算</span><br>df[<span class="hljs-string">&#x27;Python&#x27;</span>].transform([np.sqrt,np.exp]) <span class="hljs-comment"># Series处理</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">convert</span>(<span class="hljs-params">x</span>):<br>    <span class="hljs-keyword">if</span> x.mean() &gt; <span class="hljs-number">5</span>:<br>        x *= <span class="hljs-number">10</span><br>    <span class="hljs-keyword">else</span>:<br>        x *= -<span class="hljs-number">10</span><br>    <span class="hljs-keyword">return</span> x<br><span class="hljs-comment"># 2、多列执行不同计算</span><br>df.transform(&#123;<span class="hljs-string">&#x27;Python&#x27;</span>:convert,<span class="hljs-string">&#x27;Tensorflow&#x27;</span>:np.<span class="hljs-built_in">max</span>,<span class="hljs-string">&#x27;Keras&#x27;</span>:np.<span class="hljs-built_in">min</span>&#125;) <span class="hljs-comment"># DataFrame处理</span><br></code></pre></td></tr></table></figure><h3 id="第五节-重排随机抽样哑变量">第五节 重排随机抽样哑变量</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<br><span class="hljs-keyword">import</span> pandas <span class="hljs-keyword">as</span> pd<br>df = pd.DataFrame(data = np.random.randint(<span class="hljs-number">0</span>,<span class="hljs-number">10</span>,size = (<span class="hljs-number">10</span>,<span class="hljs-number">3</span>)),<br>                  index = <span class="hljs-built_in">list</span>(<span class="hljs-string">&#x27;ABCDEFHIJK&#x27;</span>),<br>                  columns=[<span class="hljs-string">&#x27;Python&#x27;</span>,<span class="hljs-string">&#x27;Tensorflow&#x27;</span>,<span class="hljs-string">&#x27;Keras&#x27;</span>])<br><br>ran = np.random.permutation(<span class="hljs-number">10</span>) <span class="hljs-comment"># 随机重排</span><br>df.take(ran) <span class="hljs-comment"># 重排DataFrame</span><br>df.take(np.random.randint(<span class="hljs-number">0</span>,<span class="hljs-number">10</span>,size = <span class="hljs-number">15</span>)) <span class="hljs-comment"># 随机抽样</span><br><br><span class="hljs-comment"># 哑变量，独热编码，1表示有，0表示没有</span><br>df = pd.DataFrame(&#123;<span class="hljs-string">&#x27;key&#x27;</span>:[<span class="hljs-string">&#x27;b&#x27;</span>,<span class="hljs-string">&#x27;b&#x27;</span>,<span class="hljs-string">&#x27;a&#x27;</span>,<span class="hljs-string">&#x27;c&#x27;</span>,<span class="hljs-string">&#x27;a&#x27;</span>,<span class="hljs-string">&#x27;b&#x27;</span>]&#125;)<br>pd.get_dummies(df,prefix=<span class="hljs-string">&#x27;&#x27;</span>,prefix_sep=<span class="hljs-string">&#x27;&#x27;</span>)<br></code></pre></td></tr></table></figure><h2 id="第九部分-数据重塑">第九部分 数据重塑</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<br><span class="hljs-keyword">import</span> pandas <span class="hljs-keyword">as</span> pd<br>df = pd.DataFrame(data = np.random.randint(<span class="hljs-number">0</span>,<span class="hljs-number">100</span>,size = (<span class="hljs-number">10</span>,<span class="hljs-number">3</span>)),<br>                  index = <span class="hljs-built_in">list</span>(<span class="hljs-string">&#x27;ABCDEFHIJK&#x27;</span>),<br>                  columns=[<span class="hljs-string">&#x27;Python&#x27;</span>,<span class="hljs-string">&#x27;Tensorflow&#x27;</span>,<span class="hljs-string">&#x27;Keras&#x27;</span>])<br>df.T <span class="hljs-comment"># 转置</span><br>df2 = pd.DataFrame(data = np.random.randint(<span class="hljs-number">0</span>,<span class="hljs-number">100</span>,size = (<span class="hljs-number">20</span>,<span class="hljs-number">3</span>)),<br>                   index = pd.MultiIndex.from_product([<span class="hljs-built_in">list</span>(<span class="hljs-string">&#x27;ABCDEFHIJK&#x27;</span>),[<span class="hljs-string">&#x27;期中&#x27;</span>,<span class="hljs-string">&#x27;期末&#x27;</span>]]),<span class="hljs-comment">#多层索引</span><br>                   columns=[<span class="hljs-string">&#x27;Python&#x27;</span>,<span class="hljs-string">&#x27;Tensorflow&#x27;</span>,<span class="hljs-string">&#x27;Keras&#x27;</span>])<br>df2.unstack(level = -<span class="hljs-number">1</span>) <span class="hljs-comment"># 行旋转成列，level指定哪一层，进行变换</span><br>df2.stack() <span class="hljs-comment"># 列旋转成行</span><br>df2.stack().unstack(level = <span class="hljs-number">1</span>) <span class="hljs-comment"># 行列互换</span><br><br><span class="hljs-comment"># 多层索引DataFrame数学计算</span><br>df2.mean() <span class="hljs-comment"># 各学科平均分</span><br>df2.mean(level=<span class="hljs-number">0</span>) <span class="hljs-comment"># 各学科，每个人期中期末平均分</span><br>df2.mean(level = <span class="hljs-number">1</span>) <span class="hljs-comment"># 各学科，期中期末所有人平均分</span><br></code></pre></td></tr></table></figure><h2 id="第十部分-数学和统计方法">第十部分 数学和统计方法</h2><p>pandas对象拥有一组常用的数学和统计方法。它们属于汇总统计，对Series汇总计算获取mean、max值或者对DataFrame行、列汇总计算返回一个Series。</p><h3 id="第一节-简单统计指标">第一节 简单统计指标</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<br><span class="hljs-keyword">import</span> pandas <span class="hljs-keyword">as</span> pd<br>df = pd.DataFrame(data = np.random.randint(<span class="hljs-number">0</span>,<span class="hljs-number">100</span>,size = (<span class="hljs-number">20</span>,<span class="hljs-number">3</span>)),<br>                  index = <span class="hljs-built_in">list</span>(<span class="hljs-string">&#x27;ABCDEFHIJKLMNOPQRSTU&#x27;</span>),<br>                  columns=[<span class="hljs-string">&#x27;Python&#x27;</span>,<span class="hljs-string">&#x27;Tensorflow&#x27;</span>,<span class="hljs-string">&#x27;Keras&#x27;</span>])<br><span class="hljs-comment"># 1、简单统计指标</span><br>df.count() <span class="hljs-comment"># 非NA值的数量</span><br>df.<span class="hljs-built_in">max</span>(axis = <span class="hljs-number">0</span>) <span class="hljs-comment">#轴0最大值，即每一列最大值</span><br>df.<span class="hljs-built_in">min</span>() <span class="hljs-comment">#默认计算轴0最小值</span><br>df.median() <span class="hljs-comment"># 中位数</span><br>df.<span class="hljs-built_in">sum</span>() <span class="hljs-comment"># 求和</span><br>df.mean(axis = <span class="hljs-number">1</span>) <span class="hljs-comment">#轴1平均值，即每一行的平均值</span><br>df.quantile(q = [<span class="hljs-number">0.2</span>,<span class="hljs-number">0.4</span>,<span class="hljs-number">0.8</span>]) <span class="hljs-comment"># 分位数</span><br>df.describe() <span class="hljs-comment"># 查看数值型列的汇总统计,计数、平均值、标准差、最小值、四分位数、最大值</span><br></code></pre></td></tr></table></figure><h3 id="第二节-索引标签、位置获取">第二节 索引标签、位置获取</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs Python"><span class="hljs-comment"># 2、索引位置</span><br>df[<span class="hljs-string">&#x27;Python&#x27;</span>].argmin() <span class="hljs-comment"># 计算最小值位置</span><br>df[<span class="hljs-string">&#x27;Keras&#x27;</span>].argmax() <span class="hljs-comment"># 最大值位置</span><br>df.idxmax() <span class="hljs-comment"># 最大值索引标签</span><br>df.idxmin() <span class="hljs-comment"># 最小值索引标签</span><br></code></pre></td></tr></table></figure><h3 id="第三节-更多统计指标">第三节 更多统计指标</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs Python"><span class="hljs-comment"># 3、更多统计指标</span><br>df[<span class="hljs-string">&#x27;Python&#x27;</span>].value_counts() <span class="hljs-comment"># 统计元素出现次数</span><br>df[<span class="hljs-string">&#x27;Keras&#x27;</span>].unique() <span class="hljs-comment"># 去重</span><br>df.cumsum() <span class="hljs-comment"># 累加</span><br>df.cumprod() <span class="hljs-comment"># 累乘</span><br>df.std() <span class="hljs-comment"># 标准差</span><br>df.var() <span class="hljs-comment"># 方差</span><br>df.cummin() <span class="hljs-comment"># 累计最小值</span><br>df.cummax() <span class="hljs-comment"># 累计最大值</span><br>df.diff() <span class="hljs-comment"># 计算差分</span><br>df.pct_change() <span class="hljs-comment"># 计算百分比变化</span><br></code></pre></td></tr></table></figure><h3 id="第四节-高级统计指标">第四节 高级统计指标</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># 4、高级统计指标</span><br>df.cov() <span class="hljs-comment"># 属性的协方差</span><br>df[<span class="hljs-string">&#x27;Python&#x27;</span>].cov(df[<span class="hljs-string">&#x27;Keras&#x27;</span>]) <span class="hljs-comment"># Python和Keras的协方差</span><br>df.corr() <span class="hljs-comment"># 所有属性相关性系数</span><br>df.corrwith(df[<span class="hljs-string">&#x27;Tensorflow&#x27;</span>]) <span class="hljs-comment"># 单一属性相关性系数</span><br></code></pre></td></tr></table></figure><p>协方差：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>C</mi><mi>o</mi><mi>v</mi><mo stretchy="false">(</mo><mi>X</mi><mo separator="true">,</mo><mi>Y</mi><mo stretchy="false">)</mo><mo>=</mo><mspace linebreak="newline"></mspace><mi>f</mi><mi>r</mi><mi>a</mi><mi>c</mi><mrow><mspace linebreak="newline"></mspace><mi>s</mi><mi>u</mi><mi>m</mi><mspace linebreak="newline"></mspace><mi>l</mi><mi>i</mi><mi>m</mi><mi>i</mi><mi>t</mi><mi>s</mi><mi mathvariant="normal">_</mi><msup><mn>1</mn><mi>n</mi></msup><mo stretchy="false">(</mo><mi>X</mi><mi mathvariant="normal">_</mi><mi>i</mi><mo>−</mo><mspace linebreak="newline"></mspace><mi>o</mi><mi>v</mi><mi>e</mi><mi>r</mi><mi>l</mi><mi>i</mi><mi>n</mi><mi>e</mi><mi>X</mi><mo stretchy="false">)</mo><mo stretchy="false">(</mo><mi>Y</mi><mi mathvariant="normal">_</mi><mi>i</mi><mo>−</mo><mspace linebreak="newline"></mspace><mi>o</mi><mi>v</mi><mi>e</mi><mi>r</mi><mi>l</mi><mi>i</mi><mi>n</mi><mi>e</mi><mi>Y</mi><mo stretchy="false">)</mo></mrow><mrow><mi>n</mi><mo>−</mo><mn>1</mn></mrow></mrow><annotation encoding="application/x-tex">Cov(X,Y) = \\frac{\\sum\\limits\_1^n(X\_i - \\overline{X})(Y\_i - \\overline{Y})}{n-1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1.06em;vertical-align:-0.31em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal">a</span><span class="mord mathnormal">c</span><span class="mord"><span class="mspace newline"></span><span class="mord mathnormal">s</span><span class="mord mathnormal">u</span><span class="mord mathnormal">m</span><span class="mspace newline"></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">imi</span><span class="mord mathnormal">t</span><span class="mord mathnormal">s</span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord"><span class="mord">1</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6644em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace newline"></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mord mathnormal" style="margin-right:0.02778em;">er</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">in</span><span class="mord mathnormal">e</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span></span><span class="mclose">)</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace newline"></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mord mathnormal" style="margin-right:0.02778em;">er</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">in</span><span class="mord mathnormal">e</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span></span><span class="mclose">)</span></span><span class="mord"><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord">1</span></span></span></span></span></p><p>相关性系数：r(X,Y) = \\frac{Cov(X,Y)}{\\sqrt{Var\[X\]Var\[Y\]}}</p><h2 id="第十一部分-数据排序">第十一部分 数据排序</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<br><span class="hljs-keyword">import</span> pandas <span class="hljs-keyword">as</span> pd<br>df = pd.DataFrame(data = np.random.randint(<span class="hljs-number">0</span>,<span class="hljs-number">30</span>,size = (<span class="hljs-number">30</span>,<span class="hljs-number">3</span>)),<br>                  index = <span class="hljs-built_in">list</span>(<span class="hljs-string">&#x27;qwertyuioijhgfcasdcvbnerfghjcf&#x27;</span>),<br>                  columns = [<span class="hljs-string">&#x27;Python&#x27;</span>,<span class="hljs-string">&#x27;Keras&#x27;</span>,<span class="hljs-string">&#x27;Pytorch&#x27;</span>])<br><span class="hljs-comment"># 1、索引列名排序</span><br>df.sort_index(axis = <span class="hljs-number">0</span>,ascending=<span class="hljs-literal">True</span>) <span class="hljs-comment"># 按索引排序，降序</span><br>df.sort_index(axis = <span class="hljs-number">1</span>,ascending=<span class="hljs-literal">False</span>) <span class="hljs-comment">#按列名排序，升序</span><br><span class="hljs-comment"># 2、属性值排序</span><br>df.sort_values(by = [<span class="hljs-string">&#x27;Python&#x27;</span>]) <span class="hljs-comment">#按Python属性值排序</span><br>df.sort_values(by = [<span class="hljs-string">&#x27;Python&#x27;</span>,<span class="hljs-string">&#x27;Keras&#x27;</span>])<span class="hljs-comment">#先按Python，再按Keras排序</span><br><br><span class="hljs-comment"># 3、返回属性n大或者n小的值</span><br>df.nlargest(<span class="hljs-number">10</span>,columns=<span class="hljs-string">&#x27;Keras&#x27;</span>) <span class="hljs-comment"># 根据属性Keras排序,返回最大10个数据</span><br>df.nsmallest(<span class="hljs-number">5</span>,columns=<span class="hljs-string">&#x27;Python&#x27;</span>) <span class="hljs-comment"># 根据属性Python排序，返回最小5个数据</span><br></code></pre></td></tr></table></figure><h2 id="第十二部分-分箱操作">第十二部分 分箱操作</h2><p>分箱操作就是将连续数据转换为分类对应物的过程。比如将连续的身高数据划分为：矮中高。</p><p>分箱操作分为等距分箱和等频分箱。</p><p>分箱操作也叫面元划分或者离散化。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<br><span class="hljs-keyword">import</span> pandas <span class="hljs-keyword">as</span> pd<br>df = pd.DataFrame(data = np.random.randint(<span class="hljs-number">0</span>,<span class="hljs-number">150</span>,size = (<span class="hljs-number">100</span>,<span class="hljs-number">3</span>)),<br>                  columns=[<span class="hljs-string">&#x27;Python&#x27;</span>,<span class="hljs-string">&#x27;Tensorflow&#x27;</span>,<span class="hljs-string">&#x27;Keras&#x27;</span>])<br><span class="hljs-comment"># 1、等宽分箱</span><br>pd.cut(df.Python,bins = <span class="hljs-number">3</span>)<br><span class="hljs-comment"># 指定宽度分箱</span><br>pd.cut(df.Keras,<span class="hljs-comment">#分箱数据</span><br>       bins = [<span class="hljs-number">0</span>,<span class="hljs-number">60</span>,<span class="hljs-number">90</span>,<span class="hljs-number">120</span>,<span class="hljs-number">150</span>],<span class="hljs-comment">#分箱断点</span><br>       right = <span class="hljs-literal">False</span>,<span class="hljs-comment"># 左闭右开</span><br>       labels=[<span class="hljs-string">&#x27;不及格&#x27;</span>,<span class="hljs-string">&#x27;中等&#x27;</span>,<span class="hljs-string">&#x27;良好&#x27;</span>,<span class="hljs-string">&#x27;优秀&#x27;</span>])<span class="hljs-comment"># 分箱后分类</span><br><br><span class="hljs-comment"># 2、等频分箱</span><br>pd.qcut(df.Python,q = <span class="hljs-number">4</span>,<span class="hljs-comment"># 4等分</span><br>        labels=[<span class="hljs-string">&#x27;差&#x27;</span>,<span class="hljs-string">&#x27;中&#x27;</span>,<span class="hljs-string">&#x27;良&#x27;</span>,<span class="hljs-string">&#x27;优&#x27;</span>]) <span class="hljs-comment"># 分箱后分类</span><br></code></pre></td></tr></table></figure><h2 id="第十三部分-分组聚合">第十三部分 分组聚合</h2><h3 id="第一节-分组">第一节 分组</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<br><span class="hljs-keyword">import</span> pandas <span class="hljs-keyword">as</span> pd<br><span class="hljs-comment"># 准备数据</span><br>df = pd.DataFrame(data = &#123;<span class="hljs-string">&#x27;sex&#x27;</span>:np.random.randint(<span class="hljs-number">0</span>,<span class="hljs-number">2</span>,size = <span class="hljs-number">300</span>), <span class="hljs-comment"># 0男，1女</span><br>                          <span class="hljs-string">&#x27;class&#x27;</span>:np.random.randint(<span class="hljs-number">1</span>,<span class="hljs-number">9</span>,size = <span class="hljs-number">300</span>),<span class="hljs-comment">#1~8八个班</span><br>                          <span class="hljs-string">&#x27;Python&#x27;</span>:np.random.randint(<span class="hljs-number">0</span>,<span class="hljs-number">151</span>,size = <span class="hljs-number">300</span>),<span class="hljs-comment">#Python成绩</span><br>                          <span class="hljs-string">&#x27;Keras&#x27;</span>:np.random.randint(<span class="hljs-number">0</span>,<span class="hljs-number">151</span>,size =<span class="hljs-number">300</span>),<span class="hljs-comment">#Keras成绩</span><br>                          <span class="hljs-string">&#x27;Tensorflow&#x27;</span>:np.random.randint(<span class="hljs-number">0</span>,<span class="hljs-number">151</span>,size=<span class="hljs-number">300</span>),<br>                          <span class="hljs-string">&#x27;Java&#x27;</span>:np.random.randint(<span class="hljs-number">0</span>,<span class="hljs-number">151</span>,size = <span class="hljs-number">300</span>),<br>                          <span class="hljs-string">&#x27;C++&#x27;</span>:np.random.randint(<span class="hljs-number">0</span>,<span class="hljs-number">151</span>,size = <span class="hljs-number">300</span>)&#125;)<br>df[<span class="hljs-string">&#x27;sex&#x27;</span>] = df[<span class="hljs-string">&#x27;sex&#x27;</span>].<span class="hljs-built_in">map</span>(&#123;<span class="hljs-number">0</span>:<span class="hljs-string">&#x27;男&#x27;</span>,<span class="hljs-number">1</span>:<span class="hljs-string">&#x27;女&#x27;</span>&#125;) <span class="hljs-comment"># 将0，1映射成男女</span><br><span class="hljs-comment"># 1、分组-&gt;可迭代对象</span><br><span class="hljs-comment"># 1.1 先分组再获取数据</span><br>g = df.groupby(by = <span class="hljs-string">&#x27;sex&#x27;</span>)[[<span class="hljs-string">&#x27;Python&#x27;</span>,<span class="hljs-string">&#x27;Java&#x27;</span>]] <span class="hljs-comment"># 单分组</span><br><span class="hljs-keyword">for</span> name,data <span class="hljs-keyword">in</span> g:<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;组名：&#x27;</span>,name)<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;数据：&#x27;</span>,data)<br>df.groupby(by = [<span class="hljs-string">&#x27;class&#x27;</span>,<span class="hljs-string">&#x27;sex&#x27;</span>])[[<span class="hljs-string">&#x27;Python&#x27;</span>]] <span class="hljs-comment"># 多分组</span><br><span class="hljs-comment"># 1.2 对一列值进行分组</span><br>df[<span class="hljs-string">&#x27;Python&#x27;</span>].groupby(df[<span class="hljs-string">&#x27;class&#x27;</span>]) <span class="hljs-comment"># 单分组</span><br>df[<span class="hljs-string">&#x27;Keras&#x27;</span>].groupby([df[<span class="hljs-string">&#x27;class&#x27;</span>],df[<span class="hljs-string">&#x27;sex&#x27;</span>]]) <span class="hljs-comment"># 多分组</span><br><span class="hljs-comment"># 1.3 按数据类型分组</span><br>df.groupby(df.dtypes,axis = <span class="hljs-number">1</span>)<br><span class="hljs-comment"># 1.4 通过字典进行分组</span><br>m = &#123;<span class="hljs-string">&#x27;sex&#x27;</span>:<span class="hljs-string">&#x27;category&#x27;</span>,<span class="hljs-string">&#x27;class&#x27;</span>:<span class="hljs-string">&#x27;category&#x27;</span>,<span class="hljs-string">&#x27;Python&#x27;</span>:<span class="hljs-string">&#x27;IT&#x27;</span>,<span class="hljs-string">&#x27;Keras&#x27;</span>:<span class="hljs-string">&#x27;IT&#x27;</span>,<span class="hljs-string">&#x27;Tensorflow&#x27;</span>:<span class="hljs-string">&#x27;IT&#x27;</span>,<span class="hljs-string">&#x27;Java&#x27;</span>:<span class="hljs-string">&#x27;IT&#x27;</span>,<span class="hljs-string">&#x27;C++&#x27;</span>:<span class="hljs-string">&#x27;IT&#x27;</span>&#125;<br><span class="hljs-keyword">for</span> name,data <span class="hljs-keyword">in</span> df.groupby(m,axis = <span class="hljs-number">1</span>):<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;组名&#x27;</span>,name)<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;数据&#x27;</span>,data)<br></code></pre></td></tr></table></figure><h3 id="第二节-分组聚合">第二节 分组聚合</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># 2、分组直接调用函数进行聚合</span><br><span class="hljs-comment"># 按照性别分组，其他列均值聚合</span><br>df.groupby(by = <span class="hljs-string">&#x27;sex&#x27;</span>).mean().<span class="hljs-built_in">round</span>(<span class="hljs-number">1</span>) <span class="hljs-comment"># 保留1位小数</span><br><span class="hljs-comment"># 按照班级和性别进行分组，Python、Keras的最大值聚合</span><br>df.groupby(by = [<span class="hljs-string">&#x27;class&#x27;</span>,<span class="hljs-string">&#x27;sex&#x27;</span>])[[<span class="hljs-string">&#x27;Python&#x27;</span>,<span class="hljs-string">&#x27;Keras&#x27;</span>]].<span class="hljs-built_in">max</span>()<br><span class="hljs-comment"># 按照班级和性别进行分组，计数聚合。统计每个班，男女人数</span><br>df.groupby(by = [<span class="hljs-string">&#x27;class&#x27;</span>,<span class="hljs-string">&#x27;sex&#x27;</span>]).size()<br><span class="hljs-comment"># 基本描述性统计聚合</span><br>df.groupby(by = [<span class="hljs-string">&#x27;class&#x27;</span>,<span class="hljs-string">&#x27;sex&#x27;</span>]).describe()<br></code></pre></td></tr></table></figure><h3 id="第三节-分组聚合apply、transform">第三节 分组聚合apply、transform</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># 3、分组后调用apply，transform封装单一函数计算</span><br><span class="hljs-comment"># 返回分组结果</span><br>df.groupby(by = [<span class="hljs-string">&#x27;class&#x27;</span>,<span class="hljs-string">&#x27;sex&#x27;</span>])[[<span class="hljs-string">&#x27;Python&#x27;</span>,<span class="hljs-string">&#x27;Keras&#x27;</span>]].apply(np.mean).<span class="hljs-built_in">round</span>(<span class="hljs-number">1</span>)<br><span class="hljs-keyword">def</span> <span class="hljs-title function_">normalization</span>(<span class="hljs-params">x</span>):<br>    <span class="hljs-keyword">return</span> (x - x.<span class="hljs-built_in">min</span>())/(x.<span class="hljs-built_in">max</span>() - x.<span class="hljs-built_in">min</span>()) <span class="hljs-comment"># 最大值最小值归一化</span><br><span class="hljs-comment"># 返回全数据，返回DataFrame.shape和原DataFrame.shape一样。</span><br>df.groupby(by = [<span class="hljs-string">&#x27;class&#x27;</span>,<span class="hljs-string">&#x27;sex&#x27;</span>])[[<span class="hljs-string">&#x27;Python&#x27;</span>,<span class="hljs-string">&#x27;Tensorflow&#x27;</span>]].transform(normalization).<span class="hljs-built_in">round</span>(<span class="hljs-number">3</span>)<br></code></pre></td></tr></table></figure><h3 id="第四节-分组聚合agg">第四节 分组聚合agg</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># 4、agg 多中统计汇总操作</span><br><span class="hljs-comment"># 分组后调用agg应用多种统计汇总</span><br>df.groupby(by = [<span class="hljs-string">&#x27;class&#x27;</span>,<span class="hljs-string">&#x27;sex&#x27;</span>])[[<span class="hljs-string">&#x27;Tensorflow&#x27;</span>,<span class="hljs-string">&#x27;Keras&#x27;</span>]].agg([np.<span class="hljs-built_in">max</span>,np.<span class="hljs-built_in">min</span>,pd.Series.count])<br><span class="hljs-comment"># 分组后不同属性应用多种不同统计汇总</span><br>df.groupby(by = [<span class="hljs-string">&#x27;class&#x27;</span>,<span class="hljs-string">&#x27;sex&#x27;</span>])[[<span class="hljs-string">&#x27;Python&#x27;</span>,<span class="hljs-string">&#x27;Keras&#x27;</span>]].agg(&#123;<span class="hljs-string">&#x27;Python&#x27;</span>:[(<span class="hljs-string">&#x27;最大值&#x27;</span>,np.<span class="hljs-built_in">max</span>),(<span class="hljs-string">&#x27;最小值&#x27;</span>,np.<span class="hljs-built_in">min</span>)],<br>                                                          <span class="hljs-string">&#x27;Keras&#x27;</span>:[(<span class="hljs-string">&#x27;计数&#x27;</span>,pd.Series.count),(<span class="hljs-string">&#x27;中位数&#x27;</span>,np.median)]&#125;)<br></code></pre></td></tr></table></figure><h3 id="第五节-透视表pivot-table">第五节 透视表pivot_table</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># 5、透视表</span><br><span class="hljs-comment"># 透视表也是一种分组聚合运算</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">count</span>(<span class="hljs-params">x</span>):<br>    <span class="hljs-keyword">return</span> <span class="hljs-built_in">len</span>(x)<br>df.pivot_table(values=[<span class="hljs-string">&#x27;Python&#x27;</span>,<span class="hljs-string">&#x27;Keras&#x27;</span>,<span class="hljs-string">&#x27;Tensorflow&#x27;</span>],<span class="hljs-comment"># 要透视分组的值</span><br>               index=[<span class="hljs-string">&#x27;class&#x27;</span>,<span class="hljs-string">&#x27;sex&#x27;</span>], <span class="hljs-comment"># 分组透视指标</span><br>               aggfunc=&#123;<span class="hljs-string">&#x27;Python&#x27;</span>:[(<span class="hljs-string">&#x27;最大值&#x27;</span>,np.<span class="hljs-built_in">max</span>)], <span class="hljs-comment"># 聚合运算</span><br>                        <span class="hljs-string">&#x27;Keras&#x27;</span>:[(<span class="hljs-string">&#x27;最小值&#x27;</span>,np.<span class="hljs-built_in">min</span>),(<span class="hljs-string">&#x27;中位数&#x27;</span>,np.median)],<br>                        <span class="hljs-string">&#x27;Tensorflow&#x27;</span>:[(<span class="hljs-string">&#x27;最小值&#x27;</span>,np.<span class="hljs-built_in">min</span>),(<span class="hljs-string">&#x27;平均值&#x27;</span>,np.mean),(<span class="hljs-string">&#x27;计数&#x27;</span>,count)]&#125;)<br></code></pre></td></tr></table></figure><h2 id="第十四部分-时间序列">第十四部分 时间序列</h2><h3 id="第一节-时间戳操作">第一节 时间戳操作</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># 1、创建方法</span><br>pd.Timestamp(<span class="hljs-string">&#x27;2020-8-24 12&#x27;</span>)<span class="hljs-comment"># 时刻数据</span><br>pd.Period(<span class="hljs-string">&#x27;2020-8-24&#x27;</span>,freq = <span class="hljs-string">&#x27;M&#x27;</span>) <span class="hljs-comment"># 时期数据</span><br>index = pd.date_range(<span class="hljs-string">&#x27;2020.08.24&#x27;</span>,periods=<span class="hljs-number">5</span>,freq = <span class="hljs-string">&#x27;M&#x27;</span>) <span class="hljs-comment"># 批量时刻数据</span><br>pd.period_range(<span class="hljs-string">&#x27;2020.08.24&#x27;</span>,periods=<span class="hljs-number">5</span>,freq=<span class="hljs-string">&#x27;M&#x27;</span>) <span class="hljs-comment"># 批量时期数据</span><br>ts = pd.Series(np.random.randint(<span class="hljs-number">0</span>,<span class="hljs-number">10</span>,size = <span class="hljs-number">5</span>),index = index) <span class="hljs-comment"># 时间戳索引Series</span><br><br><span class="hljs-comment"># 2、转换方法</span><br>pd.to_datetime([<span class="hljs-string">&#x27;2020.08.24&#x27;</span>,<span class="hljs-string">&#x27;2020-08-24&#x27;</span>,<span class="hljs-string">&#x27;24/08/2020&#x27;</span>,<span class="hljs-string">&#x27;2020/8/24&#x27;</span>])<br>pd.to_datetime([<span class="hljs-number">1598582232</span>],unit=<span class="hljs-string">&#x27;s&#x27;</span>)<br>dt = pd.to_datetime([<span class="hljs-number">1598582420401</span>],unit = <span class="hljs-string">&#x27;ms&#x27;</span>) <span class="hljs-comment"># 世界标准时间</span><br>dt + pd.DateOffset(hours = <span class="hljs-number">8</span>) <span class="hljs-comment"># 东八区时间</span><br>dt + pd.DateOffset(days = <span class="hljs-number">100</span>) <span class="hljs-comment"># 100天后日期</span><br></code></pre></td></tr></table></figure><h3 id="第二节-时间戳索引">第二节 时间戳索引</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs python">index = pd.date_range(<span class="hljs-string">&quot;2020-8-24&quot;</span>, periods=<span class="hljs-number">200</span>, freq=<span class="hljs-string">&quot;D&quot;</span>)<br>ts = pd.Series(<span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(index)), index=index)<br><span class="hljs-comment"># str类型索引</span><br>ts[<span class="hljs-string">&#x27;2020-08-30&#x27;</span>] <span class="hljs-comment"># 日期访问数据</span><br>ts[<span class="hljs-string">&#x27;2020-08-24&#x27;</span>:<span class="hljs-string">&#x27;2020-09-3&#x27;</span>] <span class="hljs-comment"># 日期切片</span><br>ts[<span class="hljs-string">&#x27;2020-08&#x27;</span>] <span class="hljs-comment"># 传入年月</span><br>ts[<span class="hljs-string">&#x27;2020&#x27;</span>] <span class="hljs-comment"># 传入年</span><br><span class="hljs-comment"># 时间戳索引</span><br>ts[pd.Timestamp(<span class="hljs-string">&#x27;2020-08-30&#x27;</span>)]<br>ts[pd.Timestamp(<span class="hljs-string">&#x27;2020-08-24&#x27;</span>):pd.Timestamp(<span class="hljs-string">&#x27;2020-08-30&#x27;</span>)] <span class="hljs-comment"># 切片</span><br>ts[pd.date_range(<span class="hljs-string">&#x27;2020-08-24&#x27;</span>,periods=<span class="hljs-number">10</span>,freq=<span class="hljs-string">&#x27;D&#x27;</span>)]<br><br><span class="hljs-comment"># 时间戳索引属性</span><br>ts.index.year <span class="hljs-comment"># 获取年</span><br>ts.index.dayofweek <span class="hljs-comment"># 获取星期几</span><br>ts.index.weekofyear <span class="hljs-comment"># 一年中第几个星期几</span><br></code></pre></td></tr></table></figure><h3 id="第三节-时间序列常用方法">第三节 时间序列常用方法</h3><p>在做时间序列相关的工作时，经常要对时间做一些移动/滞后、频率转换、采样等相关操作，我们来看下这些操作如何使用</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><code class="hljs python">index = pd.date_range(<span class="hljs-string">&#x27;8/1/2020&#x27;</span>, periods=<span class="hljs-number">365</span>, freq=<span class="hljs-string">&#x27;D&#x27;</span>)<br>ts = pd.Series(np.random.randint(<span class="hljs-number">0</span>, <span class="hljs-number">500</span>, <span class="hljs-built_in">len</span>(index)), index=index)<br><br><span class="hljs-comment"># 1、移动</span><br>ts.shift(periods = <span class="hljs-number">2</span>) <span class="hljs-comment">#  数据后移 </span><br>ts.shift(periods = -<span class="hljs-number">2</span>) <span class="hljs-comment"># 数据前移</span><br><br><span class="hljs-comment"># 日期移动</span><br>ts.shift(periods = <span class="hljs-number">2</span>,freq = pd.tseries.offsets.Day()) <span class="hljs-comment"># 天移动</span><br>ts.tshift(periods = <span class="hljs-number">1</span>,freq = pd.tseries.offsets.MonthOffset()) <span class="hljs-comment">#月移动</span><br><br><span class="hljs-comment"># 2、频率转换</span><br>ts.asfreq(pd.tseries.offsets.Week()) <span class="hljs-comment"># 天变周</span><br>ts.asfreq(pd.tseries.offsets.MonthEnd()) <span class="hljs-comment"># 天变月</span><br>ts.asfreq(pd.tseries.offsets.Hour(),fill_value = <span class="hljs-number">0</span>) <span class="hljs-comment">#天变小时，又少变多，fill_value为填充值</span><br><br><span class="hljs-comment"># 3、重采样</span><br><span class="hljs-comment"># resample 表示根据日期维度进行数据聚合，可以按照分钟、小时、工作日、周、月、年等来作为日期维度</span><br>ts.resample(<span class="hljs-string">&#x27;2W&#x27;</span>).<span class="hljs-built_in">sum</span>() <span class="hljs-comment"># 以2周为单位进行汇总</span><br>ts.resample(<span class="hljs-string">&#x27;3M&#x27;</span>).<span class="hljs-built_in">sum</span>().cumsum() <span class="hljs-comment"># 以季度为单位进行汇总</span><br><br><span class="hljs-comment"># 4、DataFrame重采样</span><br>d = <span class="hljs-built_in">dict</span>(&#123;<span class="hljs-string">&#x27;price&#x27;</span>: [<span class="hljs-number">10</span>, <span class="hljs-number">11</span>, <span class="hljs-number">9</span>, <span class="hljs-number">13</span>, <span class="hljs-number">14</span>, <span class="hljs-number">18</span>, <span class="hljs-number">17</span>, <span class="hljs-number">19</span>],<br>          <span class="hljs-string">&#x27;volume&#x27;</span>: [<span class="hljs-number">50</span>, <span class="hljs-number">60</span>, <span class="hljs-number">40</span>, <span class="hljs-number">100</span>, <span class="hljs-number">50</span>, <span class="hljs-number">100</span>, <span class="hljs-number">40</span>, <span class="hljs-number">50</span>],<br>          <span class="hljs-string">&#x27;week_starting&#x27;</span>:pd.date_range(<span class="hljs-string">&#x27;24/08/2020&#x27;</span>,periods=<span class="hljs-number">8</span>,freq=<span class="hljs-string">&#x27;W&#x27;</span>)&#125;)<br>df1 = pd.DataFrame(d)<br>df1.resample(<span class="hljs-string">&#x27;M&#x27;</span>,on = <span class="hljs-string">&#x27;week_starting&#x27;</span>).apply(np.<span class="hljs-built_in">sum</span>)<br>df1.resample(<span class="hljs-string">&#x27;M&#x27;</span>,on = <span class="hljs-string">&#x27;week_starting&#x27;</span>).agg(&#123;<span class="hljs-string">&#x27;price&#x27;</span>:np.mean,<span class="hljs-string">&#x27;volume&#x27;</span>:np.<span class="hljs-built_in">sum</span>&#125;)<br><br>days = pd.date_range(<span class="hljs-string">&#x27;1/8/2020&#x27;</span>, periods=<span class="hljs-number">4</span>, freq=<span class="hljs-string">&#x27;D&#x27;</span>)<br>data2 = <span class="hljs-built_in">dict</span>(&#123;<span class="hljs-string">&#x27;price&#x27;</span>: [<span class="hljs-number">10</span>, <span class="hljs-number">11</span>, <span class="hljs-number">9</span>, <span class="hljs-number">13</span>, <span class="hljs-number">14</span>, <span class="hljs-number">18</span>, <span class="hljs-number">17</span>, <span class="hljs-number">19</span>],<br>           <span class="hljs-string">&#x27;volume&#x27;</span>: [<span class="hljs-number">50</span>, <span class="hljs-number">60</span>, <span class="hljs-number">40</span>, <span class="hljs-number">100</span>, <span class="hljs-number">50</span>, <span class="hljs-number">100</span>, <span class="hljs-number">40</span>, <span class="hljs-number">50</span>]&#125;)<br>df2 = pd.DataFrame(data2,<br>                   index=pd.MultiIndex.from_product([days,[<span class="hljs-string">&#x27;morning&#x27;</span>,<span class="hljs-string">&#x27;afternoon&#x27;</span>]]))<br>df2.resample(<span class="hljs-string">&#x27;D&#x27;</span>, level=<span class="hljs-number">0</span>).<span class="hljs-built_in">sum</span>()<br></code></pre></td></tr></table></figure><h3 id="第四节-时区表示">第四节 时区表示</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs python">index = pd.date_range(<span class="hljs-string">&#x27;8/1/2012 00:00&#x27;</span>, periods=<span class="hljs-number">5</span>, freq=<span class="hljs-string">&#x27;D&#x27;</span>)<br>ts = pd.Series(np.random.randn(<span class="hljs-built_in">len</span>(index)), index)<br><span class="hljs-keyword">import</span> pytz<br>pytz.common_timezones <span class="hljs-comment"># 常用时区</span><br><span class="hljs-comment"># 时区表示</span><br>ts = ts.tz_localize(tz=<span class="hljs-string">&#x27;UTC&#x27;</span>)<br><span class="hljs-comment"># 转换成其它时区</span><br>ts.tz_convert(tz = <span class="hljs-string">&#x27;Asia/Shanghai&#x27;</span>)<br></code></pre></td></tr></table></figure><h2 id="第十五部分-数据可视化">第十五部分 数据可视化</h2><p>pip install matplotlib -i <a href="https://pypi.tuna.tsinghua.edu.cn/simple">https://pypi.tuna.tsinghua.edu.cn/simple</a></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<br><span class="hljs-keyword">import</span> pandas <span class="hljs-keyword">as</span> pd<br><br><span class="hljs-comment"># 1、线形图</span><br>df1 = pd.DataFrame(data = np.random.randn(<span class="hljs-number">1000</span>,<span class="hljs-number">4</span>),<br>                  index = pd.date_range(start = <span class="hljs-string">&#x27;27/6/2012&#x27;</span>,periods=<span class="hljs-number">1000</span>),<br>                  columns=<span class="hljs-built_in">list</span>(<span class="hljs-string">&#x27;ABCD&#x27;</span>))<br>df1.cumsum().plot()<br><br><span class="hljs-comment"># 2、条形图</span><br>df2 = pd.DataFrame(data = np.random.rand(<span class="hljs-number">10</span>,<span class="hljs-number">4</span>),<br>                   columns = <span class="hljs-built_in">list</span>(<span class="hljs-string">&#x27;ABCD&#x27;</span>))<br>df2.plot.bar(stacked = <span class="hljs-literal">True</span>) <span class="hljs-comment"># stacked 是否堆叠</span><br><br><span class="hljs-comment"># 3、饼图</span><br>df3 = pd.DataFrame(data = np.random.rand(<span class="hljs-number">4</span>,<span class="hljs-number">2</span>),<br>                   index = <span class="hljs-built_in">list</span>(<span class="hljs-string">&#x27;ABCD&#x27;</span>),<br>                   columns=[<span class="hljs-string">&#x27;One&#x27;</span>,<span class="hljs-string">&#x27;Two&#x27;</span>])<br>df3.plot.pie(subplots = <span class="hljs-literal">True</span>,figsize = (<span class="hljs-number">8</span>,<span class="hljs-number">8</span>))<br><br><span class="hljs-comment"># 4、散点图</span><br>df4 = pd.DataFrame(np.random.rand(<span class="hljs-number">50</span>, <span class="hljs-number">4</span>), columns=<span class="hljs-built_in">list</span>(<span class="hljs-string">&#x27;ABCD&#x27;</span>))<br>df4.plot.scatter(x=<span class="hljs-string">&#x27;A&#x27;</span>, y=<span class="hljs-string">&#x27;B&#x27;</span>) <span class="hljs-comment"># A和B关系绘制</span><br><span class="hljs-comment"># 在一张图中绘制AC散点图，同时绘制BD散点图</span><br>ax = df4.plot.scatter(x=<span class="hljs-string">&#x27;A&#x27;</span>, y=<span class="hljs-string">&#x27;C&#x27;</span>, color=<span class="hljs-string">&#x27;DarkBlue&#x27;</span>, label=<span class="hljs-string">&#x27;Group 1&#x27;</span>);<br>df4.plot.scatter(x=<span class="hljs-string">&#x27;B&#x27;</span>, y=<span class="hljs-string">&#x27;D&#x27;</span>, color=<span class="hljs-string">&#x27;DarkGreen&#x27;</span>, label=<span class="hljs-string">&#x27;Group 2&#x27;</span>, ax=ax)<br><span class="hljs-comment"># 气泡图，散点有大小之分</span><br>df4.plot.scatter(x=<span class="hljs-string">&#x27;A&#x27;</span>,y=<span class="hljs-string">&#x27;B&#x27;</span>,s = df4[<span class="hljs-string">&#x27;C&#x27;</span>]*<span class="hljs-number">200</span>)<br><br><span class="hljs-comment"># 5、面积图</span><br>df5 = pd.DataFrame(data = np.random.rand(<span class="hljs-number">10</span>, <span class="hljs-number">4</span>), <br>                   columns=<span class="hljs-built_in">list</span>(<span class="hljs-string">&#x27;ABCD&#x27;</span>))<br>df5.plot.area(stacked = <span class="hljs-literal">True</span>);<span class="hljs-comment"># stacked 是否堆叠</span><br><br><span class="hljs-comment"># 6、箱式图</span><br>df6 = pd.DataFrame(data = np.random.rand(<span class="hljs-number">10</span>, <span class="hljs-number">5</span>), <br>                   columns=<span class="hljs-built_in">list</span>(<span class="hljs-string">&#x27;ABCDE&#x27;</span>))<br>df6.plot.box()<br><br><span class="hljs-comment"># 7、直方图</span><br>df7 = pd.DataFrame(&#123;<span class="hljs-string">&#x27;A&#x27;</span>: np.random.randn(<span class="hljs-number">1000</span>) + <span class="hljs-number">1</span>, <span class="hljs-string">&#x27;B&#x27;</span>: np.random.randn(<span class="hljs-number">1000</span>),<br>                    <span class="hljs-string">&#x27;C&#x27;</span>: np.random.randn(<span class="hljs-number">1000</span>) - <span class="hljs-number">1</span>&#125;)<br>df7.plot.hist(alpha=<span class="hljs-number">0.5</span>) <span class="hljs-comment">#带透明度直方图</span><br>df7.plot.hist(stacked = <span class="hljs-literal">True</span>)<span class="hljs-comment"># 堆叠图</span><br>df7.hist(figsize = (<span class="hljs-number">8</span>,<span class="hljs-number">8</span>)) <span class="hljs-comment"># 子视图绘制</span><br></code></pre></td></tr></table></figure><h2 id="第十六部分-实战-数据分析师招聘数据分析">第十六部分 实战-数据分析师招聘数据分析</h2><h3 id="第一节-分析目标">第一节 分析目标</h3><ul><li>各城市对数据分析岗位的需求情况</li><li>不同细分领域对数据分析岗的需求情况</li><li>数据分析岗位的薪资状况</li><li>工作经验与薪水的关系</li><li>公司都要求什么掌握什么技能</li><li>岗位的学历要求高吗</li><li>不同规模的企业对工资经验的要求以及提供的薪资水平</li></ul><h3 id="第二节-数据加载">第二节 数据加载</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> pandas <span class="hljs-keyword">as</span> pd<br><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<br>job = pd.read_csv(<span class="hljs-string">&#x27;./job.csv&#x27;</span>)<br>job.drop_duplicates(inplace = <span class="hljs-literal">True</span>) <span class="hljs-comment"># 删除重复数据</span><br></code></pre></td></tr></table></figure><h3 id="第三节-数据清洗">第三节 数据清洗</h3><ul><li><p>过滤非数据分析的岗位</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># 数据分析相应的岗位数量</span><br>cond = job[<span class="hljs-string">&quot;positionName&quot;</span>].<span class="hljs-built_in">str</span>.contains(<span class="hljs-string">&quot;数据分析&quot;</span>)  <span class="hljs-comment"># 职位名中含有数据分析字眼的</span><br><span class="hljs-comment"># 筛选出我们想要的字段，并剔除positionName</span><br>job = job[cond]<br>job.reset_index(inplace=<span class="hljs-literal">True</span>) <span class="hljs-comment"># 行索引 重置</span><br>job<br></code></pre></td></tr></table></figure></li><li><p>数据中的薪水是一个区间，这里用薪水区间的均值作为相应职位的薪水</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># 处理过程</span><br><span class="hljs-comment">#1、将salary中的字符串均小写化（因为存在8k-16k和8K-16K）</span><br><span class="hljs-comment">#2、运用正则表达式提取出薪资区间</span><br><span class="hljs-comment">#3、将提取出来的数字转化为int型</span><br><span class="hljs-comment">#4、取区间的平均值</span><br>job[<span class="hljs-string">&quot;salary&quot;</span>] = job[<span class="hljs-string">&quot;salary&quot;</span>].<span class="hljs-built_in">str</span>.lower()\<br>               .<span class="hljs-built_in">str</span>.extract(<span class="hljs-string">r&#x27;(\d+)[k]-(\d+)k&#x27;</span>)\<br>               .applymap(<span class="hljs-keyword">lambda</span> x:<span class="hljs-built_in">int</span>(x))\<br>               .mean(axis=<span class="hljs-number">1</span>)<br></code></pre></td></tr></table></figure></li><li><p>从job_detail中提取出技能要求 将技能分为以下几类 Python SQL Tableau Excel SPSS/SAS 处理方式： 如果job_detail中含有上述五类，则赋值为1，不含有则为0</p></li><li><pre><code class="language-python">job[&quot;job_detail&quot;] = job[&quot;job_detail&quot;].str.lower().fillna(&quot;&quot;)  #将字符串小写化，并将缺失值赋值为空字符串job[&quot;Python&quot;] = job[&quot;job_detail&quot;].map(lambda x:1 if ('python' in x) else 0)job[&quot;SQL&quot;] = job[&quot;job_detail&quot;].map(lambda x:1 if ('sql' in x) or ('hive' in x)  else 0)job[&quot;Tableau&quot;] = job[&quot;job_detail&quot;].map(lambda x:1 if 'tableau' in x  else 0)job[&quot;Excel&quot;] = job[&quot;job_detail&quot;].map(lambda x:1 if 'excel' in x  else 0)job['SPSS/SAS'] = job['job_detail'].map(lambda x:1 if ('spss' in x) or ('sas' in x) else 0)<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">    <br>*   处理行业信息<br>    <br>    在行业信息中有多个标签，对其进行处理，筛选最显著的行业标签。<br>    <br>    ```python<br>    def clean_industry(industry):<br>        industry = industry.split(&quot;,&quot;)<br>        if industry[0]==&quot;移动互联网&quot; and len(industry)&gt;1:<br>            return industry[1]<br>        else:<br>            return industry[0]<br>    job[&quot;industryField&quot;] = job.industryField.map(clean_industry)<br></code></pre></td></tr></table></figure></code></pre></li><li><p>数据分析师职位的数据预处理基本完成，后续使用matplotlib进行数据可视化分析。</p></li></ul><h2 id="pandas库的亮点">pandas库的亮点</h2><ul><li>一个快速、高效的<strong>DataFrame</strong>对象，用于数据操作和综合索引；</li><li>用于在内存数据结构和不同格式之间<strong>读写数据</strong>的工具：CSV和文本文件、Microsoft Excel、SQL数据库和快速HDF 5格式；</li><li>智能<strong>数据对齐</strong>和丢失数据的综合处理：在计算中获得基于标签的自动对齐，并轻松地将凌乱的数据操作为有序的形式；</li><li>数据集的<strong>灵活调整</strong>和旋转；</li><li>基于智能标签的<strong>切片、花式索引</strong>和大型数据集的<strong>子集</strong>；</li><li>可以从数据结构中插入和删除列，以实现<strong>大小可变</strong>；</li><li>通过在强大的引擎中<strong>聚合</strong>或转换数据，允许对数据集进行拆分应用组合操作;</li><li>数据集的高性能<strong>合并和连接</strong>；</li><li><strong>层次轴索引</strong>提供了在低维数据结构中处理高维数据的直观方法；</li><li><strong>时间序列</strong>-功能：日期范围生成和频率转换、移动窗口统计、移动窗口线性回归、日期转换和滞后。甚至在不丢失数据的情况下创建特定领域的时间偏移和加入时间序列；</li><li>对<strong>性能进行了高度优化</strong>，用Cython或C编写了关键代码路径。</li><li>Python与pandas在广泛的<strong>学术和商业</strong>领域中使用，包括金融，神经科学，经济学，统计学，广告，网络分析，等等</li><li>学到这里，体会一会pandas库的亮点，如果对哪些还不熟悉，请对之前知识点再次进行复习。</li></ul>]]></content>
      
      
      <categories>
          
          <category> program </category>
          
          <category> 机器学习 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>NumPy科学计算库</title>
      <link href="/posts/e1ca7594.html"/>
      <url>/posts/e1ca7594.html</url>
      
        <content type="html"><![CDATA[<p>[toc]</p><h1>NumPy科学计算库</h1><h3 id="课程介绍">课程介绍</h3><p>NumPy（Numerical Python）是Python的一种开源的数值计算扩展。提供多维数组对象，各种派生对象（如掩码数组和矩阵），这种工具可用来存储和处理大型矩阵，比Python自身的嵌套列表（nested list structure)结构要高效的多（该结构也可以用来表示矩阵（matrix）），支持大量的维度数组与矩阵运算，此外也针对数组运算提供大量的数学函数库，包括数学、逻辑、形状操作、排序、选择、输入输出、离散傅立叶变换、基本线性代数，基本统计运算和随机模拟等等。</p><ul><li><p>几乎所有从事Python工作的数据分析师都利用NumPy的强大功能。</p><ul><li>强大的N维数组</li><li>成熟的广播功能</li><li>用于整合C/C++和Fortran代码的工具包</li><li>NumPy提供了全面的数学功能、随机数生成器和线性代数功能</li></ul></li><li><p>安装Python库</p></li><li><p>第一种方式：</p><ul><li>pip install jupyter -i <a href="https://pypi.tuna.tsinghua.edu.cn/simple">https://pypi.tuna.tsinghua.edu.cn/simple</a></li><li>pip install numpy -i <a href="https://pypi.tuna.tsinghua.edu.cn/simple">https://pypi.tuna.tsinghua.edu.cn/simple</a></li></ul></li><li><p>第二种方式：</p><ul><li><p>直接安装<a href="https://www.anaconda.com/products/individual#Downloads">anaconda下载</a></p></li><li><p>注意：Add Path！！！ 添加一下环境变量~</p></li><li><p>百度网盘链接: <a href="https://pan.baidu.com/s/1sQ8LMH6q8ezVUzNjSCtgyQ">https://pan.baidu.com/s/1sQ8LMH6q8ezVUzNjSCtgyQ</a> 提取码: sm7m</p></li></ul></li><li><p>启动终端</p><ul><li><p>Windows----&gt; 快捷键：<strong>win + R</strong> -----&gt;输入：<strong>cmd</strong>回车------&gt;命令行出来</p></li><li><p>Mac ----&gt;启动终端</p></li></ul></li><li><p>启动jupyter</p><ul><li>进入终端输入指令:<strong>jupyter notebook</strong></li><li>在哪里启动jupyter启动，浏览器上的目录，对应哪里，windows默认路径是：<strong>C:\Users\lufengkun</strong></li><li><strong>C:\Users\xxx</strong></li></ul></li></ul><h2 id="第一部分-基本操作">第一部分 基本操作</h2><h3 id="第一节-数组创建">第一节 数组创建</h3><p>创建数组的最简单的方法就是使用array函数，将Python下的list转换为ndarray。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<br>l = [<span class="hljs-number">1</span>,<span class="hljs-number">3</span>,<span class="hljs-number">5</span>,<span class="hljs-number">7</span>,<span class="hljs-number">9</span>] <span class="hljs-comment"># 列表</span><br>arr = np.array(l) <span class="hljs-comment"># 将列表转换为NumPy数组</span><br>arr <span class="hljs-comment"># 数据一样，NumPy数组的方法，功能更加强大</span><br><span class="hljs-comment"># 输出为</span><br><span class="hljs-comment"># array([1, 3, 5, 7, 9])</span><br></code></pre></td></tr></table></figure><p>我们可以利用np中的一些内置函数来创建数组，比如我们创建全0的数组，也可以创建全1数组，全是其他数字的数组，或者等差数列数组，正态分布数组，随机数。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<br>arr1 = np.ones(<span class="hljs-number">10</span>) <span class="hljs-comment"># 输出为：array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])</span><br>arr2 = np.zeros(<span class="hljs-number">10</span>) <span class="hljs-comment"># 输出为： array([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.])</span><br>arr3 = np.full(shape = [<span class="hljs-number">2</span>,<span class="hljs-number">3</span>],fill_value=<span class="hljs-number">2.718</span>) <br><span class="hljs-comment"># 输出为：</span><br><span class="hljs-comment"># array([[2.718, 2.718, 2.718],</span><br><span class="hljs-comment">#       [2.718, 2.718, 2.718]])</span><br>arr4 = np.arange(start = <span class="hljs-number">0</span>,stop = <span class="hljs-number">20</span>,step = <span class="hljs-number">2</span>) <br><span class="hljs-comment"># 等差数列 输出为：array([ 0,  2,  4,  6,  8, 10, 12, 14, 16, 18])</span><br>arr5 = np.linspace(start =<span class="hljs-number">0</span>,stop = <span class="hljs-number">9</span>,num = <span class="hljs-number">10</span>) <br><span class="hljs-comment"># 等差数列 输出为：array([0., 1., 2., 3., 4., 5., 6., 7., 8., 9.])</span><br>arr6 = np.random.randint(<span class="hljs-number">0</span>,<span class="hljs-number">100</span>,size = <span class="hljs-number">10</span>) <br><span class="hljs-comment"># int随机数 输出为：array([ 4,  8, 79, 62, 34, 35,  2, 65, 47, 18])</span><br>arr7 = np.random.randn(<span class="hljs-number">5</span>) <br><span class="hljs-comment"># 正态分布 输出为：array([ 0.57807872,  0.37922855,  2.37936837, -0.28688769,  0.2882854 ])</span><br>arr8 = np.random.random(size = <span class="hljs-number">5</span>) <br><span class="hljs-comment"># float 随机数 输出为：array([0.59646412, 0.37960586, 0.38077327, 0.76983539, 0.22689201])</span><br></code></pre></td></tr></table></figure><h3 id="第二节-查看操作">第二节 查看操作</h3><ul><li>jupyter扩展插件（不安装，已经不兼容了）<ul><li>pip install jupyter_contrib_nbextensions -i <a href="https://pypi.tuna.tsinghua.edu.cn/simple">https://pypi.tuna.tsinghua.edu.cn/simple</a></li><li>pip install jupyter_nbextensions_configurator -i <a href="https://pypi.tuna.tsinghua.edu.cn/simple">https://pypi.tuna.tsinghua.edu.cn/simple</a></li><li>jupyter contrib nbextension install --user</li><li>jupyter nbextensions_configurator enable --user</li><li><strong>退出，重新进入jupyter notebook就可以了</strong></li></ul></li></ul><p>NumPy的数组类称为ndarray，也被称为别名 array。请注意，numpy.array这与标准Python库类不同array.array，后者仅处理一维数组且功能较少。ndarray对象的重要属性是</p><h4 id="1-2-1-数组的轴数、维度">1.2.1 数组的轴数、维度</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np <br>arr = np.random.randint(<span class="hljs-number">0</span>,<span class="hljs-number">100</span>,size = (<span class="hljs-number">3</span>,<span class="hljs-number">4</span>,<span class="hljs-number">5</span>))<br>arr.ndim <span class="hljs-comment"># 输出 3</span><br></code></pre></td></tr></table></figure><h4 id="1-2-2-数组尺寸形状">1.2.2 数组尺寸形状</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np <br>arr = np.random.randint(<span class="hljs-number">0</span>,<span class="hljs-number">100</span>,size = (<span class="hljs-number">3</span>,<span class="hljs-number">4</span>,<span class="hljs-number">5</span>))<br>arr.shape <span class="hljs-comment"># 输出 (3,4,5)</span><br></code></pre></td></tr></table></figure><h4 id="1-2-3-数组元素的总数">1.2.3 数组元素的总数</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np <br>arr = np.random.randint(<span class="hljs-number">0</span>,<span class="hljs-number">100</span>,size = (<span class="hljs-number">3</span>,<span class="hljs-number">4</span>,<span class="hljs-number">5</span>))<br>arr.size <span class="hljs-comment"># 输出 3*4*5 = 60</span><br></code></pre></td></tr></table></figure><h4 id="1-2-4-数据类型">1.2.4 数据类型</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np <br>arr = np.random.randint(<span class="hljs-number">0</span>,<span class="hljs-number">100</span>,size = (<span class="hljs-number">3</span>,<span class="hljs-number">4</span>,<span class="hljs-number">5</span>))<br>arr.dtype <span class="hljs-comment"># 输出 dtype(&#x27;int64&#x27;)</span><br></code></pre></td></tr></table></figure><h4 id="1-2-5-数组中每个元素的大小（以字节为单位）">1.2.5 数组中每个元素的大小（以字节为单位）</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np <br>arr = np.random.randint(<span class="hljs-number">0</span>,<span class="hljs-number">100</span>,size = (<span class="hljs-number">3</span>,<span class="hljs-number">4</span>,<span class="hljs-number">5</span>))<br>arr.itemsize <span class="hljs-comment">#输出是 8 ，因为数据类型是int64，64位，一个字节是8位，所以64/8 = 8</span><br></code></pre></td></tr></table></figure><h3 id="第三节-文件IO操作">第三节 文件IO操作</h3><h4 id="1-3-1-保存数组">1.3.1 保存数组</h4><p>save方法保存ndarray到一个npy文件，也可以使用savez将多个array保存到一个.npz文件中</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs python">x = np.random.randn(<span class="hljs-number">5</span>)<br>y = np.arange(<span class="hljs-number">0</span>,<span class="hljs-number">10</span>,<span class="hljs-number">1</span>)<br><span class="hljs-comment">#save方法可以存一个ndarray</span><br>np.save(<span class="hljs-string">&quot;x_arr&quot;</span>,x)<br><span class="hljs-comment">#如果要存多个数组，要是用savez方法，保存时以key-value形式保存，key任意（xarr、yarr）</span><br>np.savez(<span class="hljs-string">&quot;some_array.npz&quot;</span>,xarr = x,yarr=y)<br></code></pre></td></tr></table></figure><h4 id="1-3-2-读取">1.3.2 读取</h4><p>load方法来读取存储的数组，如果是.npz文件的话，读取之后相当于形成了一个key-value类型的变量，通过保存时定义的key来获取相应的array</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs python">np.load(<span class="hljs-string">&#x27;x_arr.npy&#x27;</span>) <span class="hljs-comment"># 直接加载</span><br><br><span class="hljs-comment"># 通过key获取保存的数组数据</span><br>np.load(<span class="hljs-string">&#x27;some_array.npz&#x27;</span>)[<span class="hljs-string">&#x27;yarr&#x27;</span>]<br></code></pre></td></tr></table></figure><h4 id="1-3-3-读写csv、txt文件">1.3.3 读写csv、txt文件</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs python">arr = np.random.randint(<span class="hljs-number">0</span>,<span class="hljs-number">10</span>,size = (<span class="hljs-number">3</span>,<span class="hljs-number">4</span>))<br><span class="hljs-comment">#储存数组到txt文件</span><br>np.savetxt(<span class="hljs-string">&quot;arr.csv&quot;</span>,arr,delimiter=<span class="hljs-string">&#x27;,&#x27;</span>) <span class="hljs-comment"># 文件后缀是txt也是一样的</span><br><span class="hljs-comment">#读取txt文件，delimiter为分隔符，dtype为数据类型</span><br>np.loadtxt(<span class="hljs-string">&quot;arr.csv&quot;</span>,delimiter=<span class="hljs-string">&#x27;,&#x27;</span>,dtype=np.int32)<br></code></pre></td></tr></table></figure><h2 id="第二部分-数据类型">第二部分 数据类型</h2><p>ndarray的数据类型：</p><ul><li>int: int8、uint8、int16、int32、int64</li><li>float: float16、float32、float64</li><li>str</li></ul><h3 id="array创建时，指定">array创建时，指定</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<br>np.array([<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">5</span>,<span class="hljs-number">8</span>,<span class="hljs-number">2</span>],dtype = <span class="hljs-string">&#x27;float32&#x27;</span>) <br><span class="hljs-comment"># 输出 ：array([1., 2., 5., 8., 2.], dtype=float32)</span><br></code></pre></td></tr></table></figure><h3 id="asarray转换时指定">asarray转换时指定</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<br>arr = [<span class="hljs-number">1</span>,<span class="hljs-number">3</span>,<span class="hljs-number">5</span>,<span class="hljs-number">7</span>,<span class="hljs-number">2</span>,<span class="hljs-number">9</span>,<span class="hljs-number">0</span>]<br><span class="hljs-comment"># asarray 将列表进行变换</span><br>np.asarray(arr,dtype = <span class="hljs-string">&#x27;float32&#x27;</span>) <br><span class="hljs-comment"># 输出：array([1., 3., 5., 7., 2., 9., 0.], dtype=float32)</span><br></code></pre></td></tr></table></figure><h3 id="数据类型转换astype">数据类型转换astype</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<br>arr = np.random.randint(<span class="hljs-number">0</span>,<span class="hljs-number">10</span>,size = <span class="hljs-number">5</span>,dtype = <span class="hljs-string">&#x27;int16&#x27;</span>) <br><span class="hljs-comment"># 输出：array([6, 6, 6, 6, 3], dtype=int16)</span><br><span class="hljs-comment"># 使用astype进行转换</span><br>arr.astype(<span class="hljs-string">&#x27;float32&#x27;</span>) <span class="hljs-comment"># 输出：array([1., 4., 0., 6., 6.], dtype=float32)</span><br></code></pre></td></tr></table></figure><h2 id="第三部分-数组运算">第三部分 数组运算</h2><h3 id="加减乘除幂运算">加减乘除幂运算</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<br>arr1 = np.array([<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>,<span class="hljs-number">4</span>,<span class="hljs-number">5</span>])<br>arr2 = np.array([<span class="hljs-number">2</span>,<span class="hljs-number">3</span>,<span class="hljs-number">1</span>,<span class="hljs-number">5</span>,<span class="hljs-number">9</span>])<br>arr1 - arr2 <span class="hljs-comment"># 减法</span><br>arr1 * arr2 <span class="hljs-comment"># 乘法</span><br>arr1 / arr2 <span class="hljs-comment"># 除法</span><br>arr1**arr2 <span class="hljs-comment"># 两个星号表示幂运算</span><br></code></pre></td></tr></table></figure><h3 id="逻辑运算">逻辑运算</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<br>arr1 = np.array([<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>,<span class="hljs-number">4</span>,<span class="hljs-number">5</span>])<br>arr2 = np.array([<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>,<span class="hljs-number">5</span>])<br>arr1 &lt; <span class="hljs-number">5</span><br>arr1 &gt;= <span class="hljs-number">5</span><br>arr1 == <span class="hljs-number">5</span><br>arr1 == arr2<br>arr1 &gt; arr2<br></code></pre></td></tr></table></figure><h3 id="数组与标量计算">数组与标量计算</h3><p>数组与标量的算术运算也会将标量值传播到各个元素</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<br>arr = np.arange(<span class="hljs-number">1</span>,<span class="hljs-number">10</span>)<br><span class="hljs-number">1</span>/arr<br>arr+<span class="hljs-number">5</span><br>arr*<span class="hljs-number">5</span><br></code></pre></td></tr></table></figure><h3 id="、-、-操作">*=、+=、-=操作</h3><p>某些操作（例如+=和*=）只会修改现有数组，而不是创建一个新数组。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<br>arr1 = np.arange(<span class="hljs-number">5</span>)<br>arr1 +=<span class="hljs-number">5</span><br>arr1 -=<span class="hljs-number">5</span><br>arr1 *=<span class="hljs-number">5</span><br><span class="hljs-comment"># arr1 /=5 不支持运算</span><br></code></pre></td></tr></table></figure><h2 id="第四部分-复制和视图">第四部分 复制和视图</h2><p>在操作数组时，有时会将其数据复制到新数组中，有时不复制。</p><p>对于初学者来说，这通常会引起混乱。有以下三种情况</p><h3 id="完全没有复制">完全没有复制</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<br>a = np.random.randint(<span class="hljs-number">0</span>,<span class="hljs-number">100</span>,size = (<span class="hljs-number">4</span>,<span class="hljs-number">5</span>))<br>b = a<br>a <span class="hljs-keyword">is</span> b <span class="hljs-comment"># 返回True a和b是两个不同名字对应同一个内存对象</span><br>b[<span class="hljs-number">0</span>,<span class="hljs-number">0</span>] = <span class="hljs-number">1024</span> <span class="hljs-comment"># 命运共同体</span><br>display(a,b)<br></code></pre></td></tr></table></figure><h3 id="查看或浅拷贝">查看或浅拷贝</h3><p>不同的数组对象可以共享相同的数据。该view方法创建一个查看相同数据的新数组对象</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<br>a = np.random.randint(<span class="hljs-number">0</span>,<span class="hljs-number">100</span>,size = (<span class="hljs-number">4</span>,<span class="hljs-number">5</span>))<br>b = a.view() <span class="hljs-comment"># 使用a中的数据创建一个新数组对象</span><br>a <span class="hljs-keyword">is</span> b <span class="hljs-comment"># 返回False a和b是两个不同名字对应同一个内存对象</span><br>b.base <span class="hljs-keyword">is</span> a <span class="hljs-comment"># 返回True，b视图的根数据和a一样</span><br>b.flags.owndata <span class="hljs-comment"># 返回False b中的数据不是其自己的</span><br>a.flags.owndata <span class="hljs-comment"># 返回True a中的数据是其自己的</span><br>b[<span class="hljs-number">0</span>,<span class="hljs-number">0</span>] = <span class="hljs-number">1024</span> <span class="hljs-comment"># a和b的数据都发生改变</span><br>display(a,b)<br></code></pre></td></tr></table></figure><h3 id="深拷贝">深拷贝</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<br>a = np.random.randint(<span class="hljs-number">0</span>,<span class="hljs-number">100</span>,size = (<span class="hljs-number">4</span>,<span class="hljs-number">5</span>))<br>b = a.copy()<br>b <span class="hljs-keyword">is</span> a <span class="hljs-comment"># 返回False</span><br>b.base <span class="hljs-keyword">is</span> a <span class="hljs-comment"># 返回False</span><br>b.flags.owndata <span class="hljs-comment"># 返回True</span><br>a.flags.owndata <span class="hljs-comment"># 返回True</span><br>b[<span class="hljs-number">0</span>,<span class="hljs-number">0</span>] = <span class="hljs-number">1024</span> <span class="hljs-comment"># b改变，a不变，分道扬镳</span><br>display(a,b)<br></code></pre></td></tr></table></figure><ul><li><p>copy应该在不再需要原来的数组情况下，切片后调用。例如，假设a是一个巨大的中间结果，而最终结果b仅包含的一小部分a，则在b使用切片进行构造时应制作一个深拷贝：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<br>a = np.arange(<span class="hljs-number">1e8</span>)<br>b = a[::<span class="hljs-number">1000000</span>].copy() <span class="hljs-comment"># 每100万个数据中取一个数据</span><br><span class="hljs-keyword">del</span> a <span class="hljs-comment"># 不在需要a，删除占大内存的a</span><br>b.shape <span class="hljs-comment"># shape(100,)</span><br></code></pre></td></tr></table></figure></li></ul><h2 id="第五部分-索引、切片和迭代">第五部分 索引、切片和迭代</h2><h3 id="第一节-基本索引和切片">第一节 基本索引和切片</h3><p>numpy中数组切片是原始数组的视图，这意味着数据不会被复制，视图上任何数据的修改都会反映到原数组上</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs python">arr = np.array([<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>,<span class="hljs-number">4</span>,<span class="hljs-number">5</span>,<span class="hljs-number">6</span>,<span class="hljs-number">7</span>,<span class="hljs-number">8</span>,<span class="hljs-number">9</span>])<br>arr[<span class="hljs-number">5</span>] <span class="hljs-comment">#索引 输出 5</span><br>arr[<span class="hljs-number">5</span>:<span class="hljs-number">8</span>] <span class="hljs-comment">#切片输出：array([5, 6, 7])</span><br>arr[<span class="hljs-number">2</span>::<span class="hljs-number">2</span>] <span class="hljs-comment"># 从索引2开始每两个中取一个 输出 array([2, 4, 6, 8])</span><br>arr[::<span class="hljs-number">3</span>] <span class="hljs-comment"># 不写索引默认从0开始，每3个中取一个 输出为 array([0, 3, 6, 9])</span><br>arr[<span class="hljs-number">1</span>:<span class="hljs-number">7</span>:<span class="hljs-number">2</span>] <span class="hljs-comment"># 从索引1开始到索引7结束，左闭右开，每2个数中取一个 输出 array([1, 3, 5])</span><br>arr[::-<span class="hljs-number">1</span>] <span class="hljs-comment"># 倒序 输出 array([9, 8, 7, 6, 5, 4, 3, 2, 1, 0])</span><br>arr[::-<span class="hljs-number">2</span>] <span class="hljs-comment"># 倒序 每两个取一个 输出  array([9, 7, 5, 3, 1])</span><br>arr[<span class="hljs-number">5</span>:<span class="hljs-number">8</span>]=<span class="hljs-number">12</span> <span class="hljs-comment"># 切片赋值会赋值到每个元素上，与列表操作不同</span><br>temp = arr[<span class="hljs-number">5</span>:<span class="hljs-number">8</span>]<br>temp[<span class="hljs-number">1</span>] = <span class="hljs-number">1024</span><br>arr <span class="hljs-comment"># 输出：array([   0,    1,    2,    3,    4,   12, 1024,   12,    8,    9])</span><br></code></pre></td></tr></table></figure><p>对于二维数组或者高维数组，我们可以按照之前的知识来索引，当然也可以传入一个以逗号隔开的索引列表来选区单个或多个元素</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs python">arr2d = np.array([[<span class="hljs-number">1</span>,<span class="hljs-number">3</span>,<span class="hljs-number">5</span>],[<span class="hljs-number">2</span>,<span class="hljs-number">4</span>,<span class="hljs-number">6</span>],[-<span class="hljs-number">2</span>,-<span class="hljs-number">7</span>,-<span class="hljs-number">9</span>],[<span class="hljs-number">6</span>,<span class="hljs-number">6</span>,<span class="hljs-number">6</span>]]) <span class="hljs-comment"># 二维数组 shape(3,4)</span><br>arr2d[<span class="hljs-number">0</span>,-<span class="hljs-number">1</span>] <span class="hljs-comment">#索引 等于arr2d[0][-1] 输出 5</span><br>arr2d[<span class="hljs-number">0</span>,<span class="hljs-number">2</span>]  <span class="hljs-comment">#索引 等于arr2d[0][2] ==  arr2d[0][-1] 输出 5</span><br><br>arr2d[:<span class="hljs-number">2</span>,-<span class="hljs-number">2</span>:] <span class="hljs-comment">#切片 第一维和第二维都进行切片 等于arr2d[:2][:,1:] </span><br>arr2d[:<span class="hljs-number">2</span>,<span class="hljs-number">1</span>:] <span class="hljs-comment">#切片 1 == -2 一个是正序，另个一是倒序，对应相同的位置</span><br><span class="hljs-comment"># 输出：</span><br><span class="hljs-comment">#array([[3, 5],</span><br><span class="hljs-comment">#       [4, 6]])</span><br></code></pre></td></tr></table></figure><h3 id="第二节-花式索引和索引技巧">第二节 花式索引和索引技巧</h3><ul><li>整数数组进行索引即花式索引,其和切片不一样，它总是将数据复制到新数组中</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<br><span class="hljs-comment">#一维</span><br>arr1 = np.array([<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>,<span class="hljs-number">4</span>,<span class="hljs-number">5</span>,<span class="hljs-number">6</span>,<span class="hljs-number">7</span>,<span class="hljs-number">8</span>,<span class="hljs-number">9</span>,<span class="hljs-number">10</span>])<br>arr2 = arr1[[<span class="hljs-number">1</span>,<span class="hljs-number">3</span>,<span class="hljs-number">3</span>,<span class="hljs-number">5</span>,<span class="hljs-number">7</span>,<span class="hljs-number">7</span>,<span class="hljs-number">7</span>]] <span class="hljs-comment"># 输出 array([2, 4, 4, 6, 8, 8, 8])</span><br>arr2[-<span class="hljs-number">1</span>] = <span class="hljs-number">1024</span> <span class="hljs-comment"># 修改值，不影响arr1</span><br><span class="hljs-comment">#二维</span><br>arr2d = np.array([[<span class="hljs-number">1</span>,<span class="hljs-number">3</span>,<span class="hljs-number">5</span>,<span class="hljs-number">7</span>,<span class="hljs-number">9</span>],[<span class="hljs-number">2</span>,<span class="hljs-number">4</span>,<span class="hljs-number">6</span>,<span class="hljs-number">8</span>,<span class="hljs-number">10</span>],[<span class="hljs-number">12</span>,<span class="hljs-number">18</span>,<span class="hljs-number">22</span>,<span class="hljs-number">23</span>,<span class="hljs-number">37</span>],[<span class="hljs-number">123</span>,<span class="hljs-number">55</span>,<span class="hljs-number">17</span>,<span class="hljs-number">88</span>,<span class="hljs-number">103</span>]]) <span class="hljs-comment">#shape(4,5)</span><br>arr2d[[<span class="hljs-number">1</span>,<span class="hljs-number">3</span>]] <span class="hljs-comment"># 获取第二行和第四行，索引从0开始的所以1对应第二行 </span><br><span class="hljs-comment"># 输出 array([[  2,   4,   6,   8,  10],</span><br><span class="hljs-comment">#            [123,  55,  17,  88, 103]])</span><br>arr2d[([<span class="hljs-number">1</span>,<span class="hljs-number">3</span>],[<span class="hljs-number">2</span>,<span class="hljs-number">4</span>])] <span class="hljs-comment"># 相当于arr2d[1,2]获取一个元素,arr2d[3,4]获取另一个元素</span><br><span class="hljs-comment"># 输出为 array([  6, 103])</span><br><span class="hljs-comment"># 选择一个区域</span><br>arr2d[np.ix_([<span class="hljs-number">1</span>,<span class="hljs-number">3</span>,<span class="hljs-number">3</span>,<span class="hljs-number">3</span>],[<span class="hljs-number">2</span>,<span class="hljs-number">4</span>,<span class="hljs-number">4</span>])] <span class="hljs-comment"># 相当于 arr2d[[1,3,3,3]][:,[2,4,4]]</span><br>arr2d[[<span class="hljs-number">1</span>,<span class="hljs-number">3</span>,<span class="hljs-number">3</span>,<span class="hljs-number">3</span>]][:,[<span class="hljs-number">2</span>,<span class="hljs-number">4</span>,<span class="hljs-number">4</span>]]<br><span class="hljs-comment"># ix_()函数可用于组合不同的向量</span><br><span class="hljs-comment"># 第一个列表存的是待提取元素的行标，第二个列表存的是待提取元素的列标</span><br><span class="hljs-comment"># 输出为</span><br><span class="hljs-comment"># array([[  6,  10,  10],</span><br><span class="hljs-comment">#        [ 17, 103, 103],</span><br><span class="hljs-comment">#        [ 17, 103, 103],</span><br><span class="hljs-comment">#        [ 17, 103, 103]])</span><br></code></pre></td></tr></table></figure><ul><li>boolean值索引</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs python">names = np.array([<span class="hljs-string">&#x27;softpo&#x27;</span>,<span class="hljs-string">&#x27;Brandon&#x27;</span>,<span class="hljs-string">&#x27;Will&#x27;</span>,<span class="hljs-string">&#x27;Michael&#x27;</span>,<span class="hljs-string">&#x27;Will&#x27;</span>,<span class="hljs-string">&#x27;Ella&#x27;</span>,<span class="hljs-string">&#x27;Daniel&#x27;</span>,<span class="hljs-string">&#x27;softpo&#x27;</span>,<span class="hljs-string">&#x27;Will&#x27;</span>,<span class="hljs-string">&#x27;Brandon&#x27;</span>])<br>cond1 = names == <span class="hljs-string">&#x27;Will&#x27;</span><br>cond1 <br><span class="hljs-comment"># 输出array([False, False,  True, False,  True, False, False, False,  True, False])</span><br>names[cond1] <span class="hljs-comment"># array([&#x27;Will&#x27;, &#x27;Will&#x27;, &#x27;Will&#x27;], dtype=&#x27;&lt;U7&#x27;)</span><br>arr = np.random.randint(<span class="hljs-number">0</span>,<span class="hljs-number">100</span>,size = (<span class="hljs-number">10</span>,<span class="hljs-number">8</span>)) <span class="hljs-comment"># 0~100随机数</span><br>cond2 = arr &gt; <span class="hljs-number">90</span> <br><span class="hljs-comment"># 找到所有大于90的索引，返回boolean类型的数组 shape(10,8)，大于返回True，否则False</span><br>arr[cond2] <span class="hljs-comment"># 返回数据全部是大于90的</span><br></code></pre></td></tr></table></figure><h2 id="第六部分-形状操作">第六部分 形状操作</h2><h3 id="数组变形">数组变形</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<br>arr1 = np.random.randint(<span class="hljs-number">0</span>,<span class="hljs-number">10</span>,size = (<span class="hljs-number">3</span>,<span class="hljs-number">4</span>,<span class="hljs-number">5</span>))<br>arr2 = arr1.reshape(<span class="hljs-number">12</span>,<span class="hljs-number">5</span>) <span class="hljs-comment"># 形状改变，返回新数组</span><br>arr3 = arr1.reshape(-<span class="hljs-number">1</span>,<span class="hljs-number">5</span>) <span class="hljs-comment"># 自动“整形”，自动计算</span><br></code></pre></td></tr></table></figure><h3 id="数组转置">数组转置</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<br>arr1 = np.random.randint(<span class="hljs-number">0</span>,<span class="hljs-number">10</span>,size = (<span class="hljs-number">3</span>,<span class="hljs-number">5</span>)) <span class="hljs-comment"># shape(3,5)</span><br>arr1.T <span class="hljs-comment"># shape(5,3) 转置</span><br>arr2 = np.random.randint(<span class="hljs-number">0</span>,<span class="hljs-number">10</span>,size = (<span class="hljs-number">3</span>,<span class="hljs-number">6</span>,<span class="hljs-number">4</span>)) <span class="hljs-comment"># shape(3,6,4)</span><br>np.transpose(arr2,axes=(<span class="hljs-number">2</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>)) <span class="hljs-comment"># transpose改变数组维度 shape(4,3,6)</span><br></code></pre></td></tr></table></figure><h3 id="数组堆叠">数组堆叠</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<br>arr1 = np.array([[<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>]])<br>arr2 = np.array([[<span class="hljs-number">4</span>,<span class="hljs-number">5</span>,<span class="hljs-number">6</span>]])<br>np.concatenate([arr1,arr2],axis = <span class="hljs-number">0</span>) <br><span class="hljs-comment"># 串联合并shape(2,3) axis = 0表示第一维串联 输出为</span><br><span class="hljs-comment"># array([[1, 2, 3],</span><br><span class="hljs-comment">#        [4, 5, 6]])</span><br>np.concatenate([arr1,arr2],axis = <span class="hljs-number">1</span>) <br><span class="hljs-comment"># shape(1,6) axis = 1表示第二维串联 输出为：array([[1, 2, 3, 4, 5, 6]])</span><br><br>np.hstack((arr1,arr2)) <span class="hljs-comment"># 水平方向堆叠 输出为：array([[1, 2, 3, 4, 5, 6]])</span><br>np.vstack((arr1,arr2)) <br><span class="hljs-comment"># 竖直方向堆叠，输出为：</span><br><span class="hljs-comment"># array([[1, 2, 3],</span><br><span class="hljs-comment">#        [4, 5, 6]])</span><br></code></pre></td></tr></table></figure><h3 id="split数组拆分">split数组拆分</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<br>arr = np.random.randint(<span class="hljs-number">0</span>,<span class="hljs-number">10</span>,size = (<span class="hljs-number">6</span>,<span class="hljs-number">5</span>)) <span class="hljs-comment"># shape(6,5)</span><br>np.split(arr,indices_or_sections=<span class="hljs-number">2</span>,axis = <span class="hljs-number">0</span>) <span class="hljs-comment"># 在第一维（6）平均分成两份 </span><br>np.split(arr,indices_or_sections=[<span class="hljs-number">2</span>,<span class="hljs-number">3</span>],axis = <span class="hljs-number">1</span>) <span class="hljs-comment"># 在第二维（5）以索引2，3为断点分割成3份</span><br><br>np.vsplit(arr,indices_or_sections=<span class="hljs-number">3</span>) <span class="hljs-comment"># 在竖直方向平均分割成3份</span><br>np.hsplit(arr,indices_or_sections=[<span class="hljs-number">1</span>,<span class="hljs-number">4</span>]) <span class="hljs-comment"># 在水平方向，以索引1，4为断点分割成3份</span><br></code></pre></td></tr></table></figure><h2 id="第七部分-广播机制">第七部分 广播机制</h2><p>当两个数组的形状并不相同的时候，我们可以通过扩展数组的方法来实现相加、相减、相乘等操作，这种机制叫做广播（broadcasting）</p><h3 id="一维数组广播">一维数组广播</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<br>arr1 = np.sort(np.array([<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>]*<span class="hljs-number">3</span>)).reshape(<span class="hljs-number">4</span>,<span class="hljs-number">3</span>) <span class="hljs-comment">#shape(4,3)</span><br>arr2 = np.array([<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>]) <span class="hljs-comment"># shape(3,)</span><br>arr3 = arr1 + arr2 <span class="hljs-comment"># arr2进行广播复制4份 shape(4,3)</span><br>arr3<br></code></pre></td></tr></table></figure><h3 id="二维数组的广播">二维数组的广播</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<br>arr1 = np.sort(np.array([<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>]*<span class="hljs-number">3</span>)).reshape(<span class="hljs-number">4</span>,<span class="hljs-number">3</span>) <span class="hljs-comment"># shape(4,3)</span><br>arr2 = np.array([[<span class="hljs-number">1</span>],[<span class="hljs-number">2</span>],[<span class="hljs-number">3</span>],[<span class="hljs-number">4</span>]]) <span class="hljs-comment"># shape(4,1)</span><br>arr3 = arr1 + arr2 <span class="hljs-comment"># arr2 进行广播复制3份 shape(4,3)</span><br>arr3<br></code></pre></td></tr></table></figure><h3 id="三维数组广播">三维数组广播</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<br>arr1 = np.array([<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>,<span class="hljs-number">4</span>,<span class="hljs-number">5</span>,<span class="hljs-number">6</span>,<span class="hljs-number">7</span>]*<span class="hljs-number">3</span>).reshape(<span class="hljs-number">3</span>,<span class="hljs-number">4</span>,<span class="hljs-number">2</span>) <span class="hljs-comment">#shape(3,4,2)</span><br>arr2 = np.array([<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>,<span class="hljs-number">4</span>,<span class="hljs-number">5</span>,<span class="hljs-number">6</span>,<span class="hljs-number">7</span>]).reshape(<span class="hljs-number">4</span>,<span class="hljs-number">2</span>) <span class="hljs-comment">#shape(4,2)</span><br>arr3 = arr1 + arr2 <span class="hljs-comment"># arr2数组在0维上复制3份 shape(3,4,2)</span><br>arr3<br></code></pre></td></tr></table></figure><h2 id="第八部分-通用函数">第八部分 通用函数</h2><h3 id="第一节-通用函数：元素级数字函数">第一节 通用函数：元素级数字函数</h3><p>abs、sqrt、square、exp、log、sin、cos、tan，maxinmum、minimum、all、any、inner、clip、round、trace、ceil、floor</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<br>arr1 = np.array([<span class="hljs-number">1</span>,<span class="hljs-number">4</span>,<span class="hljs-number">8</span>,<span class="hljs-number">9</span>,<span class="hljs-number">16</span>,<span class="hljs-number">25</span>])<br>np.sqrt(arr1) <span class="hljs-comment"># 开平方</span><br>np.square(arr1) <span class="hljs-comment"># 平方</span><br>np.clip(arr1,<span class="hljs-number">2</span>,<span class="hljs-number">16</span>) <span class="hljs-comment"># 输出 array([ 2,  4,  8,  9, 16, 16])</span><br><br>x = np.array([<span class="hljs-number">1</span>,<span class="hljs-number">5</span>,<span class="hljs-number">2</span>,<span class="hljs-number">9</span>,<span class="hljs-number">3</span>,<span class="hljs-number">6</span>,<span class="hljs-number">8</span>])<br>y = np.array([<span class="hljs-number">2</span>,<span class="hljs-number">4</span>,<span class="hljs-number">3</span>,<span class="hljs-number">7</span>,<span class="hljs-number">1</span>,<span class="hljs-number">9</span>,<span class="hljs-number">0</span>])<br>np.maximum(x,y) <span class="hljs-comment"># 返回两个数组中的比较大的值</span><br>arr2 = np.random.randint(<span class="hljs-number">0</span>,<span class="hljs-number">10</span>,size = (<span class="hljs-number">5</span>,<span class="hljs-number">5</span>))<br>np.inner(arr2[<span class="hljs-number">0</span>],arr2) <span class="hljs-comment">#返回一维数组向量内积</span><br></code></pre></td></tr></table></figure><h3 id="第二节-where函数">第二节 where函数</h3><p>where 函数，三个参数，条件为真时选择值的数组，条件为假时选择值的数组</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<br>arr1 = np.array([<span class="hljs-number">1</span>,<span class="hljs-number">3</span>,<span class="hljs-number">5</span>,<span class="hljs-number">7</span>,<span class="hljs-number">9</span>])<br>arr2 = np.array([<span class="hljs-number">2</span>,<span class="hljs-number">4</span>,<span class="hljs-number">6</span>,<span class="hljs-number">8</span>,<span class="hljs-number">10</span>])<br>cond = np.array([<span class="hljs-literal">True</span>,<span class="hljs-literal">False</span>,<span class="hljs-literal">True</span>,<span class="hljs-literal">True</span>,<span class="hljs-literal">False</span>])<br>np.where(cond,arr1,arr2) <span class="hljs-comment"># True选择arr1，False选择arr2的值</span><br><span class="hljs-comment"># 输出 array([ 1,  4,  5,  7, 10])</span><br><br>arr3 = np.random.randint(<span class="hljs-number">0</span>,<span class="hljs-number">30</span>,size = <span class="hljs-number">20</span>)<br>np.where(arr3 &lt; <span class="hljs-number">15</span>,arr3,-<span class="hljs-number">15</span>) <span class="hljs-comment"># 小于15还是自身的值，大于15设置成-15</span><br></code></pre></td></tr></table></figure><h3 id="第三节-排序方法">第三节 排序方法</h3><p>np中还提供了排序方法，排序方法是就地排序，即直接改变原数组</p><p>arr.sort()、np.sort()、arr.argsort()</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<br>arr = np.array([<span class="hljs-number">9</span>,<span class="hljs-number">3</span>,<span class="hljs-number">11</span>,<span class="hljs-number">6</span>,<span class="hljs-number">17</span>,<span class="hljs-number">5</span>,<span class="hljs-number">4</span>,<span class="hljs-number">15</span>,<span class="hljs-number">1</span>])<br>arr.sort() <span class="hljs-comment"># 直接改变原数组</span><br>np.sort(arr) <span class="hljs-comment"># 返回深拷贝排序结果</span><br>arr = np.array([<span class="hljs-number">9</span>,<span class="hljs-number">3</span>,<span class="hljs-number">11</span>,<span class="hljs-number">6</span>,<span class="hljs-number">17</span>,<span class="hljs-number">5</span>,<span class="hljs-number">4</span>,<span class="hljs-number">15</span>,<span class="hljs-number">1</span>])<br>arr.argsort() <span class="hljs-comment"># 返回从小到大排序索引 array([8, 1, 6, 5, 3, 0, 2, 7, 4])</span><br></code></pre></td></tr></table></figure><h3 id="第四节-集合运算函数">第四节 集合运算函数</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs python">A = np.array([<span class="hljs-number">2</span>,<span class="hljs-number">4</span>,<span class="hljs-number">6</span>,<span class="hljs-number">8</span>])<br>B = np.array([<span class="hljs-number">3</span>,<span class="hljs-number">4</span>,<span class="hljs-number">5</span>,<span class="hljs-number">6</span>])<br>np.intersect1d(A,B) <span class="hljs-comment"># 交集 array([4, 6])</span><br>np.union1d(A,B) <span class="hljs-comment"># 并集 array([2, 3, 4, 5, 6, 8])</span><br>np.setdiff1d(A,B) <span class="hljs-comment">#差集，A中有，B中没有 array([2, 8])</span><br></code></pre></td></tr></table></figure><h3 id="第五节-数学和统计函数">第五节 数学和统计函数</h3><p>min、max、mean、median、sum、std、var、cumsum、cumprod、argmin、argmax、argwhere、cov、corrcoef</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<br>arr1 = np.array([<span class="hljs-number">1</span>,<span class="hljs-number">7</span>,<span class="hljs-number">2</span>,<span class="hljs-number">19</span>,<span class="hljs-number">23</span>,<span class="hljs-number">0</span>,<span class="hljs-number">88</span>,<span class="hljs-number">11</span>,<span class="hljs-number">6</span>,<span class="hljs-number">11</span>])<br>arr1.<span class="hljs-built_in">min</span>() <span class="hljs-comment"># 计算最小值 0</span><br>arr1.argmax() <span class="hljs-comment"># 计算最大值的索引 返回 6</span><br>np.argwhere(arr1 &gt; <span class="hljs-number">20</span>) <span class="hljs-comment"># 返回大于20的元素的索引</span><br>np.cumsum(arr1) <span class="hljs-comment"># 计算累加和</span><br>arr2 = np.random.randint(<span class="hljs-number">0</span>,<span class="hljs-number">10</span>,size = (<span class="hljs-number">4</span>,<span class="hljs-number">5</span>))<br>arr2.mean(axis = <span class="hljs-number">0</span>) <span class="hljs-comment"># 计算列的平均值</span><br>arr2.mean(axis = <span class="hljs-number">1</span>) <span class="hljs-comment"># 计算行的平均值</span><br>np.cov(arr2,rowvar=<span class="hljs-literal">True</span>) <span class="hljs-comment"># 协方差矩阵</span><br>np.corrcoef(arr2,rowvar=<span class="hljs-literal">True</span>) <span class="hljs-comment"># 相关性系数</span><br></code></pre></td></tr></table></figure><h2 id="第九部分-线性代数">第九部分 线性代数</h2><h3 id="矩阵乘积">矩阵乘积</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment">#矩阵的乘积</span><br>A = np.array([[<span class="hljs-number">4</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>],<br>              [<span class="hljs-number">1</span>,<span class="hljs-number">3</span>,<span class="hljs-number">1</span>]]) <span class="hljs-comment"># shape(2,3)</span><br>B = np.array([[<span class="hljs-number">2</span>,<span class="hljs-number">7</span>],<br>              [-<span class="hljs-number">5</span>,-<span class="hljs-number">7</span>],<br>              [<span class="hljs-number">9</span>,<span class="hljs-number">3</span>]]) <span class="hljs-comment"># shape(3,2)</span><br>np.dot(A,B) <span class="hljs-comment"># 矩阵运算 A的最后一维和B的第一维必须一致</span><br>A @ B <span class="hljs-comment"># 符号 @ 表示矩阵乘积运算</span><br></code></pre></td></tr></table></figure><h3 id="矩阵其他计算">矩阵其他计算</h3><p>下面可以计算矩阵的逆、行列式、特征值和特征向量、qr分解值，svd分解值</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment">#计算矩阵的逆</span><br><span class="hljs-keyword">from</span> numpy.linalg <span class="hljs-keyword">import</span> inv,det,eig,qr,svd<br>A = np.array([[<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>],<br>              [<span class="hljs-number">2</span>,<span class="hljs-number">3</span>,<span class="hljs-number">4</span>],<br>              [<span class="hljs-number">4</span>,<span class="hljs-number">5</span>,<span class="hljs-number">8</span>]]) <span class="hljs-comment"># shape(3,3)</span><br>inv(t) <span class="hljs-comment"># 逆矩阵</span><br>det(t)<span class="hljs-comment">#计算矩阵行列式</span><br></code></pre></td></tr></table></figure><h2 id="第十部分-实战-用NumPy分析鸢尾花花萼属性各项指标">第十部分 实战-用NumPy分析鸢尾花花萼属性各项指标</h2><p>案列：读取iris数据集中的花萼长度数据（已保存为csv格式） 并对其进行排序、去重，并求出和、累积和、均值、标准差、方差、最小值、最大值。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np  <span class="hljs-comment"># 导入类库 numpy</span><br>data = np.loadtxt(<span class="hljs-string">&#x27;./iris.csv&#x27;</span>,delimiter = <span class="hljs-string">&#x27;,&#x27;</span>)  <span class="hljs-comment"># 读取数据文件，data是二维的数组</span><br>data.sort(axis = -<span class="hljs-number">1</span>)  <span class="hljs-comment"># 简单排序</span><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;简单排序后：&#x27;</span>, data)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;数据去重后：&#x27;</span>, np.unique(data)) <span class="hljs-comment"># 去除重复数据</span><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;数据求和：&#x27;</span>, np.<span class="hljs-built_in">sum</span>(data))  <span class="hljs-comment"># 数组求和</span><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;元素求累加和&#x27;</span>, np.cumsum(data))  <span class="hljs-comment"># 元素求累加和</span><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;数据的均值：&#x27;</span>, np.mean(data))  <span class="hljs-comment"># 均值</span><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;数据的标准差：&#x27;</span>, np.std(data))  <span class="hljs-comment"># 标准差</span><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;数据的方差：&#x27;</span>, np.var(data))  <span class="hljs-comment"># 方差</span><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;数据的最小值：&#x27;</span>, np.<span class="hljs-built_in">min</span>(data))  <span class="hljs-comment"># 最小值</span><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;数据的最大值：&#x27;</span>, np.<span class="hljs-built_in">max</span>(data))  <span class="hljs-comment"># 最大值</span><br></code></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> program </category>
          
          <category> 机器学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Numpy </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>蓝桥杯-高塔</title>
      <link href="/posts/a38c4cc3.html"/>
      <url>/posts/a38c4cc3.html</url>
      
        <content type="html"><![CDATA[<p>问题描述 小蓝正在玩一个攀登高塔的游戏。高塔的层数是无限的，但游戏最多只有 n n 回合。</p><p>小蓝一开始拥有 m m 点能量，在每个回合都有一个值 A i A i ​ 表示小蓝的角色状态。小蓝每回合可以选择消费任意点能量 C i C i ​ （最低消费 1 1 点，没有上限），他在这回合将最多可以向上攀爬 A i ⋅ C i A i ​ ⋅C i ​ 层。实际攀爬的层数取决于小蓝自己在这回合的表现，不过最差也会向上爬一层。</p><p>当某回合小蓝的能量点数耗尽，那么在完成这个回合后，游戏结束。 n n 回合结束后，不管能量还有没有剩余，游戏都会直接结束。</p><p>给出小蓝每回合的 A i A i ​ 和自己一开始的能量点数 m m。小蓝想知道有多少种不同的可能出现的游玩过程。如果小蓝在两种游玩过程中的任一对应回合花费的能量点数不同或该回合结束时所处层数不同，那么这两种游玩过程就被视为不同。</p><p>输入格式 输入的第一行包含两个整数 n n, m m，用一个空格分隔。</p><p>第二行包含 n n 个整数 A i A i ​ ，相邻整数之间使用一个空格分隔，表示小蓝每回合的状态值。</p><p>输出格式 输出一行包含一个整数表示给定条件下不同游玩过程的数量。由于答案可能很大，你只需要输出答案对 998244353 998244353 取模的结果。</p><p>样例输入 9 15 3 2 5 7 1 4 6 8 3 copy 样例输出 392149233 copy 评测用例规模与约定 对于 40 40% 的评测用例， n ≤ 300 n≤300， m ≤ 500 m≤500；</p><p>对于所有评测用例， 1 ≤ n ≤ 2 × 1 0 5 1≤n≤2×10 5 ， n ≤ m ≤ 1 0 18 n≤m≤10 18 ， 1 ≤ A i ≤ 1 0 9 1≤A i ​ ≤10 9 。</p>]]></content>
      
      
      <categories>
          
          <category> program </category>
          
          <category> 一些题解 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>数学</title>
      <link href="/posts/fe7e69f4.html"/>
      <url>/posts/fe7e69f4.html</url>
      
        <content type="html"><![CDATA[<p>筛质数</p><ul><li>埃式筛</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs //埃式">const int N=10001;<br>int primes[N],cnt=0;<br>bool st[N];<br>void get_p(int n)&#123;<br>    for(int i=2;i&lt;=n;i++)&#123;<br>        if(!st[i])primes[cnt++]=i;<br>        for(int j=i+i;j&lt;=n;j+=i)&#123;<br>                st[j]=true;<br>        &#125;<br><br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><ul><li>线性筛</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">const int N=10001;<br>int primes[N],cnt=0;<br>bool st[N];<br>void get_prime(int n) &#123;<br>    for(int i=2;i&lt;=n;i++)&#123;<br>        if(!st[i])primes[cnt++]=i;<br>        for(int j=0;primes[j]&lt;=n/i;j++)&#123;<br>            st[primes[j]*i]=true;<br>            if(i%primes[j]==0)break;<br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>费马逆元</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">import java.util.*;<br><br>public class Main &#123;<br>    static long MOD = (long)1e9 + 7;<br><br>    public static void main(String[] args) &#123;<br>        Scanner sc = new Scanner(System.in);<br><br>        int q = sc.nextInt();<br>        int maxN = 0;<br>        int[] nList = new int[q];<br>        int[] mList = new int[q];<br><br>        // 读取所有查询并找到最大的 n<br>        for (int i = 0; i &lt; q; i++) &#123;<br>            int n = sc.nextInt();<br>            int m = sc.nextInt();<br>            nList[i] = n;<br>            mList[i] = m;<br>            if (n &gt; maxN) &#123;<br>                maxN = n;<br>            &#125;<br>        &#125;<br><br>        // 预处理阶乘和逆元<br>        long[] factorial = new long[maxN + 1];<br>        long[] inverse = new long[maxN + 1];<br>        factorial[0] = 1;<br>        for (int i = 1; i &lt;= maxN; i++) &#123;<br>            factorial[i] = (factorial[i - 1] * i) % MOD;<br>        &#125;<br><br>        // 使用费马小定理计算逆元<br>        inverse[maxN] = fastPower(factorial[maxN], MOD - 2, MOD);<br>        for (int i = maxN - 1; i &gt;= 0; i--) &#123;<br>            inverse[i] = (inverse[i + 1] * (i + 1)) % MOD;<br>        &#125;<br><br>        // 处理每个查询<br>        for (int i = 0; i &lt; q; i++) &#123;<br>            int n = nList[i];<br>            int m = mList[i];<br>            if (m &lt; 0  m &gt; n) &#123;<br>                System.out.println(0);<br>                continue;<br>            &#125;<br>            long ans = (factorial[n] * inverse[m] % MOD) * inverse[n - m] % MOD;<br>            System.out.println(ans);<br>        &#125;<br><br>        sc.close();<br>    &#125;<br><br>    // 快速幂算法<br>    public static long fastPower(long base, long exponent, long mod) &#123;<br>        long result = 1;<br>        base %= mod;<br>        while (exponent &gt; 0) &#123;<br>            if ((exponent &amp; 1) == 1) &#123;<br>                result = (result * base) % mod;<br>            &#125;<br>            base = (base * base) % mod;<br>            exponent &gt;&gt;= 1;<br>        &#125;<br>        return result;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>快速幂</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">public class Main &#123;<br>    public static void main(String[] args) &#123;<br>        Solution solution = new Solution();<br><br>        // 测试用例 1: 正指数<br>        double result1 = solution.myPow(2.0, 10);<br>        System.out.println(&quot;2^10 = &quot; + result1); // 输出: 1024.0<br><br>        // 测试用例 2: 负指数<br>        double result2 = solution.myPow(2.0, -2);<br>        System.out.println(&quot;2^-2 = &quot; + result2); // 输出: 0.25<br><br>        // 测试用例 3: 零指数<br>        double result3 = solution.myPow(5.0, 0);<br>        System.out.println(&quot;5^0 = &quot; + result3); // 输出: 1.0<br><br>        // 测试用例 4: 边界条件 (0^0)<br>        double result4 = solution.myPow(0.0, 0);<br>        System.out.println(&quot;0^0 = &quot; + result4); // 输出: 1.0<br><br>        // 测试用例 5: 整数溢出测试 (Integer.MIN_VALUE)<br>        double result5 = solution.myPow(2.0, Integer.MIN_VALUE);<br>        System.out.println(&quot;2^&quot; + Integer.MIN_VALUE + &quot; = &quot; + result5); // 输出一个非常小的数<br>    &#125;<br>&#125;<br><br>class Solution &#123;<br>    public double myPow(double x, int n) &#123;<br>        long N = n; // 将指数转换为 long 类型以避免溢出<br>        if (N &lt; 0) &#123;<br>            x = 1 / x; // 处理负指数<br>            N = -N;    // 将指数转为正数<br>        &#125;<br>        return powIterative(x, N);<br>    &#125;<br><br>    // 迭代实现快速幂<br>    private double powIterative(double x, long n) &#123;<br>        double result = 1.0; // 初始化结果<br>        while (n &gt; 0) &#123;<br>            if (n % 2 == 1) &#123; // 如果指数是奇数<br>                result *= x;  // 将当前的 x 乘到结果中<br>            &#125;<br>            x *= x; // 平方 x<br>            n /= 2; // 将指数减半<br>        &#125;<br>        return result;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>欧几里得和欧拉</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">import java.util.Scanner;<br><br>public class Main&#123;<br>    static int mod=9901; // 定义模数，用于结果取模<br>    public static void main(String[] args)&#123;<br>        Scanner scan=new Scanner(System.in);<br>        int A=scan.nextInt(),B=scan.nextInt(); // 输入A和B<br>        int res=1; // 初始化结果为1，用于累积各质因数等比和的乘积<br>        <br>        // 质因数分解A，从2开始试除<br>        for(int i=2;i*i&lt;=A;i++)&#123;<br>            if(A%i==0)&#123;<br>                int s=0; // 记录当前质因数i的指数<br>                while(A%i==0)&#123;<br>                    A/=i; // 除去所有i因子<br>                    s++;<br>                &#125;<br>                // 计算i^(s*B)的等比和，并累积到结果中<br>                res=res*sum(i,s*B+1)%mod; // s*B+1项（0次方到s*B次方）<br>            &#125;<br>        &#125;<br>        // 处理剩余的质因数（当A是质数时）<br>        if(A&gt;1)res=res*sum(A,B+1)%mod; // 指数为1*B，项数为B+1<br>        if(A==0)res=0; // 特判A=0的情况，结果直接为0<br>        System.out.println(res);<br>    &#125;<br>    <br>    // 快速幂算法：计算a^k % mod<br>    public static int quic(int a,int k)&#123;<br>        int res=1;<br>        a%=mod; // 先取模，防止溢出<br>        while(k&gt;0)&#123;<br>            if((k&amp;1)==1)&#123; // 如果当前二进制位为1，乘入结果<br>                res=(res*a)%mod;<br>            &#125;<br>            a=(a*a)%mod; // a自乘，相当于计算下一位的权值<br>            k&gt;&gt;=1; // 右移一位，处理下一位二进制<br>        &#125;<br>        return res;<br>    &#125;<br>    <br>    // 分治法计算等比数列和：1 + p + p^2 + ... + p^(k-1)<br>    public static int sum(int p,int k)&#123;<br>        if(k==1)return 1; // 边界条件，只有1项<br>        if(k%2==0)&#123; // 当k为偶数时，拆分成两部分<br>            // sum(p,k) = (1 + p^(k/2)) * sum(p, k/2)<br>            return ((1+quic(p,k/2))*sum(p,k/2))%mod;<br>        &#125; else &#123; // 当k为奇数时，拆分为前k-1项和最后一项<br>            // sum(p,k) = sum(p,k-1) + p^(k-1)<br>            return (sum(p,k-1)+quic(p,k-1))%mod;<br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> program </category>
          
          <category> 算法模板 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>排序和二分</title>
      <link href="/posts/c5627fcb.html"/>
      <url>/posts/c5627fcb.html</url>
      
        <content type="html"><![CDATA[<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">import java.io.*;<br>import java.util.*;<br>public class  阿一_1快排&#123;<br>    static BufferedReader cin = new BufferedReader(new InputStreamReader(System.in));<br>    static PrintWriter coup = new PrintWriter(new OutputStreamWriter(System.out));<br>    static StreamTokenizer t=new StreamTokenizer(cin);<br>    public static void main(String[] args) throws IOException &#123;<br>        t.nextToken();<br>        int n = (int)t.nval;<br>        int[] array = new int[n];<br>        for (int i = 0; i &lt; n; i++) &#123;<br>            t.nextToken();<br>            array[i] = (int)t.nval;<br>        &#125;<br><br>        quickSort(array, 0, n - 1);<br><br>        System.out.println(&quot;排序后的数组：&quot;);<br>        for (int i = 0; i &lt; n; i++) &#123;<br>            coup.print(array[i] + &quot; &quot;);<br>            coup.flush();<br>        &#125;<br>    &#125;<br>public static void quickSort(int q[],int l,int r)&#123;<br>    if(l&gt;=r) return;<br>    int i=l-1,j=r+1,x=q[l+r&gt;&gt;1];<br>    while(i&lt;j)&#123;<br>        do i++;while(q[i]&lt;x);<br>        do j--;while(q[j]&gt;x);<br>        if(i&lt;j) swap(q,i,j);<br>    &#125;<br>    quickSort(q,l,j-1);<br>    quickSort(q,j+1,r);<br>&#125;<br>public static void swap(int[] array, int i, int j) &#123;<br>    int temp = array[i];<br>    array[i] = array[j];<br>    array[j] = temp;<br>&#125;<br>&#125;<br>// public static void quickSort(int[] array, int low, int high) &#123;<br>//         if (low &lt; high) &#123;<br>//             int pivotIndex = partition(array, low, high);<br>//             quickSort(array, low, pivotIndex - 1);<br>//             quickSort(array, pivotIndex + 1, high);<br>//         &#125;<br>//     &#125;<br><br>//     public static int partition(int[] array, int low, int high) &#123;<br>//         int pivot = array[high]; <br>//         int i = low - 1; <br>//         for (int j = low; j &lt; high; j++) &#123;<br>//             if (array[j] &lt; pivot) &#123;<br>//                 i++;<br>//                 swap(array, i, j);<br>//             &#125;<br>//         &#125;<br>//         swap(array, i + 1, high); <br>//     &#125;<br>// &#125;<br><br>// import java.io.BufferedReader;<br>// import java.io.InputStreamReader;<br>// import java.io.StreamTokenizer;<br>// import java.util.Arrays;<br>// import java.util.Scanner;<br><br>// public class Main &#123;<br>//  static int []a = new int[5000005];<br>//  static int x;<br>//  public static void main(String[] args) throws Exception&#123;<br><br>//      int n;<br>//      StreamTokenizer st = new StreamTokenizer(new BufferedReader(new InputStreamReader(System.in)));<br>//      st.nextToken();<br>//      n=(int)st.nval;<br>//      // st.nextToken();<br>//      // x=(int)st.nval;<br>//      for(int i = 0;i&lt;n;i++) &#123;<br>//          st.nextToken();<br>//          a[i]=(int)st.nval;<br>//      &#125;<br>//      quickSort(a,0,n-1);<br>//      for(int i=0;i&lt;n;i++)&#123;<br>//             System.out.print(a[i] + &quot; &quot;);<br>//         &#125;<br>//  &#125;<br><br>//  public static void quickSort(int q[],int l,int r) &#123;<br>//      if(l&gt;=r)<br>//          return;<br>//      int pivot = q[l];<br>//      int i=l,j=r;<br>//      while(i&lt;j) &#123;<br>//          while(i&lt;j &amp;&amp; q[j]&gt;=pivot) &#123;<br>//              j--;<br>//          &#125;<br>//          while(i&lt;j &amp;&amp; q[i]&lt;=pivot) &#123;<br>//              i++;<br>//          &#125;<br>//          if(i&lt;j) &#123;<br>//              int temp=q[i];<br>//              q[i]=q[j];<br>//              q[j]=temp;<br>//          &#125;<br>//      &#125;<br>//      q[l]=q[i];<br>//      q[i]=pivot;<br>//      //if(i==x) return;<br>//      //if(i&gt;x)<br>//      quickSort(q,l,i-1);<br>//      //else if(i&lt;x)<br>//      quickSort(q,i+1,r);<br>//  &#125;<br>// &#125;<br></code></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> program </category>
          
          <category> 算法模板 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 二分 </tag>
            
            <tag> 排序 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Leetcode刷题路线</title>
      <link href="/posts/5f473243.html"/>
      <url>/posts/5f473243.html</url>
      
        <content type="html"><![CDATA[<p>推荐链接：<a href="https://blog.csdn.net/2201_75299492/article/details/136405782" title="力扣刷题攻略路线">力扣刷题攻略路线</a></p><ol><li>数学</li><li>数组</li><li>链表</li><li>字符串</li><li>哈希表</li><li>双指针</li><li>递归</li><li>栈</li><li>队列</li><li>树</li><li>图与回溯算法</li><li>贪心</li><li>动态规划</li></ol>]]></content>
      
      
      <categories>
          
          <category> program </category>
          
          <category> 算法刷题路线 </category>
          
      </categories>
      
      
    </entry>
    
    
  
  
    
    
    <entry>
      <title>闲言碎语</title>
      <link href="/2.html"/>
      <url>/2.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>音乐馆</title>
      <link href="/3.html"/>
      <url>/3.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>分类</title>
      <link href="/g.html"/>
      <url>/g.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/manifest.json"/>
      <url>/manifest.json</url>
      
        <content type="html"><![CDATA[{"name":"molittle","short_name":"molittle","theme_color":"#3b70fc","background_color":"#3b70fc","display":"standalone","scope":"/","start_url":"/","icons":[{"src":"/img/siteicon/16.png","sizes":"16x16","type":"image/png"},{"src":"/img/siteicon/32.png","sizes":"32x32","type":"image/png"},{"src":"/img/siteicon/48.png","sizes":"48x48","type":"image/png"},{"src":"/img/siteicon/64.png","sizes":"64x64","type":"image/png"},{"src":"/img/siteicon/128.png","sizes":"128x128","type":"image/png"},{"src":"/img/siteicon/144.png","sizes":"144x144","type":"image/png"},{"src":"/img/siteicon/512.png","sizes":"512x512","type":"image/png"}],"splash_pages":null}]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>artitalk</title>
      <link href="/artitalk/index.html"/>
      <url>/artitalk/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>categories</title>
      <link href="/categories/index.html"/>
      <url>/categories/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>about</title>
      <link href="/about/index.html"/>
      <url>/about/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/css/fuction.css"/>
      <url>/css/fuction.css</url>
      
        <content type="html"><![CDATA[.loading-img {  background: url(https://s21.ax1x.com/2025/05/12/pEXkRIO.jpg) no-repeat center center;  background-size: cover;}/* 返回顶部 */button#go-up span:nth-child(2) {    font-size: 12px!important;    margin-right: -1px;}/* 返回顶部 */button#go-up #percent {    display: none;    /*font-weight: bold;*/    font-size: 16px !important;}/* 鼠标滑动到按钮上时显示返回顶部图标 */button#go-up:hover i {    display: block !important;}button#go-up:hover #percent {    display: none !important;}#rightside > div > button,#rightside > div > a {    border-radius: 50%;    display: flex;    align-items: center;    -webkit-box-align: center;    -webkit-box-pack: center;    justify-content: center;}]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/css/custom.css"/>
      <url>/css/custom.css</url>
      
        <content type="html"><![CDATA[/* @font-face {  font-family: Candyhome;  src: url(https://npm.elemecdn.com/anzhiyu-blog@1.1.6/fonts/Candyhome.ttf);  font-display: swap;  font-weight: lighter;} */@font-face {    font-family: ZhuZiAYuanJWD;    src: url(https://npm.elemecdn.com/anzhiyu-blog@1.1.6/fonts/ZhuZiAWan.woff2);    font-display: swap;    font-weight: lighter;  }    div#menus {    font-family: "ZhuZiAYuanJWD";  }  h1#site-title {    font-family: ZhuZiAYuanJWD;    font-size: 3em !important;  }  a.blog-slider__title,  a.categoryBar-list-link,  h1.post-title {    font-family: ZhuZiAYuanJWD;  }  article {    max-width: 500px; /* 按需调整宽度，控制文章条整体长度 */    margin-left: auto; /* 添加这一行，让文章内容靠右显示 */  }  article .article-title {    font-size: 18px; /* 适当缩小标题字体大小 */    max-width: 100%;    overflow: hidden;    text-overflow: ellipsis;    white-space: nowrap; /* 标题过长时省略显示 */  }  a.blog-slider__title,  a.categoryBar-list-link,  h1.post-title {    font-family: ZhuZiAYuanJWD;  }/* 文章容器样式 */.post-body {    max-width: 800px; /* 设置最大宽度 */    margin: 0 auto; /* 水平居中 */    padding: 20px; /* 添加内边距 */    display: flex; /* 使用 Flexbox 布局 */    flex-direction: column; /* 垂直排列子元素 */    align-items: center; /* 水平居中子元素 */}/* 文章标题样式 */.post-title {    text-align: center; /* 居中对齐标题 */}/* 文章内容样式 */.post-content {    text-align: justify; /* 两端对齐文本 */}/* 文章内容居中显示 */.post-body {    max-width: 800px; /* 根据需要调整最大宽度 */    margin: 0 auto; /* 水平居中 */    padding: 20px; /* 添加内边距 */}/* 调整文章与目录的间隔 */.post-body,.toc {    margin-bottom: 20px; /* 根据需要调整间隔 */}/* Remove any default margins or padding that might be causing the gap */body {    margin: 0;    padding: 0;}/* Ensure the article container is centered and takes full width */#article-container {    max-width: 800px; /* Adjust this value as needed */    margin: 0 auto; /* Centers the article */    padding: 20px;    width: 100%;    box-sizing: border-box;}/* Remove any extra spacing around the article *//* Adjust the table of contents if necessary */#toc {    margin: 0 auto; /* Centers the TOC */    max-width: 800px; /* Match the article width */    padding: 20px;    box-sizing: border-box;}/* Ensure the post content is properly aligned */div#post {    display: flex;    flex-direction: column;    align-items: center;    width: 100%;    margin: 0;    padding: 0;}  article .article-title {    font-size: 18px; /* 适当缩小标题字体大小 */    max-width: 100%;    overflow: hidden;    text-overflow: ellipsis;    white-space: nowrap; /* 标题过长时省略显示 */  }  article .article-entry {    width: 600px; /* 缩短文章条目宽度，可按需调整 */    float: left; /* 使其固定在左侧 */    margin-right: 10px; /* 与右侧元素间隔一定距离 */  }  article .article-excerpt {    font-size: 14px; /* 缩小摘要字体大小 */    line-height: 1.4; /* 调整行间距 */}  article .article-meta {    width: 100%; /* 元信息（日期、分类等）占满剩余宽度 */    font-size: 12px; /* 适当缩小元信息字体大小 */  }  .iconfont {    font-family: "iconfont" !important;    font-size: 3em;    /* 可以定义图标大小 */    font-style: normal;    -webkit-font-smoothing: antialiased;    -moz-osx-font-smoothing: grayscale;  }    /* 时间轴生肖icon */  svg.icon {    /* 这里定义svg.icon，避免和Butterfly自带的note标签冲突 */    width: 1em;    height: 1em;    /* width和height定义图标的默认宽度和高度*/    vertical-align: -0.15em;    fill: currentColor;    overflow: hidden;  }    .icon-zhongbiao::before {    color: #f7c768;  }    /* bilibli番剧插件 */  #article-container .bangumi-tab.bangumi-active {    background: var(--anzhiyu-theme);    color: var(--anzhiyu-ahoverbg);    border-radius: 10px;  }  a.bangumi-tab:hover {    text-decoration: none !important;  }  .bangumi-button:hover {    background: var(--anzhiyu-theme) !important;    border-radius: 10px !important;    color: var(--anzhiyu-ahoverbg) !important;  }  a.bangumi-button.bangumi-nextpage:hover {    text-decoration: none !important;  }  .bangumi-button {    padding: 5px 10px !important;  }    a.bangumi-tab {    padding: 5px 10px !important;  }  svg.icon.faa-tada {    font-size: 1.1em;  }  .bangumi-info-item {    border-right: 1px solid #f2b94b;  }  .bangumi-info-item span {    color: #f2b94b;  }  .bangumi-info-item em {    color: #f2b94b;  }    /* 解决artitalk的图标问题 */  #uploadSource > svg {    width: 1.19em;    height: 1.5em;  }    /*top-img黑色透明玻璃效果移除，不建议加，除非你执着于完全一图流或者背景图对比色明显 */  #page-header:not(.not-top-img):before {    background-color: transparent !important;  }    /* 首页文章卡片 */  #recent-posts > .recent-post-item {    background: rgba(255, 255, 255, 0.9);  }    /* 首页侧栏卡片 */  #aside-content .card-widget {    background: rgba(255, 255, 255, 0.9);  }    /* 文章页面正文背景 */  div#post {    background: rgba(255, 255, 255, 0.9);  }    /* 分页页面 */  div#page {    background: rgba(255, 255, 255, 0.9);  }    /* 归档页面 */  div#archive {    background: rgba(255, 255, 255, 0.9);  }    /* 标签页面 */  div#tag {    background: rgba(255, 255, 255, 0.9);  }    /* 分类页面 */  div#category {    background: rgba(255, 255, 255, 0.9);  }    /*夜间模式伪类遮罩层透明*/  [data-theme="dark"] #recent-posts > .recent-post-item {    background: #121212;  }    [data-theme="dark"] .card-widget {    background: #121212 !important;  }    [data-theme="dark"] div#post {    background: #121212 !important;  }    [data-theme="dark"] div#tag {    background: #121212 !important;  }    [data-theme="dark"] div#archive {    background: #121212 !important;  }    [data-theme="dark"] div#page {    background: #121212 !important;  }    [data-theme="dark"] div#category {    background: #121212 !important;  }    /* 页脚透明 */  #footer {    background: transparent !important;  }    /* 头图透明 */  #page-header {    background: transparent !important;  }    #rightside > div > button {    border-radius: 5px;  }    /* 滚动条 */    ::-webkit-scrollbar {    width: 10px;    height: 10px;  }    ::-webkit-scrollbar-thumb {    background-color: #3b70fc;    border-radius: 2em;  }    ::-webkit-scrollbar-corner {    background-color: transparent;  }    ::-moz-selection {    color: #fff;    background-color: #3b70fc;  }    /* 音乐播放器 */    /* .aplayer .aplayer-lrc {    display: none !important;  } */    .aplayer.aplayer-fixed.aplayer-narrow .aplayer-body {    left: -66px !important;    transition: all 0.3s;    /* 默认情况下缩进左侧66px，只留一点箭头部分 */  }    .aplayer.aplayer-fixed.aplayer-narrow .aplayer-body:hover {    left: 0 !important;    transition: all 0.3s;    /* 鼠标悬停是左侧缩进归零，完全显示按钮 */  }    .aplayer.aplayer-fixed {    z-index: 999999 !important;  }    /* 评论框  */  .vwrap {    box-shadow: 2px 2px 5px #bbb;    background: rgba(255, 255, 255, 0.3);    border-radius: 8px;    padding: 30px;    margin: 30px 0px 30px 0px;  }    /* 设置评论框 */    .vcard {    box-shadow: 2px 2px 5px #bbb;    background: rgba(255, 255, 255, 0.3);    border-radius: 8px;    padding: 30px;    margin: 30px 0px 0px 0px;  }    /* md网站下划线 */  #article-container a:hover {    text-decoration: none !important;  }    #article-container #hpp_talk p img {    display: inline;  }    /* 404页面 */  #error-wrap {    position: absolute;    top: 40%;    right: 0;    left: 0;    margin: 0 auto;    padding: 0 1rem;    max-width: 1000px;    transform: translate(0, -50%);  }    #error-wrap .error-content {    display: flex;    flex-direction: row;    justify-content: center;    align-items: center;    margin: 0 1rem;    height: 18rem;    border-radius: 8px;    background: var(--card-bg);    box-shadow: var(--card-box-shadow);    transition: all 0.3s;  }    #error-wrap .error-content .error-img {    box-flex: 1;    flex: 1;    height: 100%;    border-top-left-radius: 8px;    border-bottom-left-radius: 8px;    background-color: #3b70fc;    background-position: center;    background-size: cover;  }    #error-wrap .error-content .error-info {    box-flex: 1;    flex: 1;    padding: 0.5rem;    text-align: center;    font-size: 14px;    font-family: Titillium Web, "PingFang SC", "Hiragino Sans GB", "Microsoft JhengHei", "Microsoft YaHei", sans-serif;  }  #error-wrap .error-content .error-info .error_title {    margin-top: -4rem;    font-size: 9em;  }  #error-wrap .error-content .error-info .error_subtitle {    margin-top: -3.5rem;    word-break: break-word;    font-size: 1.6em;  }  #error-wrap .error-content .error-info a {    display: inline-block;    margin-top: 0.5rem;    padding: 0.3rem 1.5rem;    background: var(--btn-bg);    color: var(--btn-color);  }    #body-wrap.error .aside-list {    display: flex;    flex-direction: row;    flex-wrap: nowrap;    bottom: 0px;    position: absolute;    padding: 1rem;    width: 100%;    overflow: hidden;  }    #body-wrap.error .aside-list .aside-list-group {    display: flex;    flex-direction: row;    flex-wrap: nowrap;    max-width: 1200px;    margin: 0 auto;  }    #body-wrap.error .aside-list .aside-list-item {    padding: 0.5rem;  }    #body-wrap.error .aside-list .aside-list-item img {    width: 100%;    object-fit: cover;    border-radius: 12px;  }    #body-wrap.error .aside-list .aside-list-item .thumbnail {    overflow: hidden;    width: 230px;    height: 143px;    background: var(--anzhiyu-card-bg);    display: flex;  }    #body-wrap.error .aside-list .aside-list-item .content .title {    overflow: hidden;    display: -webkit-box;    -webkit-box-orient: vertical;    line-height: 1.5;    justify-content: center;    align-items: flex-end;    align-content: center;    padding-top: 0.5rem;    color: white;  }    #body-wrap.error .aside-list .aside-list-item .content time {    display: none;  }    /* 代码框主题 */  #article-container figure.highlight {    border-radius: 10px;  }  .pace {    -webkit-pointer-events: none;    pointer-events: none;    -webkit-user-select: none;    -moz-user-select: none;    user-select: none;    z-index: 2000;    position: fixed;    margin: auto;    top: 10px;    left: 0;    right: 0;    height: 8px;    border-radius: 8px;    width: 4rem;    background: #eaecf2;    border: 1px #e3e8f7;    overflow: hidden;  }    .pace-inactive .pace-progress {    opacity: 0;    transition: 0.3s ease-in;  }    .pace .pace-progress {    -webkit-box-sizing: border-box;    -moz-box-sizing: border-box;    -ms-box-sizing: border-box;    -o-box-sizing: border-box;    box-sizing: border-box;    -webkit-transform: translate3d(0, 0, 0);    -moz-transform: translate3d(0, 0, 0);    -ms-transform: translate3d(0, 0, 0);    -o-transform: translate3d(0, 0, 0);    transform: translate3d(0, 0, 0);    max-width: 200px;    position: absolute;    z-index: 2000;    display: block;    top: 0;    right: 100%;    height: 100%;    width: 100%;    background: linear-gradient(-45deg, #ee7752, #e73c7e, #23a6d5, #23d5ab);    animation: gradient 1.5s ease infinite;    background-size: 200%;  }    .pace.pace-inactive {    opacity: 0;    transition: 0.3s;    top: -8px;  }  @keyframes gradient {    0% {      background-position: 0% 50%;    }    50% {      background-position: 100% 50%;    }    100% {      background-position: 0% 50%;    }  }/*!  Theme: GitHub Dark  Description: Dark theme as seen on github.com  Author: github.com  Maintainer: @Hirse  Updated: 2021-05-15  Outdated base version: https://github.com/primer/github-syntax-dark  Current colors taken from GitHub's CSS*//* 新添加的內容  -------------------------------------   --hl-color                  代碼框字體顔色 【必須】 (把下面.hljs的 color複製到這裏來)  --hl-bg                     代碼框背景色 【必須】 (把下面.hljs的 background複製到這裏來)  --hltools-bg: #321a0f       代碼框頂部工具欄背景色 【可選】(如果你關掉了 copy、lang 和 shrink,可不用配置這個）  --hltools-color: #fff       代碼框頂部工具欄字體顔色 【可選】(如果你關掉了 copy、lang 和 shrink,可不用配置這個）  --hlnumber-bg: #221a0f      代碼框行數背景色 【可選】(如果已經關掉 line_number,可以不用配置這個)  --hlnumber-color: #fff      代碼框行數字體顔色 【可選】 (如果已經關掉 line_number,可以不用配置這個)  --hlscrollbar-bg: #d3af86   代碼框滾動條顔色 【可選】（默認為主題主顔色）  --hlexpand-bg: #d3af86      代碼框底部展開背景色 【可選】(如果已經關掉 highlight_height_limit,可以不用配置這個)*/:root {  --hl-color: #c9d1d9;  --hl-bg: #0d1117;  --hltools-bg: #110672;  --hltools-color: #fff;  --hlnumber-bg: #0d1117;  --hlnumber-color: #fff;  --hlscrollbar-bg: #0d1117;  --hlexpand-bg: #e1e4eb;}pre code.hljs {  display: block;  overflow-x: auto;  padding: 1em}code.hljs {  padding: 3px 5px}/*!  Theme: GitHub Dark  Description: Dark theme as seen on github.com  Author: github.com  Maintainer: @Hirse  Updated: 2021-05-15  Outdated base version: https://github.com/primer/github-syntax-dark  Current colors taken from GitHub's CSS*/#article-container figure.highlight .hljs {  color: #c9d1d9;  background: #0d1117}.hljs-doctag,.hljs-keyword,.hljs-meta .hljs-keyword,.hljs-template-tag,.hljs-template-variable,.hljs-type,.hljs-variable.language_ {  /* prettylights-syntax-keyword */  color: #ff7b72}.hljs-title,.hljs-title.class_,.hljs-title.class_.inherited__,.hljs-title.function_ {  /* prettylights-syntax-entity */  color: #d2a8ff}.hljs-attr,.hljs-attribute,.hljs-literal,.hljs-meta,.hljs-number,.hljs-operator,.hljs-variable,.hljs-selector-attr,.hljs-selector-class,.hljs-selector-id {  /* prettylights-syntax-constant */  color: #79c0ff}.hljs-regexp,.hljs-string,.hljs-meta .hljs-string {  /* prettylights-syntax-string */  color: #a5d6ff}.hljs-built_in,.hljs-symbol {  /* prettylights-syntax-variable */  color: #ffa657}.hljs-comment,.hljs-code,.hljs-formula {  /* prettylights-syntax-comment */  color: #8b949e}.hljs-name,.hljs-quote,.hljs-selector-tag,.hljs-selector-pseudo {  /* prettylights-syntax-entity-tag */  color: #7ee787}.hljs-subst {  /* prettylights-syntax-storage-modifier-import */  color: #c9d1d9}.hljs-section {  /* prettylights-syntax-markup-heading */  color: #1f6feb;  font-weight: bold}.hljs-bullet {  /* prettylights-syntax-markup-list */  color: #f2cc60}.hljs-emphasis {  /* prettylights-syntax-markup-italic */  color: #c9d1d9;  font-style: italic}.hljs-strong {  /* prettylights-syntax-markup-bold */  color: #c9d1d9;  font-weight: bold}.hljs-addition {  /* prettylights-syntax-markup-inserted */  color: #aff5b4;  background-color: #033a16}.hljs-deletion {  /* prettylights-syntax-markup-deleted */  color: #ffdcd7;  background-color: #67060c}]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/css/progress_bar.css"/>
      <url>/css/progress_bar.css</url>
      
        <content type="html"><![CDATA[.pace {  -webkit-pointer-events: none;  pointer-events: none;  -webkit-user-select: none;  -moz-user-select: none;  user-select: none;  z-index: 2000;  position: fixed;  margin: auto;  top: 10px;  left: 0;  right: 0;  height: 8px;  border-radius: 8px;  width: 4rem;  background: #eaecf2;  border: 1px #e3e8f7;  overflow: hidden;}.pace-inactive .pace-progress {  opacity: 0;  transition: 0.3s ease-in;}.pace .pace-progress {  -webkit-box-sizing: border-box;  -moz-box-sizing: border-box;  -ms-box-sizing: border-box;  -o-box-sizing: border-box;  box-sizing: border-box;  -webkit-transform: translate3d(0, 0, 0);  -moz-transform: translate3d(0, 0, 0);  -ms-transform: translate3d(0, 0, 0);  -o-transform: translate3d(0, 0, 0);  transform: translate3d(0, 0, 0);  max-width: 200px;  position: absolute;  z-index: 2000;  display: block;  top: 0;  right: 100%;  height: 100%;  width: 100%;  background: linear-gradient(-45deg, #ee7752, #e73c7e, #23a6d5, #23d5ab);  animation: gradient 1.5s ease infinite;  background-size: 200%;}.pace.pace-inactive {  opacity: 0;  transition: 0.3s;  top: -8px;}@keyframes gradient {  0% {    background-position: 0% 50%;  }  50% {    background-position: 100% 50%;  }  100% {    background-position: 0% 50%;  }}]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/css/swiper.min.css"/>
      <url>/css/swiper.min.css</url>
      
        <content type="html"><![CDATA[/** * Swiper 4.1.6 * Most modern mobile touch slider and framework with hardware accelerated transitions * http://www.idangero.us/swiper/ * * Copyright 2014-2018 Vladimir Kharlampidi * * Released under the MIT License * * Released on: February 11, 2018 */.swiper-container {    margin: 0 auto;    position: relative;    overflow: hidden;    list-style: none;    padding: 0;    z-index: 1}.swiper-container-no-flexbox .swiper-slide {    float: left}.swiper-container-vertical>.swiper-wrapper {    -webkit-box-orient: vertical;    -webkit-box-direction: normal;    -webkit-flex-direction: column;    -ms-flex-direction: column;    flex-direction: column}.swiper-wrapper {    position: relative;    width: 100%;    height: 100%;    z-index: 1;    display: -webkit-box;    display: -webkit-flex;    display: -ms-flexbox;    display: flex;    -webkit-transition-property: -webkit-transform;    transition-property: -webkit-transform;    -o-transition-property: transform;    transition-property: transform;    transition-property: transform, -webkit-transform;    -webkit-box-sizing: content-box;    box-sizing: content-box}.swiper-container-android .swiper-slide,.swiper-wrapper {    -webkit-transform: translate3d(0, 0, 0);    transform: translate3d(0, 0, 0)}.swiper-container-multirow>.swiper-wrapper {    -webkit-flex-wrap: wrap;    -ms-flex-wrap: wrap;    flex-wrap: wrap}.swiper-container-free-mode>.swiper-wrapper {    -webkit-transition-timing-function: ease-out;    -o-transition-timing-function: ease-out;    transition-timing-function: ease-out;    margin: 0 auto}.swiper-slide {    -webkit-flex-shrink: 0;    -ms-flex-negative: 0;    flex-shrink: 0;    width: 100%;    height: 100%;    position: relative;    -webkit-transition-property: -webkit-transform;    transition-property: -webkit-transform;    -o-transition-property: transform;    transition-property: transform;    transition-property: transform, -webkit-transform}.swiper-invisible-blank-slide {    visibility: hidden}.swiper-container-autoheight,.swiper-container-autoheight .swiper-slide {    height: auto}.swiper-container-autoheight .swiper-wrapper {    -webkit-box-align: start;    -webkit-align-items: flex-start;    -ms-flex-align: start;    align-items: flex-start;    -webkit-transition-property: height, -webkit-transform;    transition-property: height, -webkit-transform;    -o-transition-property: transform, height;    transition-property: transform, height;    transition-property: transform, height, -webkit-transform}.swiper-container-3d {    -webkit-perspective: 1200px;    perspective: 1200px}.swiper-container-3d .swiper-cube-shadow,.swiper-container-3d .swiper-slide,.swiper-container-3d .swiper-slide-shadow-bottom,.swiper-container-3d .swiper-slide-shadow-left,.swiper-container-3d .swiper-slide-shadow-right,.swiper-container-3d .swiper-slide-shadow-top,.swiper-container-3d .swiper-wrapper {    -webkit-transform-style: preserve-3d;    transform-style: preserve-3d}.swiper-container-3d .swiper-slide-shadow-bottom,.swiper-container-3d .swiper-slide-shadow-left,.swiper-container-3d .swiper-slide-shadow-right,.swiper-container-3d .swiper-slide-shadow-top {    position: absolute;    left: 0;    top: 0;    width: 100%;    height: 100%;    pointer-events: none;    z-index: 10}.swiper-container-3d .swiper-slide-shadow-left {    background-image: -webkit-gradient(linear, right top, left top, from(rgba(0, 0, 0, .5)), to(rgba(0, 0, 0, 0)));    background-image: -webkit-linear-gradient(right, rgba(0, 0, 0, .5), rgba(0, 0, 0, 0));    background-image: -o-linear-gradient(right, rgba(0, 0, 0, .5), rgba(0, 0, 0, 0));    background-image: linear-gradient(to left, rgba(0, 0, 0, .5), rgba(0, 0, 0, 0))}.swiper-container-3d .swiper-slide-shadow-right {    background-image: -webkit-gradient(linear, left top, right top, from(rgba(0, 0, 0, .5)), to(rgba(0, 0, 0, 0)));    background-image: -webkit-linear-gradient(left, rgba(0, 0, 0, .5), rgba(0, 0, 0, 0));    background-image: -o-linear-gradient(left, rgba(0, 0, 0, .5), rgba(0, 0, 0, 0));    background-image: linear-gradient(to right, rgba(0, 0, 0, .5), rgba(0, 0, 0, 0))}.swiper-container-3d .swiper-slide-shadow-top {    background-image: -webkit-gradient(linear, left bottom, left top, from(rgba(0, 0, 0, .5)), to(rgba(0, 0, 0, 0)));    background-image: -webkit-linear-gradient(bottom, rgba(0, 0, 0, .5), rgba(0, 0, 0, 0));    background-image: -o-linear-gradient(bottom, rgba(0, 0, 0, .5), rgba(0, 0, 0, 0));    background-image: linear-gradient(to top, rgba(0, 0, 0, .5), rgba(0, 0, 0, 0))}.swiper-container-3d .swiper-slide-shadow-bottom {    background-image: -webkit-gradient(linear, left top, left bottom, from(rgba(0, 0, 0, .5)), to(rgba(0, 0, 0, 0)));    background-image: -webkit-linear-gradient(top, rgba(0, 0, 0, .5), rgba(0, 0, 0, 0));    background-image: -o-linear-gradient(top, rgba(0, 0, 0, .5), rgba(0, 0, 0, 0));    background-image: linear-gradient(to bottom, rgba(0, 0, 0, .5), rgba(0, 0, 0, 0))}.swiper-container-wp8-horizontal,.swiper-container-wp8-horizontal>.swiper-wrapper {    -ms-touch-action: pan-y;    touch-action: pan-y}.swiper-container-wp8-vertical,.swiper-container-wp8-vertical>.swiper-wrapper {    -ms-touch-action: pan-x;    touch-action: pan-x}.swiper-button-next,.swiper-button-prev {    position: absolute;    top: 50%;    width: 27px;    height: 44px;    margin-top: -22px;    z-index: 10;    cursor: pointer;    background-size: 27px 44px;    background-position: center;    background-repeat: no-repeat}.swiper-button-next.swiper-button-disabled,.swiper-button-prev.swiper-button-disabled {    opacity: .35;    cursor: auto;    pointer-events: none}.swiper-button-prev,.swiper-container-rtl .swiper-button-next {    background-image: url("data:image/svg+xml;charset=utf-8,%3Csvg%20xmlns%3D'http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg'%20viewBox%3D'0%200%2027%2044'%3E%3Cpath%20d%3D'M0%2C22L22%2C0l2.1%2C2.1L4.2%2C22l19.9%2C19.9L22%2C44L0%2C22L0%2C22L0%2C22z'%20fill%3D'%23007aff'%2F%3E%3C%2Fsvg%3E");    left: 10px;    right: auto}.swiper-button-next,.swiper-container-rtl .swiper-button-prev {    background-image: url("data:image/svg+xml;charset=utf-8,%3Csvg%20xmlns%3D'http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg'%20viewBox%3D'0%200%2027%2044'%3E%3Cpath%20d%3D'M27%2C22L27%2C22L5%2C44l-2.1-2.1L22.8%2C22L2.9%2C2.1L5%2C0L27%2C22L27%2C22z'%20fill%3D'%23007aff'%2F%3E%3C%2Fsvg%3E");    right: 10px;    left: auto}.swiper-button-prev.swiper-button-white,.swiper-container-rtl .swiper-button-next.swiper-button-white {    background-image: url("data:image/svg+xml;charset=utf-8,%3Csvg%20xmlns%3D'http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg'%20viewBox%3D'0%200%2027%2044'%3E%3Cpath%20d%3D'M0%2C22L22%2C0l2.1%2C2.1L4.2%2C22l19.9%2C19.9L22%2C44L0%2C22L0%2C22L0%2C22z'%20fill%3D'%23ffffff'%2F%3E%3C%2Fsvg%3E")}.swiper-button-next.swiper-button-white,.swiper-container-rtl .swiper-button-prev.swiper-button-white {    background-image: url("data:image/svg+xml;charset=utf-8,%3Csvg%20xmlns%3D'http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg'%20viewBox%3D'0%200%2027%2044'%3E%3Cpath%20d%3D'M27%2C22L27%2C22L5%2C44l-2.1-2.1L22.8%2C22L2.9%2C2.1L5%2C0L27%2C22L27%2C22z'%20fill%3D'%23ffffff'%2F%3E%3C%2Fsvg%3E")}.swiper-button-prev.swiper-button-black,.swiper-container-rtl .swiper-button-next.swiper-button-black {    background-image: url("data:image/svg+xml;charset=utf-8,%3Csvg%20xmlns%3D'http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg'%20viewBox%3D'0%200%2027%2044'%3E%3Cpath%20d%3D'M0%2C22L22%2C0l2.1%2C2.1L4.2%2C22l19.9%2C19.9L22%2C44L0%2C22L0%2C22L0%2C22z'%20fill%3D'%23000000'%2F%3E%3C%2Fsvg%3E")}.swiper-button-next.swiper-button-black,.swiper-container-rtl .swiper-button-prev.swiper-button-black {    background-image: url("data:image/svg+xml;charset=utf-8,%3Csvg%20xmlns%3D'http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg'%20viewBox%3D'0%200%2027%2044'%3E%3Cpath%20d%3D'M27%2C22L27%2C22L5%2C44l-2.1-2.1L22.8%2C22L2.9%2C2.1L5%2C0L27%2C22L27%2C22z'%20fill%3D'%23000000'%2F%3E%3C%2Fsvg%3E")}.swiper-button-lock {    display: none}.swiper-pagination {    position: absolute;    text-align: center;    -webkit-transition: .3s opacity;    -o-transition: .3s opacity;    transition: .3s opacity;    -webkit-transform: translate3d(0, 0, 0);    transform: translate3d(0, 0, 0);    z-index: 10}.swiper-pagination.swiper-pagination-hidden {    opacity: 0}.swiper-container-horizontal>.swiper-pagination-bullets,.swiper-pagination-custom,.swiper-pagination-fraction {    bottom: 10px;    left: 0;    width: 100%}.swiper-pagination-bullets-dynamic {    overflow: hidden;    font-size: 0}.swiper-pagination-bullets-dynamic .swiper-pagination-bullet {    -webkit-transform: scale(.33);    -ms-transform: scale(.33);    transform: scale(.33);    position: relative}.swiper-pagination-bullets-dynamic .swiper-pagination-bullet-active {    -webkit-transform: scale(1);    -ms-transform: scale(1);    transform: scale(1)}.swiper-pagination-bullets-dynamic .swiper-pagination-bullet-active-main {    -webkit-transform: scale(1);    -ms-transform: scale(1);    transform: scale(1)}.swiper-pagination-bullets-dynamic .swiper-pagination-bullet-active-prev {    -webkit-transform: scale(.66);    -ms-transform: scale(.66);    transform: scale(.66)}.swiper-pagination-bullets-dynamic .swiper-pagination-bullet-active-prev-prev {    -webkit-transform: scale(.33);    -ms-transform: scale(.33);    transform: scale(.33)}.swiper-pagination-bullets-dynamic .swiper-pagination-bullet-active-next {    -webkit-transform: scale(.66);    -ms-transform: scale(.66);    transform: scale(.66)}.swiper-pagination-bullets-dynamic .swiper-pagination-bullet-active-next-next {    -webkit-transform: scale(.33);    -ms-transform: scale(.33);    transform: scale(.33)}.swiper-pagination-bullet {    width: 8px;    height: 8px;    display: inline-block;    border-radius: 100%;    background: #000;    opacity: .2}button.swiper-pagination-bullet {    border: none;    margin: 0;    padding: 0;    -webkit-box-shadow: none;    box-shadow: none;    -webkit-appearance: none;    -moz-appearance: none;    appearance: none}.swiper-pagination-clickable .swiper-pagination-bullet {    cursor: pointer}.swiper-pagination-bullet-active {    opacity: 1;    background: #007aff}.swiper-container-vertical>.swiper-pagination-bullets {    right: 10px;    top: 50%;    -webkit-transform: translate3d(0, -50%, 0);    transform: translate3d(0, -50%, 0)}.swiper-container-vertical>.swiper-pagination-bullets .swiper-pagination-bullet {    margin: 6px 0;    display: block}.swiper-container-vertical>.swiper-pagination-bullets.swiper-pagination-bullets-dynamic {    top: 50%;    -webkit-transform: translateY(-50%);    -ms-transform: translateY(-50%);    transform: translateY(-50%);    width: 8px}.swiper-container-vertical>.swiper-pagination-bullets.swiper-pagination-bullets-dynamic .swiper-pagination-bullet {    display: inline-block;    -webkit-transition: .2s top, .2s -webkit-transform;    transition: .2s top, .2s -webkit-transform;    -o-transition: .2s transform, .2s top;    transition: .2s transform, .2s top;    transition: .2s transform, .2s top, .2s -webkit-transform}.swiper-container-horizontal>.swiper-pagination-bullets .swiper-pagination-bullet {    margin: 0 4px}.swiper-container-horizontal>.swiper-pagination-bullets.swiper-pagination-bullets-dynamic {    left: 50%;    -webkit-transform: translateX(-50%);    -ms-transform: translateX(-50%);    transform: translateX(-50%);    white-space: nowrap}.swiper-container-horizontal>.swiper-pagination-bullets.swiper-pagination-bullets-dynamic .swiper-pagination-bullet {    -webkit-transition: .2s left, .2s -webkit-transform;    transition: .2s left, .2s -webkit-transform;    -o-transition: .2s transform, .2s left;    transition: .2s transform, .2s left;    transition: .2s transform, .2s left, .2s -webkit-transform}.swiper-container-horizontal.swiper-container-rtl>.swiper-pagination-bullets-dynamic .swiper-pagination-bullet {    -webkit-transition: .2s right, .2s -webkit-transform;    transition: .2s right, .2s -webkit-transform;    -o-transition: .2s transform, .2s right;    transition: .2s transform, .2s right;    transition: .2s transform, .2s right, .2s -webkit-transform}.swiper-pagination-progressbar {    background: rgba(0, 0, 0, .25);    position: absolute}.swiper-pagination-progressbar .swiper-pagination-progressbar-fill {    background: #007aff;    position: absolute;    left: 0;    top: 0;    width: 100%;    height: 100%;    -webkit-transform: scale(0);    -ms-transform: scale(0);    transform: scale(0);    -webkit-transform-origin: left top;    -ms-transform-origin: left top;    transform-origin: left top}.swiper-container-rtl .swiper-pagination-progressbar .swiper-pagination-progressbar-fill {    -webkit-transform-origin: right top;    -ms-transform-origin: right top;    transform-origin: right top}.swiper-container-horizontal>.swiper-pagination-progressbar {    width: 100%;    height: 4px;    left: 0;    top: 0}.swiper-container-vertical>.swiper-pagination-progressbar {    width: 4px;    height: 100%;    left: 0;    top: 0}.swiper-pagination-white .swiper-pagination-bullet-active {    background: #fff}.swiper-pagination-progressbar.swiper-pagination-white {    background: rgba(255, 255, 255, .25)}.swiper-pagination-progressbar.swiper-pagination-white .swiper-pagination-progressbar-fill {    background: #fff}.swiper-pagination-black .swiper-pagination-bullet-active {    background: #000}.swiper-pagination-progressbar.swiper-pagination-black {    background: rgba(0, 0, 0, .25)}.swiper-pagination-progressbar.swiper-pagination-black .swiper-pagination-progressbar-fill {    background: #000}.swiper-pagination-lock {    display: none}.swiper-container-coverflow .swiper-wrapper {    -webkit-perspective: 1200px; /* Chrome, Safari */    -moz-perspective: 1200px;    /* Firefox */    -ms-perspective: 1200px;     /* Internet Explorer */    -o-perspective: 1200px;      /* Opera */    perspective: 1200px;          /* 标准属性 */  }.swiper-container-horizontal>.swiper-scrollbar {    position: absolute;    left: 1%;    bottom: 3px;    z-index: 50;    height: 5px;    width: 98%}.swiper-container-vertical>.swiper-scrollbar {    position: absolute;    right: 3px;    top: 1%;    z-index: 50;    width: 5px;    height: 98%}.swiper-scrollbar-drag {    height: 100%;    width: 100%;    position: relative;    background: rgba(0, 0, 0, .5);    border-radius: 10px;    left: 0;    top: 0}.swiper-scrollbar-cursor-drag {    cursor: move}.swiper-scrollbar-lock {    display: none}.swiper-zoom-container {    width: 100%;    height: 100%;    display: -webkit-box;    display: -webkit-flex;    display: -ms-flexbox;    display: flex;    -webkit-box-pack: center;    -webkit-justify-content: center;    -ms-flex-pack: center;    justify-content: center;    -webkit-box-align: center;    -webkit-align-items: center;    -ms-flex-align: center;    align-items: center;    text-align: center}.swiper-zoom-container>canvas,.swiper-zoom-container>img,.swiper-zoom-container>svg {    max-width: 100%;    max-height: 100%;    -o-object-fit: contain;    object-fit: contain}.swiper-slide-zoomed {    cursor: move}.swiper-lazy-preloader {    width: 42px;    height: 42px;    position: absolute;    left: 50%;    top: 50%;    margin-left: -21px;    margin-top: -21px;    z-index: 10;    -webkit-transform-origin: 50%;    -ms-transform-origin: 50%;    transform-origin: 50%;    -webkit-animation: swiper-preloader-spin 1s steps(12, end) infinite;    animation: swiper-preloader-spin 1s steps(12, end) infinite}.swiper-lazy-preloader:after {    display: block;    content: '';    width: 100%;    height: 100%;    background-image: url("data:image/svg+xml;charset=utf-8,%3Csvg%20viewBox%3D'0%200%20120%20120'%20xmlns%3D'http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg'%20xmlns%3Axlink%3D'http%3A%2F%2Fwww.w3.org%2F1999%2Fxlink'%3E%3Cdefs%3E%3Cline%20id%3D'l'%20x1%3D'60'%20x2%3D'60'%20y1%3D'7'%20y2%3D'27'%20stroke%3D'%236c6c6c'%20stroke-width%3D'11'%20stroke-linecap%3D'round'%2F%3E%3C%2Fdefs%3E%3Cg%3E%3Cuse%20xlink%3Ahref%3D'%23l'%20opacity%3D'.27'%2F%3E%3Cuse%20xlink%3Ahref%3D'%23l'%20opacity%3D'.27'%20transform%3D'rotate(30%2060%2C60)'%2F%3E%3Cuse%20xlink%3Ahref%3D'%23l'%20opacity%3D'.27'%20transform%3D'rotate(60%2060%2C60)'%2F%3E%3Cuse%20xlink%3Ahref%3D'%23l'%20opacity%3D'.27'%20transform%3D'rotate(90%2060%2C60)'%2F%3E%3Cuse%20xlink%3Ahref%3D'%23l'%20opacity%3D'.27'%20transform%3D'rotate(120%2060%2C60)'%2F%3E%3Cuse%20xlink%3Ahref%3D'%23l'%20opacity%3D'.27'%20transform%3D'rotate(150%2060%2C60)'%2F%3E%3Cuse%20xlink%3Ahref%3D'%23l'%20opacity%3D'.37'%20transform%3D'rotate(180%2060%2C60)'%2F%3E%3Cuse%20xlink%3Ahref%3D'%23l'%20opacity%3D'.46'%20transform%3D'rotate(210%2060%2C60)'%2F%3E%3Cuse%20xlink%3Ahref%3D'%23l'%20opacity%3D'.56'%20transform%3D'rotate(240%2060%2C60)'%2F%3E%3Cuse%20xlink%3Ahref%3D'%23l'%20opacity%3D'.66'%20transform%3D'rotate(270%2060%2C60)'%2F%3E%3Cuse%20xlink%3Ahref%3D'%23l'%20opacity%3D'.75'%20transform%3D'rotate(300%2060%2C60)'%2F%3E%3Cuse%20xlink%3Ahref%3D'%23l'%20opacity%3D'.85'%20transform%3D'rotate(330%2060%2C60)'%2F%3E%3C%2Fg%3E%3C%2Fsvg%3E");    background-position: 50%;    background-size: 100%;    background-repeat: no-repeat}.swiper-lazy-preloader-white:after {    background-image: url("data:image/svg+xml;charset=utf-8,%3Csvg%20viewBox%3D'0%200%20120%20120'%20xmlns%3D'http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg'%20xmlns%3Axlink%3D'http%3A%2F%2Fwww.w3.org%2F1999%2Fxlink'%3E%3Cdefs%3E%3Cline%20id%3D'l'%20x1%3D'60'%20x2%3D'60'%20y1%3D'7'%20y2%3D'27'%20stroke%3D'%23fff'%20stroke-width%3D'11'%20stroke-linecap%3D'round'%2F%3E%3C%2Fdefs%3E%3Cg%3E%3Cuse%20xlink%3Ahref%3D'%23l'%20opacity%3D'.27'%2F%3E%3Cuse%20xlink%3Ahref%3D'%23l'%20opacity%3D'.27'%20transform%3D'rotate(30%2060%2C60)'%2F%3E%3Cuse%20xlink%3Ahref%3D'%23l'%20opacity%3D'.27'%20transform%3D'rotate(60%2060%2C60)'%2F%3E%3Cuse%20xlink%3Ahref%3D'%23l'%20opacity%3D'.27'%20transform%3D'rotate(90%2060%2C60)'%2F%3E%3Cuse%20xlink%3Ahref%3D'%23l'%20opacity%3D'.27'%20transform%3D'rotate(120%2060%2C60)'%2F%3E%3Cuse%20xlink%3Ahref%3D'%23l'%20opacity%3D'.27'%20transform%3D'rotate(150%2060%2C60)'%2F%3E%3Cuse%20xlink%3Ahref%3D'%23l'%20opacity%3D'.37'%20transform%3D'rotate(180%2060%2C60)'%2F%3E%3Cuse%20xlink%3Ahref%3D'%23l'%20opacity%3D'.46'%20transform%3D'rotate(210%2060%2C60)'%2F%3E%3Cuse%20xlink%3Ahref%3D'%23l'%20opacity%3D'.56'%20transform%3D'rotate(240%2060%2C60)'%2F%3E%3Cuse%20xlink%3Ahref%3D'%23l'%20opacity%3D'.66'%20transform%3D'rotate(270%2060%2C60)'%2F%3E%3Cuse%20xlink%3Ahref%3D'%23l'%20opacity%3D'.75'%20transform%3D'rotate(300%2060%2C60)'%2F%3E%3Cuse%20xlink%3Ahref%3D'%23l'%20opacity%3D'.85'%20transform%3D'rotate(330%2060%2C60)'%2F%3E%3C%2Fg%3E%3C%2Fsvg%3E")}@-webkit-keyframes swiper-preloader-spin {    100% {        -webkit-transform: rotate(360deg);        transform: rotate(360deg)    }}@keyframes swiper-preloader-spin {    100% {        -webkit-transform: rotate(360deg);        transform: rotate(360deg)    }}.swiper-container .swiper-notification {    position: absolute;    left: 0;    top: 0;    pointer-events: none;    opacity: 0;    z-index: -1000}.swiper-container-fade.swiper-container-free-mode .swiper-slide {    -webkit-transition-timing-function: ease-out;    -o-transition-timing-function: ease-out;    transition-timing-function: ease-out}.swiper-container-fade .swiper-slide {    pointer-events: none;    -webkit-transition-property: opacity;    -o-transition-property: opacity;    transition-property: opacity}.swiper-container-fade .swiper-slide .swiper-slide {    pointer-events: none}.swiper-container-fade .swiper-slide-active,.swiper-container-fade .swiper-slide-active .swiper-slide-active {    pointer-events: auto}.swiper-container-cube {    overflow: visible}.swiper-container-cube .swiper-slide {    pointer-events: none;    -webkit-backface-visibility: hidden;    backface-visibility: hidden;    z-index: 1;    visibility: hidden;    -webkit-transform-origin: 0 0;    -ms-transform-origin: 0 0;    transform-origin: 0 0;    width: 100%;    height: 100%}.swiper-container-cube .swiper-slide .swiper-slide {    pointer-events: none}.swiper-container-cube.swiper-container-rtl .swiper-slide {    -webkit-transform-origin: 100% 0;    -ms-transform-origin: 100% 0;    transform-origin: 100% 0}.swiper-container-cube .swiper-slide-active,.swiper-container-cube .swiper-slide-active .swiper-slide-active {    pointer-events: auto}.swiper-container-cube .swiper-slide-active,.swiper-container-cube .swiper-slide-next,.swiper-container-cube .swiper-slide-next+.swiper-slide,.swiper-container-cube .swiper-slide-prev {    pointer-events: auto;    visibility: visible}.swiper-container-cube .swiper-slide-shadow-bottom,.swiper-container-cube .swiper-slide-shadow-left,.swiper-container-cube .swiper-slide-shadow-right,.swiper-container-cube .swiper-slide-shadow-top {    z-index: 0;    -webkit-backface-visibility: hidden;    backface-visibility: hidden}.swiper-container-cube .swiper-cube-shadow {    position: absolute;    left: 0;    bottom: 0;    width: 100%;    height: 100%;    background: #000;    opacity: .6;    -webkit-filter: blur(50px);    filter: blur(50px);    z-index: 0}.swiper-container-flip {    overflow: visible}.swiper-container-flip .swiper-slide {    pointer-events: none;    -webkit-backface-visibility: hidden;    backface-visibility: hidden;    z-index: 1}.swiper-container-flip .swiper-slide .swiper-slide {    pointer-events: none}.swiper-container-flip .swiper-slide-active,.swiper-container-flip .swiper-slide-active .swiper-slide-active {    pointer-events: auto}.swiper-container-flip .swiper-slide-shadow-bottom,.swiper-container-flip .swiper-slide-shadow-left,.swiper-container-flip .swiper-slide-shadow-right,.swiper-container-flip .swiper-slide-shadow-top {    z-index: 0;    -webkit-backface-visibility: hidden;    backface-visibility: hidden}.swiper-container-coverflow .swiper-wrapper {    -webkit-perspective: 1200px; /* Chrome, Safari */    -moz-perspective: 1200px;    /* Firefox */    -ms-perspective: 1200px;     /* Internet Explorer */    -o-perspective: 1200px;      /* Opera */    perspective: 1200px;          /* 标准属性 */  }]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/css/swiperstyle.css"/>
      <url>/css/swiperstyle.css</url>
      
        <content type="html"><![CDATA[* {    -webkit-box-sizing:border-box;    -moz-box-sizing:border-box;    box-sizing:border-box  }    div#swiper_container {    background:rgba(255, 255, 255, 0);    width: 57%;    padding: 0;    overflow: initial;  }  .blog-slider {    width:100%;    position:relative;    border-radius:12px 8px 8px 12px;    margin:auto;    background:var(--global-bg);    padding:10px;    -webkit-transition:all .3s;    -moz-transition:all .3s;    -o-transition:all .3s;    -ms-transition:all .3s;    transition:all .3s  }  .blog-slider__item {    display:-webkit-box;    display:-moz-box;    display:-webkit-flex;    display:-ms-flexbox;    display:box;    display:flex;    -webkit-box-align:center;    -moz-box-align:center;    -o-box-align:center;    -ms-flex-align:center;    -webkit-align-items:center;    align-items:center  }  .blog-slider__item.swiper-slide-active .blog-slider__img img {    opacity:1;    -ms-filter:none;    filter:none;    -webkit-transition-delay:.3s;    -moz-transition-delay:.3s;    -o-transition-delay:.3s;    -ms-transition-delay:.3s;    transition-delay:.3s  }  .blog-slider__item.swiper-slide-active .blog-slider__content>* {    opacity:1;    -ms-filter:none;    filter:none;    -webkit-transform:none;    -moz-transform:none;    -o-transform:none;    -ms-transform:none;    transform:none  }  .blog-slider__item.swiper-slide-active .blog-slider__content>:nth-child(1) {    -webkit-transition-delay:.3s;    -moz-transition-delay:.3s;    -o-transition-delay:.3s;    -ms-transition-delay:.3s;    transition-delay:.3s  }  .blog-slider__item.swiper-slide-active .blog-slider__content>:nth-child(2) {    -webkit-transition-delay:.4s;    -moz-transition-delay:.4s;    -o-transition-delay:.4s;    -ms-transition-delay:.4s;    transition-delay:.4s  }  .blog-slider__item.swiper-slide-active .blog-slider__content>:nth-child(3) {    -webkit-transition-delay:.5s;    -moz-transition-delay:.5s;    -o-transition-delay:.5s;    -ms-transition-delay:.5s;    transition-delay:.5s  }  .blog-slider__item.swiper-slide-active .blog-slider__content>:nth-child(4) {    -webkit-transition-delay:.6s;    -moz-transition-delay:.6s;    -o-transition-delay:.6s;    -ms-transition-delay:.6s;    transition-delay:.6s  }  .blog-slider__item.swiper-slide-active .blog-slider__content>:nth-child(5) {    -webkit-transition-delay:.7s;    -moz-transition-delay:.7s;    -o-transition-delay:.7s;    -ms-transition-delay:.7s;    transition-delay:.7s  }  .blog-slider__item.swiper-slide-active .blog-slider__content>:nth-child(6) {    -webkit-transition-delay:.8s;    -moz-transition-delay:.8s;    -o-transition-delay:.8s;    -ms-transition-delay:.8s;    transition-delay:.8s  }  .blog-slider__item.swiper-slide-active .blog-slider__content>:nth-child(7) {    -webkit-transition-delay:.9s;    -moz-transition-delay:.9s;    -o-transition-delay:.9s;    -ms-transition-delay:.9s;    transition-delay:.9s  }  .blog-slider__item.swiper-slide-active .blog-slider__content>:nth-child(8) {    -webkit-transition-delay:1s;    -moz-transition-delay:1s;    -o-transition-delay:1s;    -ms-transition-delay:1s;    transition-delay:1s  }  .blog-slider__item.swiper-slide-active .blog-slider__content>:nth-child(9) {    -webkit-transition-delay:1.1s;    -moz-transition-delay:1.1s;    -o-transition-delay:1.1s;    -ms-transition-delay:1.1s;    transition-delay:1.1s  }  .blog-slider__item.swiper-slide-active .blog-slider__content>:nth-child(10) {    -webkit-transition-delay:1.2s;    -moz-transition-delay:1.2s;    -o-transition-delay:1.2s;    -ms-transition-delay:1.2s;    transition-delay:1.2s  }  .blog-slider__item.swiper-slide-active .blog-slider__content>:nth-child(11) {    -webkit-transition-delay:1.3s;    -moz-transition-delay:1.3s;    -o-transition-delay:1.3s;    -ms-transition-delay:1.3s;    transition-delay:1.3s  }  .blog-slider__item.swiper-slide-active .blog-slider__content>:nth-child(12) {    -webkit-transition-delay:1.4s;    -moz-transition-delay:1.4s;    -o-transition-delay:1.4s;    -ms-transition-delay:1.4s;    transition-delay:1.4s  }  .blog-slider__item.swiper-slide-active .blog-slider__content>:nth-child(13) {    -webkit-transition-delay:1.5s;    -moz-transition-delay:1.5s;    -o-transition-delay:1.5s;    -ms-transition-delay:1.5s;    transition-delay:1.5s  }  .blog-slider__item.swiper-slide-active .blog-slider__content>:nth-child(14) {    -webkit-transition-delay:1.6s;    -moz-transition-delay:1.6s;    -o-transition-delay:1.6s;    -ms-transition-delay:1.6s;    transition-delay:1.6s  }  .blog-slider__item.swiper-slide-active .blog-slider__content>:nth-child(15) {    -webkit-transition-delay:1.7s;    -moz-transition-delay:1.7s;    -o-transition-delay:1.7s;    -ms-transition-delay:1.7s;    transition-delay:1.7s  }  .blog-slider__img {    width:200px;    -webkit-flex-shrink:0;    flex-shrink:0;    height:200px;    padding:10px;    border-radius:5px;    -webkit-transform:translateX(0);    -moz-transform:translateX(0);    -o-transform:translateX(0);    -ms-transform:translateX(0);    transform:translateX(0);    overflow:hidden  }  .blog-slider__img:after {    content:'';    position:absolute;    top:0;    left:0;    width:100%;    height:100%;    border-radius:5px;    opacity:.8  }  .blog-slider__img img {    width:100%;    height:100%;    object-fit:cover;    display:block;    opacity:0;    border-radius:5px;    -webkit-transition:all .3s;    -moz-transition:all .3s;    -o-transition:all .3s;    -ms-transition:all .3s;    transition:all .3s  }  .blog-slider__content {    padding-right:50px;    padding-left:50px  }  .blog-slider__content>* {    opacity:0;    -webkit-transform:translateY(25px);    -moz-transform:translateY(25px);    -o-transform:translateY(25px);    -ms-transform:translateY(25px);    transform:translateY(25px);    -webkit-transition:all .4s;    -moz-transition:all .4s;    -o-transition:all .4s;    -ms-transition:all .4s;    transition:all .4s  }  .blog-slider__code {    color:var(--font-color);    margin-bottom:0;    display:block;    font-weight:500  }  .blog-slider__title {    font-size:18px;    font-weight:700;    color:var(--font-color);    margin-bottom:15px;    -webkit-perspective: 1200px; /* Chrome, Safari */    -moz-perspective: 1200px;    /* Firefox */    -ms-perspective: 1200px;     /* Internet Explorer */    -o-perspective: 1200px;      /* Opera */    perspective: 1200px;      display:-webkit-box;    overflow:hidden;    -webkit-box-orient:vertical  }  .blog-slider__text {    color:var(--font-color);    -webkit-perspective: 1200px; /* Chrome, Safari */    -moz-perspective: 1200px;    /* Firefox */    -ms-perspective: 1200px;     /* Internet Explorer */    -o-perspective: 1200px;      /* Opera */    perspective: 1200px;      display:-webkit-box;    overflow:hidden;    -webkit-box-orient:vertical;    margin-bottom:15px;    line-height:1.5em;    width:100%;    display:block;    word-break:break-all;    word-wrap:break-word  }  .blog-slider__button {    display:-webkit-inline-box;    display:-moz-inline-box;    display:-webkit-inline-flex;    display:-ms-inline-flexbox;    display:inline-box;    display:inline-flex;    background-color:var(--btn-bg);    padding:4px 14px;    border-radius:8px;    color:var(--btn-color);    text-decoration:none;    font-weight:500;    -webkit-box-pack:center;    -moz-box-pack:center;    -o-box-pack:center;    -ms-flex-pack:center;    -webkit-justify-content:center;    justify-content:center;    text-align:center;    letter-spacing:1px;    display:none  }  .blog-slider__button:hover {    background-color:var(--btn-hover-color);    color:var(--btn-color)  }  .blog-slider .swiper-container-horizontal>.swiper-pagination-bullets, .blog-slider .swiper-pagination-custom, .blog-slider .swiper-pagination-fraction {    bottom:10px;    left:0;    width:100%  }  .blog-slider__pagination {    position:absolute;    z-index:21;    right:20px;    width:11px!important;    text-align:center;    left:auto!important;    top:50%;    bottom:auto!important;    -webkit-transform:translateY(-50%);    -moz-transform:translateY(-50%);    -o-transform:translateY(-50%);    -ms-transform:translateY(-50%);    transform:translateY(-50%)  }  .blog-slider__pagination.swiper-pagination-bullets .swiper-pagination-bullet {    margin:8px 0  }  .blog-slider__pagination .swiper-pagination-bullet {    width:11px;    height:11px;    display:block;    border-radius:10px;    background:#858585;    opacity:.2;    -webkit-transition:all .3s;    -moz-transition:all .3s;    -o-transition:all .3s;    -ms-transition:all .3s;    transition:all .3s  }  .blog-slider__pagination .swiper-pagination-bullet-active {    opacity:1;    -ms-filter:none;    filter:none;    background:var(--btn-bg);    height:30px  }  @media screen and (max-width:600px) {    .blog-slider__pagination {        -webkit-transform:translateX(-50%);        -moz-transform:translateX(-50%);        -o-transform:translateX(-50%);        -ms-transform:translateX(-50%);        transform:translateX(-50%);        left:50%!important;        top:320px;        width:100%!important;        display:-webkit-box;        display:-moz-box;        display:-webkit-flex;        display:-ms-flexbox;        display:box;        display:flex;        -webkit-box-pack:center;        -moz-box-pack:center;        -o-box-pack:center;        -ms-flex-pack:center;        -webkit-justify-content:center;        justify-content:center;        -webkit-box-align:center;        -moz-box-align:center;        -o-box-align:center;        -ms-flex-align:center;        -webkit-align-items:center;        align-items:center    }    .blog-slider__pagination.swiper-pagination-bullets .swiper-pagination-bullet {        margin:0 5px    }    .blog-slider__pagination .swiper-pagination-bullet-active {        height:11px;        width:30px    }    .blog-slider__button {        display:-webkit-inline-box;        display:-moz-inline-box;        display:-webkit-inline-flex;        display:-ms-inline-flexbox;        display:inline-box;        display:inline-flex;        width:100%    }    .blog-slider__text {        margin-bottom:40px    }    .blog-slider {        min-height:350px;        height:auto;        margin-top:110px;        margin-bottom:10px    }    .blog-slider__content {        margin-top:-80px;        text-align:center;        padding:0 30px    }    .blog-slider__item {        -webkit-box-orient:vertical;        -moz-box-orient:vertical;        -o-box-orient:vertical;        -webkit-flex-direction:column;        -ms-flex-direction:column;        flex-direction:column    }    .blog-slider__img {        -webkit-transform:translateY(-50%);        -moz-transform:translateY(-50%);        -o-transform:translateY(-50%);        -ms-transform:translateY(-50%);        transform:translateY(-50%);        width:90%    }    .blog-slider__content {        padding-left:10px;        padding-right:10px    }    .blog-slider__pagination.swiper-pagination-clickable.swiper-pagination-bullets {        top:110px    }  }  @media screen and (min-width:600px) {    .blog-slider {        height:200px    }    .blog-slider__img {        height:200px    }  }  /* 闅忔満鏂囩珷css */  #random{    background-color: var(--anzhiyu-white-acrylic1)!important;    border-radius: 8px;    font-family: 'ZhuZiAYuanJWD',PingFang,寰蒋闆呴粦,HYTMR,SimSun;    background-size:cover;    color:var(--anzhiyu-white);    font-size:44px; /*瑙夊緱灏忓彲浠ュ紑澶т竴鐐�*/    position: relative;    border-radius: 8px;    overflow: hidden;        margin-left: 10px;  }  #random-banner{    width:100% !important;    height:178.5px !important;    border-radius:8px;    display: flex;  }  #random-hover{    opacity: 0;    padding-left: 0rem;    position:absolute;    left: 0;    top: 0;    height:100%!important;    color: #0000;    border-radius: 8px;    transition: cubic-bezier(.71,.15,.16,1.15) .6s;  }  #random-hover:hover{    padding-left: 1rem;    opacity: 1;   color:#ffffff;   background-color: #425aefdd;   backdrop-filter: blur(10px) saturate(180%);   -webkit-backdrop-filter: blur(10px) saturate(180%);   transition: .3s;   background-size: 200%;   cursor: pointer;  }    @media screen and (max-width: 1050px){    #random{        display: none;    }    div#swiper_container {      width: 100%;    }  }    .swiper_container_card {    display: flex !important;    justify-content: space-around;    flex-direction: row !important;  }]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>友情链接</title>
      <link href="/link/index.html"/>
      <url>/link/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/js/fuction.js"/>
      <url>/js/fuction.js</url>
      
        <content type="html"><![CDATA[// 分享本页function share() {    let url = window.location.origin + window.location.pathname    new ClipboardJS(".share", { text: function() { return '标题：' + document.title + '\n链接：' + url } });    btf.snackbarShow("本页链接已复制到剪切板，快去分享吧~")}window.onscroll = percent;// 执行函数// 页面百分比function percent() {    // 检查页面中是否存在 card-toc 元素    const cardToc = document.getElementById('card-toc');    if (!cardToc) {        return; // 如果不存在，直接返回，不执行后续代码    }    // 获取百分比文本内容    const percentage = cardToc.querySelector('.toc-percentage').textContent.trim();    // 获取 go-up 元素    let up = document.querySelector("#go-up");    // 根据百分比设置样式和内容    if (percentage <= 99) {        up.childNodes[0].style.display = 'none'        up.childNodes[1].style.display = 'block'        up.childNodes[1].innerHTML = percentage;    } else {        up.childNodes[1].style.display = 'none'        up.childNodes[0].style.display = 'block'    }}]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/js/ali_font.js"/>
      <url>/js/ali_font.js</url>
      
        <content type="html"><![CDATA[window._iconfont_svg_string_4902343='<svg><symbol id="icon-shijianzhou_gaoliang" viewBox="0 0 1024 1024"><path d="M512 512m-416 0a416 416 0 1 0 832 0 416 416 0 1 0-832 0Z" fill="#0084FF" ></path><path d="M554.688 512H640a42.688 42.688 0 0 1 0 85.312H512a42.56 42.56 0 0 1-42.688-42.624V341.312a42.688 42.688 0 0 1 85.376 0V512z" fill="#FFFFFF" ></path></symbol><symbol id="icon-bilibili-nh" viewBox="0 0 1024 1024"><path d="M209.408 0h605.184C954.112 0 1024 69.8368 1024 209.408v605.184c0 139.5712-69.8368 209.408-209.408 209.408H209.408C69.888 1024 0 954.1632 0 814.592V209.408C0 69.888 69.8368 0 209.408 0z" fill="#03A7FD" ></path><path d="M356.5056 510.7712s34.7648-7.1168 39.7312-2.8672l16.9984 126.2592-28.3648 3.5328-28.3648-126.976z m13.4656-69.4784h19.8656l5.6832 48.9472h-18.432l-7.1168-48.9472z m-22.6816 4.9664l18.432-1.6384 5.6832 47.9232-16.128 2.6112-7.9872-48.896z m48.2304-59.648s40.448-4.2496 41.8304 0l19.8656 238.2848h-30.8736l-30.8224-238.2848z m70.912 125.5936h39.0144v128.3584h-28.416l-10.5984-128.3584z m19.456-65.2288h23.296v48.1792h-23.2448V446.976z m-23.7056 0h23.2448v48.1792h-23.2448V446.976z m-234.752 97.1264l-10.5984-195.0208c-6.4 5.6832-53.9136 21.2992-53.9136 21.2992 16.2816 56.0128 38.2976 289.28 38.2976 289.28 111.6672 3.584 158.1568-45.312 160.9728-56.6784a41.6256 41.6256 0 0 0 0-20.5824c-26.9824-44.6976-134.7584-38.2976-134.7584-38.2976z m33.7408 84.3776l-7.0144-55.5008 51.6096 21.7088-44.5952 33.792z m456.3456-46.08c-26.9824-44.6976-134.7584-38.2976-134.7584-38.2976l-10.752-195.0208c-6.2464 5.6832-53.76 21.2992-53.76 21.2992 16.2816 56.0128 38.2976 289.28 38.2976 289.28 111.616 3.584 158.208-45.312 160.9728-56.6784a42.1376 42.1376 0 0 0 0-20.5824z m-101.0688 46.08l-6.9632-55.5008 51.5584 21.7088-44.544 33.792z m95.3344-117.76s34.7648-7.0656 39.7312-2.816l16.9984 126.2592-28.416 3.584-28.3136-126.976z m13.5168-69.4272h19.8656l5.632 48.9472h-18.432l-7.0656-48.9472z m-22.6816 4.9664l18.432-1.6384 5.632 47.9232-16.128 2.6112-7.936-48.896z m48.1792-59.648s40.448-4.2496 41.8304 0l19.8656 238.2848h-30.8224l-30.8736-238.2848z m70.9632 125.5936h38.912v128.3584h-28.3136l-10.5984-128.3584z m19.456-65.2288h23.296v48.1792h-23.296V446.976z m-23.7568 0h23.296v48.1792h-23.296V446.976z" fill="#FFFFFF" ></path></symbol><symbol id="icon-comment" viewBox="0 0 1024 1024"><path d="M938.211556 170.666667c0-46.933333-37.944889-85.333333-84.878223-85.333334H170.666667c-46.933333 0-85.333333 38.4-85.333334 85.333334v512c0 46.933333 38.4 85.333333 85.333334 85.333333h597.333333l170.666667 170.666667L938.211556 170.666667zM768 597.333333h-512V512h512v85.333333z m0-128h-512v-85.333333h512v85.333333z m0-128h-512V256h512V341.333333z" fill="#0093D3" ></path></symbol><symbol id="icon-shangpinfenlei24" viewBox="0 0 1024 1024"><path d="M377.263158 485.052632H53.894737a53.894737 53.894737 0 0 1-53.894737-53.894737V107.789474a53.894737 53.894737 0 0 1 53.894737-53.894737h323.368421a53.894737 53.894737 0 0 1 53.894737 53.894737v323.368421a53.894737 53.894737 0 0 1-53.894737 53.894737zM107.789474 377.263158h215.578947V161.684211H107.789474z" fill="#1768E4" ></path><path d="M741.591579 565.355789a53.894737 53.894737 0 0 1-38.265263-15.629473L474.812632 320.673684a53.894737 53.894737 0 0 1 0-75.991579L703.326316 15.629474a53.894737 53.894737 0 0 1 75.991579 0l228.513684 228.513684a53.894737 53.894737 0 0 1 0 75.991579l-228.513684 228.513684a53.894737 53.894737 0 0 1-37.726316 16.707368z m-152.522105-282.947368l152.522105 152.522105 152.522105-152.522105-152.522105-152.522105z" fill="#8BB3F1" ></path><path d="M377.263158 1024H53.894737a53.894737 53.894737 0 0 1-53.894737-53.894737v-323.368421a53.894737 53.894737 0 0 1 53.894737-53.894737h323.368421a53.894737 53.894737 0 0 1 53.894737 53.894737v323.368421a53.894737 53.894737 0 0 1-53.894737 53.894737z m-269.473684-107.789474h215.578947v-215.578947H107.789474zM916.210526 1024h-323.368421a53.894737 53.894737 0 0 1-53.894737-53.894737v-323.368421a53.894737 53.894737 0 0 1 53.894737-53.894737h323.368421a53.894737 53.894737 0 0 1 53.894737 53.894737v323.368421a53.894737 53.894737 0 0 1-53.894737 53.894737z m-269.473684-107.789474h215.578947v-215.578947h-215.578947z" fill="#1768E4" ></path></symbol><symbol id="icon-liuyanban" viewBox="0 0 1024 1024"><path d="M0 0m204.8 0l614.4 0q204.8 0 204.8 204.8l0 614.4q0 204.8-204.8 204.8l-614.4 0q-204.8 0-204.8-204.8l0-614.4q0-204.8 204.8-204.8Z" fill="#66A9FF" ></path><path d="M519.621818 174.545455c16.523636 0 32.069818 5.934545 44.241455 16.98909l2.397091 2.280728 103.133091 103.249454-5.376 5.387637h51.502545c47.313455 0 85.969455 37.771636 87.354182 84.770909l0.034909 2.827636v267.066182c0 47.36-37.725091 86.062545-84.677818 87.563636L715.403636 744.727273H308.596364c-47.301818 0-85.957818-37.771636-87.458909-84.770909L221.090909 657.105455v-267.054546c0-47.36 37.725091-86.074182 84.677818-87.563636l2.827637-0.046546h66.641454l-5.376-5.387636 103.133091-103.249455A65.803636 65.803636 0 0 1 519.621818 174.545455zM512 558.545455H360.727273a34.909091 34.909091 0 0 0 0 69.818181h151.272727a34.909091 34.909091 0 0 0 0-69.818181z m139.636364-139.636364H360.727273a34.909091 34.909091 0 0 0 0 69.818182h290.909091a34.909091 34.909091 0 0 0 0-69.818182zM509.626182 228.119273l-1.256727 1.117091-73.12291 73.216h168.762182L530.874182 229.236364c-5.597091-5.608727-15.127273-5.981091-21.248-1.117091z" fill="#FFFFFF" ></path></symbol><symbol id="icon-my" viewBox="0 0 1024 1024"><path d="M649.38666667 280.39111111c-0.96 1.28-0.96 3.30666667 0 4.48l96.10666666 131.2c0.96 1.28 0.42666667 2.13333333-1.17333333 1.92l-161.70666667-17.6c-1.49333333-0.21333333-3.30666667 0.85333333-3.94666666 2.24L513.06666667 551.43111111c-0.64 1.38666667-1.6 1.38666667-2.24 0l-65.6-148.8c-0.64-1.38666667-2.34666667-2.45333333-3.94666667-2.24l-161.70666667 17.6c-1.49333333 0.21333333-2.02666667-0.74666667-1.17333333-1.92l96.10666667-131.2c0.96-1.28 0.96-3.30666667 0-4.48l-96.10666667-131.2c-0.96-1.28-0.42666667-2.13333333 1.17333333-1.92l161.70666667 17.6c1.49333333 0.21333333 3.30666667-0.85333333 3.94666667-2.24l65.6-148.8c0.64-1.38666667 1.6-1.38666667 2.24 0l65.6 148.8c0.64 1.38666667 2.34666667 2.45333333 3.94666666 2.24l161.70666667-17.6c1.49333333-0.21333333 2.02666667 0.74666667 1.17333333 1.92l-96.10666666 131.2z" fill="#58D598" ></path><path d="M512 567.43111111m-399.89333333 0a399.89333333 399.89333333 0 1 0 799.78666666 0 399.89333333 399.89333333 0 1 0-799.78666666 0Z" fill="#FF5C7A" ></path><path d="M600.4 424c-15.5 0-30.7 3.1-45.1 9.3-13.8 5.9-26.3 14.4-37 25.1-2.1 2.1-4.3 4.3-6.4 6.6-2-2.2-4.2-4.4-6.4-6.6-10.7-10.7-23.2-19.2-37-25.1-14.4-6.2-29.5-9.3-45.1-9.3-15.5 0-30.7 3.1-45.1 9.3-13.8 5.9-26.3 14.4-37 25.1-21.2 21.2-34.4 52.7-34.4 82.1 0 28 12.1 57 34 81.7 0.1 0.1 0.2 0.2 0.3 0.4 16 16 141.4 139.7 150.1 147.6l0.1 0.1c3.2 3.1 9.8 9.5 20.3 9.5 10.4 0 17-6.3 20.2-9.4l0.2-0.2c8.8-8 133.7-131.2 150.1-147.6 10.7-10.7 19.2-23.2 25.1-37 6.2-14.4 9.3-29.5 9.3-45.1 0-15.5-3.1-30.7-9.3-45.1-5.9-13.8-14.4-26.3-25.1-37-10.7-10.7-23.2-19.2-37-25.1-14.1-6.2-29.2-9.3-44.8-9.3" fill="#ffffff" ></path></symbol><symbol id="icon-shijianzhou" viewBox="0 0 1024 1024"><path d="M512 512m-486.4 0a486.4 486.4 0 1 0 972.8 0 486.4 486.4 0 1 0-972.8 0Z" fill="#FFFFFF" ></path><path d="M512 1024C230.4 1024 0 793.6 0 512S230.4 0 512 0s512 230.4 512 512-230.4 512-512 512z m0-972.8c-256 0-460.8 204.8-460.8 460.8s204.8 460.8 460.8 460.8 460.8-204.8 460.8-460.8-204.8-460.8-460.8-460.8z" fill="#0057FF" ></path><path d="M512 512m-307.2 0a307.2 307.2 0 1 0 614.4 0 307.2 307.2 0 1 0-614.4 0Z" fill="#0057FF" ></path></symbol><symbol id="icon-dog" viewBox="0 0 1024 1024"><path d="M894.814316 904.434526l83.240421-183.134315-13.824-13.204211c-0.485053-0.458105-45.648842-47.589053-47.939369-185.263158-0.134737-7.922526-0.134737-33.953684-0.134736-55.996631-30.693053 15.306105-70.090105 19.887158-106.09179 19.887157-92.752842 0-163.624421-23.983158-210.647579-71.275789a192.512 192.512 0 0 1-27.944421-36.513684H377.263158v377.263158c342.662737 0 403.105684 51.092211 494.592 128.377263 7.922526 6.682947 15.521684 13.312 22.959158 19.86021z" fill="#85C3DE" ></path><path d="M326.063158 282.947368c0 34.250105-13.231158 44.463158-29.642105 44.463158s-29.642105-10.213053-29.642106-44.463158c0-34.223158 13.231158-44.463158 29.642106-44.463157s29.642105 10.24 29.642105 44.463157zM269.473684 430.295579v311.646316L190.275368 916.210526h59.203369L323.368421 753.637053V377.263158h-26.947368c-119.403789 0-172.732632-53.382737-185.505685-107.789474h35.624421c51.092211 0 68.581053-15.764211 120.535579-62.544842 12.773053-11.506526 28.079158-25.276632 47.023158-41.741474l18.351158-15.952842-69.658947-99.139368-44.085895 30.989474 41.768421 59.472842c-11.183158 9.862737-20.884211 18.593684-29.480421 26.327579C180.736 212.156632 176.235789 215.578947 146.539789 215.578947H53.894737v26.947369c0 88.710737 66.910316 178.149053 215.578947 187.769263z m216.710737-161.414737c2.290526 71.733895 28.698947 136.326737 75.048421 182.918737C618.711579 509.628632 702.437053 538.947368 810.091789 538.947368c18.593684 0 36.190316-1.158737 52.628211-3.449263 3.745684 111.265684 33.630316 170.334316 51.496421 196.015158l-38.507789 84.722526C782.174316 742.049684 688.774737 700.631579 377.263158 700.631579v53.894737c34.277053 0 65.697684 0.512 94.639158 1.509052L374.595368 970.105263h59.203369l96.013474-211.240421c66.182737 4.338526 117.005474 11.829895 157.911578 22.016L626.229895 916.210526h59.176421l54.16421-119.134315c47.616 18.405053 79.737263 42.091789 113.125053 69.739789L805.753263 970.105263h59.203369l113.071157-248.778105-13.824-13.204211c-0.485053-0.458105-45.648842-47.589053-47.939368-185.263158C985.168842 498.553263 1024 447.811368 1024 377.263158c0-95.205053-66.506105-161.684211-161.684211-161.684211v53.894737c65.482105 0 107.789474 42.307368 107.789474 107.789474 0 89.088-87.013053 107.789474-160.013474 107.789474-92.752842 0-163.624421-23.983158-210.647578-71.27579-30.315789-30.504421-45.891368-65.832421-53.35579-98.735158 11.210105 6.952421 22.932211 13.338947 35.274105 19.186527l23.04-48.720843c-92.106105-43.654737-148.992-128.646737-219.243789-243.981473l-46.026105 28.05221c49.448421 81.246316 92.968421 148.506947 147.051789 199.302737z" fill="#231F20" ></path></symbol><symbol id="icon-goat" viewBox="0 0 1024 1024"><path d="M548.378947 646.736842a952.32 952.32 0 0 1 140.90779-161.68421H107.789474c0 107.600842 0 107.600842-63.649685 169.283368l-13.069473 12.665263L66.721684 754.526316h417.172211c20.345263-41.472 43.654737-77.446737 64.485052-107.789474z" fill="#F7C768" ></path><path d="M608.256 144.734316C555.762526 115.577263 506.098526 107.789474 485.052632 107.789474V53.894737c32.579368 0 91.270737 11.452632 149.369263 43.735579 75.290947 41.822316 130.694737 94.531368 171.385263 150.878316C755.873684 288.013474 697.101474 323.368421 646.736842 323.368421h-107.789474v-53.894737h107.789474c20.506947 0 48.424421-11.210105 80.437895-31.285895a471.04 471.04 0 0 0-118.918737-93.453473zM832.673684 342.231579c-16.384 0-29.642105 10.24-29.642105 44.463158 0 34.250105 13.231158 44.463158 29.642105 44.463158s29.642105-10.213053 29.642105-44.463158c0-34.223158-13.231158-44.463158-29.642105-44.463158zM1024 619.789474C1024 347.109053 901.066105 122.448842 686.753684 3.395368l-26.165895 47.104C914.324211 191.461053 964.688842 440.400842 969.647158 592.842105h-84.506947c-17.92-35.624421-45.352421-69.12-87.013053-101.995789l-16.788211-13.285053-16.734315 13.392842c-66.128842 52.897684-134.629053 127.083789-187.311158 209.677474H102.965895l-8.272842-20.318316C159.043368 617.013895 161.684211 603.109053 161.684211 485.052632v-53.894737h485.052631v-53.894737H161.684211c0-80.384 14.309053-110.026105 66.586947-137.916632l-25.384421-47.535158C123.365053 234.226526 107.789474 291.920842 107.789474 377.263158v107.789474c0 107.600842 0 107.600842-63.649685 169.283368l-13.069473 12.665263L110.618947 862.315789h58.206316l-43.897263-107.789473h103.477895l43.897263 107.789473h58.206316l-43.897263-107.789473h259.47621C508.981895 824.939789 485.052632 899.152842 485.052632 970.105263h53.894736c0-68.688842 27.270737-144.060632 68.958316-215.578947H687.157895c7.410526 0 13.473684 6.063158 13.473684 13.473684V862.315789h53.894737v-94.315789c0-37.160421-30.208-67.368421-67.368421-67.368421h-44.65179c40.771368-58.017684 89.438316-111.427368 138.913684-153.626947C841.512421 600.037053 862.315789 655.225263 862.315789 754.526316h53.894737c0-38.912-2.748632-74.482526-11.102315-107.789474H1024v-26.947368z" fill="#231F20" ></path></symbol><symbol id="icon-dragon" viewBox="0 0 1024 1024"><path d="M366.376421 344.441263l152.980211-152.98021c43.142737-43.142737 141.204211-9.216 270.201263 115.738947-15.225263 9.835789-25.114947 15.818105-44.13979 32.256s-38.076632 35.489684-59.418947 56.832c-4.203789 4.203789-51.173053 53.221053-78.740211 82.027789-10.805895-12.126316-22.743579-24.171789-34.654315-36.082526L493.136842 362.792421l-54.218105 54.218105-72.542316-72.569263zM862.315789 512c0 46.834526-45.352421 80.842105-107.789473 80.842105-108.948211 0-189.359158-28.806737-267.129263-56.697263C414.100211 509.871158 344.872421 485.052632 258.182737 485.052632 80.788211 485.052632 0 588.126316 0 683.897263h53.894737C73.216 659.779368 135.302737 646.736842 177.340632 646.736842c77.338947 0 223.124211 23.282526 291.893894 47.912421C547.462737 722.701474 615.989895 754.526316 734.315789 754.526316 862.315789 754.526316 916.210526 670.315789 916.210526 512h-53.894737z" fill="#FF8787" ></path><path d="M552.421053 1024c-69.766737 0-113.825684-13.958737-156.402527-27.459368-54.487579-17.273263-110.807579-35.004632-232.421052-26.516211l-3.826527-53.733053c131.718737-9.458526 195.934316 10.967579 252.52379 28.887579 42.226526 13.365895 78.686316 24.926316 140.126316 24.926316 92.752842 0 148.210526-57.936842 148.210526-113.960421 0-16.949895-5.524211-101.618526-114.634105-101.618526-64.970105 0-112.747789 23.336421-163.328 48.02021C365.325474 830.571789 300.301474 862.315789 204.288 862.315789 85.908211 862.315789 0 787.294316 0 683.897263 0 588.126316 80.788211 485.052632 258.182737 485.052632c86.689684 0 155.917474 24.818526 229.214316 51.09221 45.810526 16.410947 92.564211 33.172211 145.488842 44.166737 9.000421-7.033263 13.850947-16.276211 13.850947-26.758737 0-37.187368-37.672421-74.859789-74.13221-111.265684l-3.287579-3.287579 38.103579-38.103579 3.260631 3.287579C652.853895 446.275368 700.631579 494.026105 700.631579 553.552842c0 12.719158-2.802526 24.926316-7.976421 36.109474A594.997895 594.997895 0 0 0 754.526316 592.842105c62.437053 0 107.789474-34.007579 107.789473-80.842105 0-58.853053-52.870737-110.268632-108.840421-164.702316l-8.057263-7.841684c-19.024842 16.437895-38.076632 35.489684-59.418947 56.832l-38.103579-38.103579c74.805895-74.832842 134.898526-134.898526 268.314947-141.931789V55.619368c-63.407158 7.787789-120.993684 39.424-121.667368 39.801264l-15.818105 8.811789-14.120421-11.344842C731.701895 66.452211 709.712842 53.894737 673.684211 53.894737c-41.418105 0-74.347789 25.869474-109.190737 53.301895-26.624 20.911158-54.137263 42.549895-86.851369 53.194105L469.342316 161.684211h-69.093053l-105.525895 105.525894-38.103579-38.130526L324.015158 161.684211H161.684211V107.789474h303.104c22.231579-8.272842 43.708632-25.168842 66.398315-42.981053C569.829053 34.438737 613.618526 0 673.684211 0c48.909474 0 81.408 17.946947 110.888421 40.097684C813.702737 26.300632 877.729684 0 943.157895 0h26.947368v323.368421h-53.894737v-53.167158c-54.164211 3.098947-92.914526 15.845053-127.002947 36.675369l1.832421 1.778526C852.587789 368.505263 916.210526 430.376421 916.210526 512c0 60.928-43.708632 109.945263-107.789473 127.622737V700.631579h53.894736v-53.894737h53.894737v53.894737h53.894737v53.894737h-53.894737v53.894737h-53.894737v-53.894737h-53.894736c-29.722947 0-53.894737-24.171789-53.894737-53.894737v-53.894737c-118.325895 0-207.063579-31.797895-285.318737-59.877053C400.437895 562.229895 335.494737 538.947368 258.182737 538.947368 117.059368 538.947368 53.894737 611.732211 53.894737 683.897263 53.894737 757.221053 115.738947 808.421053 204.288 808.421053c11.910737 0 23.228632-0.538947 34.034526-1.536C248.454737 796.321684 269.473684 770.640842 269.473684 739.166316c0-33.118316-43.088842-70.979368-58.152421-81.596632l30.935579-44.139789c8.299789 5.793684 81.111579 58.664421 81.111579 125.736421 0 19.429053-4.527158 37.052632-10.994526 52.304842 30.773895-10.051368 58.314105-23.498105 86.662737-37.349053C452.877474 727.848421 508.577684 700.631579 585.997474 700.631579 702.410105 700.631579 754.526316 778.725053 754.526316 856.144842 754.526316 938.657684 678.912 1024 552.421053 1024z m-21.180632-623.104L493.136842 362.792421l137.889684-137.889684 38.103579 38.103579-137.889684 137.889684z m-126.760421-18.351158l-38.103579-38.103579 152.980211-152.98021 38.103579 38.103579-152.980211 152.98021z m282.004211-218.624c15.494737-9.754947 43.331368-31.447579 43.331368-31.447579-25.734737-27.809684-49.556211-33.333895-67.368421-29.07621-19.240421 4.608-37.753263 24.602947-37.753263 24.602947s42.253474 22.447158 61.790316 35.920842z" fill="#231F20" ></path></symbol><symbol id="icon-horse" viewBox="0 0 1024 1024"><path d="M776.003368 646.736842c16.599579-99.947789 43.439158-181.086316 83.213474-256.538947l6.817684-12.934737H269.473684c-36.756211 0-53.894737 54.945684-53.894737 92.05221 0 46.753684 6.656 77.527579 70.278737 176.074106l84.533895 128.269473L498.876632 646.736842h277.126736z" fill="#FFAF6E" ></path><path d="M1024 0v404.210526c0 33.333895 0 134.736842-92.079158 134.736842h-13.824l-78.362947-109.056c-22.743579 49.906526-40.340211 103.046737-53.490527 162.950737h115.092211C937.310316 592.842105 970.105263 625.637053 970.105263 661.638737c0 60.631579-69.389474 154.300632-77.312 164.75621l-43.008-32.471579C875.466105 759.861895 916.210526 693.813895 916.210526 661.638737c0-5.982316-8.919579-14.901895-14.901894-14.901895h-125.332211C761.128421 736.121263 754.526316 840.569263 754.526316 970.105263h-53.894737c0-283.971368 31.097263-453.605053 110.888421-605.049263l20.318316-38.534737 112.801684 156.995369c14.443789-4.419368 25.465263-20.938105 25.465263-79.306106V0h53.894737z m-161.684211 161.684211h53.894737V0h-53.894737v80.842105c-17.381053-14.955789-38.184421-26.947368-80.842105-26.947368h-134.736842v53.894737h134.736842c37.672421 0 80.842105 40.906105 80.842105 53.894737z m-107.789473 0h-215.578948v53.894736h161.684211l53.894737-53.894736zM300.894316 766.544842L400.680421 916.210526h64.754526l-95.043368-142.551579L498.876632 646.736842h167.855157a1212.631579 1212.631579 0 0 1 9.431579-53.894737h-199.383579l-175.885473 173.702737z m109.97221-184.400842l-37.861052-38.319158-132.419369 130.802526C173.729684 571.095579 161.684211 529.812211 161.684211 469.315368 161.684211 398.578526 199.464421 323.368421 269.473684 323.368421h323.368421l53.894737-53.894737H269.473684c-6.709895 0-13.258105 0.565895-19.698526 1.482105C234.927158 249.451789 204.638316 215.578947 160.633263 215.578947 65.967158 215.578947 0 349.291789 0 469.315368c0 70.170947 16.141474 136.650105 49.232842 202.671158L6.197895 723.833263l41.472 34.41179 66.128842-79.737264-8.704-16.033684C83.105684 622.133895 53.894737 558.214737 53.894737 469.315368 53.894737 368.451368 106.765474 269.473684 160.633263 269.473684c13.231158 0 25.815579 9.889684 35.43579 20.533895C142.874947 321.967158 107.789474 388.500211 107.789474 469.315368c0 78.201263 19.698526 130.937263 93.642105 243.981474l-55.296 54.622316L280.899368 970.105263h64.754527l-130.048-195.072 195.260631-192.889263z" fill="#231F20" ></path></symbol><symbol id="icon-monkey" viewBox="0 0 1024 1024"><path d="M757.733053 485.052632H565.894737a80.842105 80.842105 0 0 0-80.842105 80.842105v215.578947c0 40.96 43.546947 99.678316 77.446736 139.210105C596.426105 960.215579 603.055158 970.105263 603.055158 970.105263H754.526316s15.144421-18.674526 45.891368-58.071579S862.315789 809.984 862.315789 717.608421c0-89.573053-47.993263-166.346105-104.582736-232.555789z" fill="#C3D686" ></path><path d="M538.947368 1024h-53.894736c0-32.794947 25.869474-87.417263 77.446736-103.316211C528.599579 881.152 485.052632 822.433684 485.052632 781.473684c0-44.570947 36.271158-80.842105 80.842105-80.842105h80.842105v53.894737h-80.842105a26.947368 26.947368 0 0 0-26.947369 26.947368c0 19.725474 36.675368 77.473684 92.133053 134.736842h88.602947c20.210526-14.147368 88.737684-71.464421 88.737685-198.602105 0-108.382316-93.237895-202.967579-168.151579-278.986105-49.502316-50.202947-88.576-89.842526-98.735158-128.61979-11.749053-44.732632-21.584842-112.586105-26.327579-148.318315H377.263158c-45.136842 0-89.519158 8.434526-121.802105 53.894736H431.157895v53.894737c-97.28 0-107.789474 113.071158-107.789474 161.684211v53.894737h53.894737v161.68421h-53.894737v-107.789474h-26.947368c-170.253474 0-188.631579-94.234947-188.631579-134.736842 0-31.043368 35.220211-72.326737 55.727158-93.722947 2.694737-14.686316 5.847579-28.348632 9.431579-41.013895H161.684211V215.578947h31.528421C239.642947 120.993684 317.224421 107.789474 377.263158 107.789474h185.640421l2.802526 23.794526c0.134737 1.050947 12.719158 106.657684 27.944421 164.756211 6.494316 24.872421 44.624842 63.514947 84.965053 104.448C760.481684 483.813053 862.315789 587.129263 862.315789 717.608421c0 92.375579-31.124211 155.028211-61.898105 194.425263C904.919579 892.146526 970.105263 803.004632 970.105263 673.684211c0-91.405474-42.819368-154.381474-84.237474-215.255579C847.791158 402.458947 808.421053 344.576 808.421053 269.473684c0-119.349895 87.093895-161.684211 161.68421-161.68421v53.894737c-32.417684 0-107.789474 10.509474-107.789474 107.789473 0 58.502737 31.555368 104.933053 68.096 158.639158C974.282105 492.597895 1024 565.679158 1024 673.684211c0 177.286737-108.301474 296.421053-269.473684 296.421052h-161.684211c-37.672421 0-53.894737 40.906105-53.894737 53.894737zM229.214316 269.473684a384.808421 384.808421 0 0 0-14.012632 58.341053l-1.401263 8.488421-6.090105 6.117053c-22.878316 22.932211-44.813474 52.601263-46.026105 62.275368 0 56.805053 53.76 75.264 107.789473 79.386947V431.157895c0-58.691368 13.473684-119.619368 46.511158-161.684211h-86.770526zM323.368421 1024h-53.894737c0-32.794947 25.869474-87.417263 77.446737-103.316211C313.020632 881.152 269.473684 822.433684 269.473684 781.473684c0-44.570947 36.271158-80.842105 80.842105-80.842105h45.16379A188.847158 188.847158 0 0 1 565.894737 592.842105h134.736842v53.894737h-134.736842c-74.293895 0-134.736842 60.442947-134.736842 134.736842v26.516211l-53.894737 0.377263V781.473684c0-9.162105 0.646737-18.135579 1.913263-26.947368H350.315789c-14.848 0-26.947368 12.072421-26.947368 26.947368 0 19.725474 36.675368 77.473684 92.133053 134.736842H431.157895v53.894737h-53.894737c-37.672421 0-53.894737 40.906105-53.894737 53.894737z" fill="#231F20" ></path></symbol><symbol id="icon-ox" viewBox="0 0 1025 1024"><path d="M540.294737 754.526316h215.578947c20.210526 0 35.112421 1.374316 53.894737 4.581052 91.863579 15.656421 145.354105 67.691789 161.684211 86.069895V916.210526h53.894736V635.580632l-7.895579-7.895579c-9.269895-9.269895-36.513684-49.232842-44.032-196.527158H540.294737a161.684211 161.684211 0 0 0-161.684211 161.68421v131.098948c43.304421 20.210526 97.28 30.585263 161.684211 30.585263z" fill="#FFAF6E" ></path><path d="M1025.347368 635.580632V916.210526h-53.894736v-71.033263c-16.330105-18.405053-69.820632-70.413474-161.684211-86.069895V916.210526h-53.894737v-161.68421h-107.789473v215.578947h-53.894737V700.631579h161.68421c100.998737 0 172.570947 38.669474 215.578948 71.868632v-115.738948c-33.684211-43.627789-51.712-137.458526-53.706106-279.498105H701.978947c-76.934737 0-127.218526-26.219789-175.804631-51.550316a1556.048842 1556.048842 0 0 0-26.839579-13.743158c-26.839579 26.004211-66.209684 44.921263-115.738948 55.511579 24.441263 22.986105 60.874105 52.116211 106.469053 72.838737l-22.312421 49.044211c-76.584421-34.816-129.589895-88.926316-150.824421-113.125053-10.644211 0.619789-21.477053 1.024-32.687158 1.024a473.734737 473.734737 0 0 1-123.365053-15.952842l-93.022315 186.314105 68.581052 53.86779C167.882105 579.557053 237.891368 538.947368 324.715789 538.947368v53.894737c-95.986526 0-170.361263 62.490947-171.088842 63.137684l-16.78821 14.282106-136.838737-107.358316 109.729684-219.809684C46.430316 314.448842 1.347368 267.371789 1.347368 199.868632 1.347368 89.815579 121.586526 53.894737 163.031579 53.894737v53.894737c-14.120421 0-107.789474 17.165474-107.789474 92.079158C55.242105 290.465684 192.188632 323.368421 284.240842 323.368421c67.907368 0 122.421895-12.988632 157.696-35.624421-42.711579-14.336-95.097263-23.120842-169.337263-18.324211l-3.503158-53.786947c95.878737-6.117053 160.148211 8.515368 211.429053 28.833684C484.244211 235.439158 486.4 225.818947 486.4 215.578947c0-48.855579-57.829053-76.288-58.394947-76.557473l22.393263-49.017263C454.063158 91.648 540.294737 131.826526 540.294737 215.578947c0 18.566737-3.422316 35.84-9.997474 51.631158 7.060211 3.584 13.985684 7.168 20.776421 10.698106C597.854316 302.322526 638.248421 323.368421 701.978947 323.368421h269.473685v26.947368c0 214.689684 35.220211 266.590316 45.999157 277.369264l7.895579 7.895579z m-729.384421 25.141894l-98.789052 118.541474 86.797473 137.835789 45.594948-28.725894-65.913263-104.690527 37.052631-44.43621C358.642526 785.192421 439.080421 808.421053 540.294737 808.421053v-53.894737c-99.893895 0-175.077053-24.549053-223.474526-72.946527l-20.857264-20.857263z" fill="#231F20" ></path></symbol><symbol id="icon-rabbit" viewBox="0 0 1024 1024"><path d="M680.96 488.744421a1666.667789 1666.667789 0 0 0-54.433684-23.95621c-16.006737 12.234105-33.899789 20.264421-60.631579 20.264421h-80.842105c-36.810105 0-83.644632 30.396632-104.394106 67.772631-42.819368 77.123368-53.409684 117.813895-11.021473 201.701053C397.096421 808.879158 431.157895 876.409263 431.157895 970.105263h338.539789l68.338527-138.859789c20.129684-40.96 24.252632-73.701053 24.252631-110.349474 0.026947-57.397895-25.061053-159.717053-181.328842-232.151579z" fill="#FFBDD8" ></path><path d="M862.315789 720.896c0 36.621474-4.122947 69.389474-24.252631 110.349474L769.697684 970.105263H485.052632v-53.894737h48.370526C507.877053 880.074105 485.052632 833.509053 485.052632 781.473684c0-59.418947 24.171789-113.313684 63.218526-152.360421l38.103579 38.103579A161.091368 161.091368 0 0 0 538.947368 781.473684c0 54.784 35.381895 104.043789 63.514948 134.736842h133.712842l53.490526-108.759579c15.710316-31.851789 18.755368-55.834947 18.755369-86.554947 0-80.976842-63.434105-150.096842-178.607158-195.503158-17.542737 8.138105-38.292211 13.554526-63.919158 13.554526h-80.842105c-13.958737 0-43.924211 15.979789-57.290106 40.016843l-47.104-26.165895C401.408 515.449263 448.242526 485.052632 485.052632 485.052632h80.842105c37.268211 0 57.478737-15.440842 79.090526-36.45979C625.367579 336.195368 549.753263 269.473684 485.052632 269.473684h-107.789474a21.288421 21.288421 0 0 0-5.955369 2.021053A683.762526 683.762526 0 0 0 302.187789 194.021053c-35.84-34.223158-61.763368-58.933895-94.908631-79.440842A42.442105 42.442105 0 0 0 185.478737 107.789474a22.824421 22.824421 0 0 0-17.381053 7.194947c-10.913684 11.425684-6.063158 28.240842 1.428211 39.181474 21.989053 32.121263 47.912421 56.858947 83.752421 91.109052 20.614737 19.671579 49.259789 43.169684 77.392842 63.08379C281.007158 367.400421 215.578947 484.432842 215.578947 592.842105c0 74.482526 24.791579 124.065684 51.065264 176.586106C294.534737 825.209263 323.368421 882.903579 323.368421 970.105263h-53.894737c0-74.482526-24.791579-124.065684-51.065263-176.586105C190.517895 737.738105 161.684211 680.043789 161.684211 592.842105c0-90.866526 42.226526-197.685895 93.453473-274.485894a803.759158 803.759158 0 0 1-39.046737-34.115369C177.852632 247.754105 150.231579 221.399579 125.035789 184.616421c-24.441263-35.759158-22.797474-78.686316 4.069053-106.819368 26.300632-27.567158 70.898526-31.043368 106.522947-9.000421 37.941895 23.444211 65.562947 49.798737 103.774316 86.258526 9.970526 9.512421 33.037474 32.309895 56.93979 60.550737h68.634947c-27.621053-37.780211-60.416-72.730947-88.522105-99.543579-28.833684-27.540211-54.730105-52.116211-84.533895-74.024421L326.305684 0.296421c31.232 23.228632 57.802105 48.532211 87.309474 76.719158 53.840842 51.388632 94.450526 100.594526 121.74821 146.83621 82.836211 26.650947 150.042947 116.870737 165.025685 230.750316l1.724631 13.177263-9.404631 9.404632c-3.772632 3.772632-7.706947 7.653053-11.802948 11.587368C837.227789 561.178947 862.315789 663.498105 862.315789 720.896zM309.463579 754.526316c3.934316 8.057263 7.895579 16.087579 11.991579 24.144842C348.887579 832.970105 377.263158 889.128421 377.263158 970.105263h53.894737c0-93.696-34.061474-161.226105-61.520842-215.578947h-60.173474z m597.90821 53.894737c-3.422316 9.404632-7.814737 19.806316-13.770105 31.959579L829.790316 970.105263h60.065684l52.143158-105.957052c10.778947-21.935158 17.515789-40.016842 21.90821-55.727158h-56.535579zM514.694737 390.736842c0-34.223158-13.231158-44.463158-29.642105-44.463158s-29.642105 10.24-29.642106 44.463158c0 34.250105 13.231158 44.463158 29.642106 44.463158s29.642105-10.213053 29.642105-44.463158z" fill="#231F20" ></path></symbol><symbol id="icon-rooster" viewBox="0 0 1024 1024"><path d="M891.688421 506.421895C877.244632 455.033263 862.315789 401.893053 862.315789 323.368421V116.224l-323.368421 195.745684V323.368421c0 78.524632 14.928842 131.664842 29.372632 183.053474 12.611368 44.894316 24.522105 87.282526 24.522105 140.314947 0 101.618526-77.931789 176.693895-168.286316 203.991579l5.416422 11.587368h215.578947c24.333474 0 43.385263-0.242526 58.556631-2.128842C811.52 846.821053 916.210526 764.550737 916.210526 646.736842c0-53.032421-11.910737-95.420632-24.522105-140.314947z" fill="#FF8787" ></path><path d="M673.684211 354.357895c-16.384 0-29.642105-10.213053-29.642106-44.463158 0-34.223158 13.231158-44.463158 29.642106-44.463158s29.642105 10.24 29.642105 44.463158c0 34.250105-13.258105 44.463158-29.642105 44.463158zM540.106105 970.105263l-50.58021-107.789474h156.05221l50.607158 107.789474h59.553684l-51.60421-109.918316C811.52 846.821053 916.210526 764.550737 916.210526 646.736842c0-53.032421-11.910737-95.420632-24.522105-140.314947C877.244632 455.033263 862.315789 401.893053 862.315789 323.368421V107.789474c0-59.445895-48.343579-107.789474-107.789473-107.789474a107.924211 107.924211 0 0 0-107.789474 106.172632 100.890947 100.890947 0 0 0-24.117895-3.314527 88.710737 88.710737 0 0 0-88.602947 88.602948c0 20.668632 5.227789 39.720421 10.671158 53.921684l-99.489684 59.688421 93.749894 14.470737V377.263158c0 14.416842-5.901474 21.692632-33.360842 49.152l-11.129263 11.129263C398.228211 326.521263 324.985263 269.473684 215.740632 269.473684 96.768 269.473684 0 366.241684 0 485.214316V646.736842h53.894737v-161.522526A162.007579 162.007579 0 0 1 215.740632 323.368421c82.081684 0 140.422737 36.244211 240.64 152.252632l-38.615579 38.615579C367.804632 461.285053 323.098947 431.157895 259.584 431.157895A151.983158 151.983158 0 0 0 107.789474 582.952421V754.526316h53.894737v-171.573895A98.007579 98.007579 0 0 1 259.584 485.052632c46.322526 0 79.629474 20.911158 137.027368 86.016l18.970948 21.530947 128.080842-128.080842C572.200421 435.981474 592.842105 415.366737 592.842105 377.263158v-97.926737l23.309474-14.120421-13.662316-23.04c-0.161684-0.242526-14.578526-24.899368-14.578526-50.688 0-19.132632 15.575579-34.708211 34.70821-34.708211 5.093053 0 26.785684 3.179789 39.558737 18.647579l26.327579 46.026106 39.774316-24.090948-20.372211-49.367579C704.754526 140.449684 700.631579 117.517474 700.631579 107.789474c0-29.722947 24.171789-53.894737 53.894737-53.894737s53.894737 24.171789 53.894737 53.894737v215.578947c0 85.935158 16.680421 145.300211 31.366736 197.632C851.887158 564.008421 862.315789 601.141895 862.315789 646.736842c0 95.285895-99.408842 161.684211-188.631578 161.684211h-209.461895l-68.419369-145.704421C375.242105 618.954105 338.108632 592.842105 296.448 592.842105A80.976842 80.976842 0 0 0 215.578947 673.711158V862.315789h53.894737v-188.604631c0-14.874947 12.099368-26.974316 26.974316-26.974316 20.533895 0 38.965895 14.147368 50.553263 38.858105L480.579368 970.105263h59.526737z" fill="#231F20" ></path></symbol><symbol id="icon-snake" viewBox="0 0 1024 1024"><path d="M107.789474 790.474105c0-72.434526 67.880421-91.513263 121.451789-91.513263 74.401684 0 153.815579 34.438737 237.891369 70.925474 50.580211 21.935158 104.609684 45.325474 162.250105 63.083789-52.412632 44.786526-118.784 74.347789-195.152842 83.078737-143.171368 16.357053-326.440421 7.006316-326.440421-125.574737zM377.263158 215.578947c-15.575579 0-30.288842 3.449263-43.654737 9.377685A250.691368 250.691368 0 0 0 323.368421 296.421053c0 115.550316 76.422737 169.391158 137.83579 212.614736 8.138105 5.712842 16.141474 11.371789 23.848421 17.057685V323.368421a107.789474 107.789474 0 0 0-107.789474-107.789474z" fill="#C3D686" ></path><path d="M671.528421 788.857263c44.328421 11.964632 89.626947 19.563789 136.892632 19.56379 89.168842 0 161.684211-60.442947 161.68421-134.736842s-72.515368-134.736842-161.68421-134.736843c-19.078737 0-37.025684 1.509053-54.218106 4.015158-0.754526-101.402947-38.211368-172.355368-79.413894-219.648L673.684211 323.368421a1749.962105 1749.962105 0 0 1-79.036632-1.751579c45.702737 35.866947 108.705684 107.870316 105.984 232.367158 0 0.431158-0.080842 0.808421-0.10779 1.239579-34.923789 10.994526-66.155789 26.731789-95.097263 45.190737a163.085474 163.085474 0 0 0-15.845052-42.388211c-21.557895-39.639579-60.065684-66.775579-97.360842-93.022316C433.098105 423.343158 377.263158 384 377.263158 296.421053c0-130.290526 108.274526-188.631579 215.578947-188.631579 64.134737 0 132.715789 12.045474 214.366316 37.807158C802.330947 180.250947 780.099368 209.381053 700.631579 214.635789V161.684211h-53.894737v53.679157c-63.272421-1.024-104.528842-5.200842-104.986947-5.254736l-5.578106 53.598315C538.408421 263.949474 592.357053 269.473684 673.684211 269.473684c125.170526 0 188.631579-48.128 188.631578-143.063579V106.981053l-18.432-6.144C747.789474 68.823579 668.025263 53.894737 592.842105 53.894737c-158.666105 0-269.473684 99.732211-269.473684 242.526316 0 115.550316 76.422737 169.391158 137.83579 212.614736 33.684211 23.713684 65.509053 46.106947 81.003789 74.698106 9.539368 17.542737 13.285053 33.414737 12.341895 47.750737 21.153684 9.108211 42.118737 17.839158 62.949052 25.977263C671.151158 620.193684 729.977263 592.842105 808.421053 592.842105c59.445895 0 107.789474 36.271158 107.789473 80.842106s-48.343579 80.842105-107.789473 80.842105c-105.472 0-203.237053-42.388211-297.768421-83.429053-94.800842-41.094737-184.346947-79.952842-281.411369-79.952842C122.718316 591.171368 53.894737 644.715789 53.894737 727.578947c0 79.063579 67.098947 136.434526 159.555368 136.434527 142.174316 0 230.426947-66.883368 306.79579-129.886316 31.420632 13.419789 62.787368 26.058105 94.450526 37.133474-47.077053 49.637053-110.969263 82.566737-186.610526 91.270736l5.066105 53.625264c93.453474-7.006316 143.144421 9.350737 195.718737 26.543157 46.457263 15.225263 94.127158 30.854737 169.822316 30.854737 19.994947 0 41.957053-1.077895 66.344421-3.557052l-5.416421-53.625263c-105.283368 10.778947-158.100211-6.548211-213.935158-24.872422-22.150737-7.275789-44.624842-14.632421-70.305684-20.345263a334.848 334.848 0 0 0 96.14821-82.297263z m-458.078316 21.261474C162.573474 810.118737 107.789474 784.276211 107.789474 727.578947c0-60.847158 62.733474-82.539789 121.451789-82.539789 77.850947 0 154.731789 30.288842 235.250526 64.943158-66.263579 52.924632-139.722105 100.136421-251.041684 100.136421z" fill="#231F20" ></path></symbol><symbol id="icon-tiger" viewBox="0 0 1024 1024"><path d="M431.157895 162.250105V134.736842c0-41.552842-39.289263-80.842105-80.842106-80.842105-28.833684 0-57.128421 4.661895-58.314105 4.850526L269.473684 62.490947v83.887158C144.788211 223.824842 89.222737 346.839579 66.991158 431.157895h266.051368c240.747789 0 415.851789 107.789474 415.85179 269.473684-14.848-25.114947-43.924211-53.894737-88.68379-53.894737-67.988211 0-121.263158 71.033263-121.263158 161.684211 0 66.802526 30.477474 119.888842 60.712421 156.16 12.638316 15.171368 36.055579 37.726316 59.014737 58.88 5.066105 0.107789 9.781895 0.538947 15.009685 0.538947 219.297684 0 350.315789-191.811368 350.315789-377.263158C1024 327.545263 679.855158 172.813474 431.157895 162.250105z" fill="#F7C768" ></path><path d="M673.684211 1024c-114.768842 0-188.820211-33.333895-254.167579-62.787368-53.625263-24.144842-99.974737-45.002105-161.28-45.002106-40.448 0-83.590737 23.255579-103.639579 45.16379l-39.747369-36.432842C142.497684 894.787368 199.168 862.315789 258.236632 862.315789c68.392421 0 119.861895 21.288421 172.921263 45.056V673.684211c0-35.166316-17.542737-64.107789-30.639158-80.815158-15.198316 9.835789-32.067368 18.890105-50.741895 26.947368l-21.342316-49.475368C469.800421 509.413053 485.052632 377.317053 485.052632 323.368421V221.642105A597.827368 597.827368 0 0 0 404.210526 215.578947h-26.947368V134.736842c0-12.099368-14.848-26.947368-26.947369-26.947368-9.377684 0-18.836211 0.592842-26.947368 1.347368V269.473684h-53.894737V211.671579c-136.030316 102.912-158.450526 266.886737-161.306947 295.882105 9.135158 9.108211 38.992842 25.061053 71.976421 38.669474l38.103579-59.365053 12.449684-1.589894C321.212632 473.653895 377.263158 392.192 377.263158 323.368421h53.894737c0 88.333474-68.796632 192.242526-180.870737 213.342316l-48.397474 75.398737-20.291368-7.437474C53.894737 557.756632 53.894737 523.317895 53.894737 512c0-50.041263 37.025684-254.733474 215.578947-365.621895V62.490947l22.528-3.745684C293.187368 58.556632 321.482105 53.894737 350.315789 53.894737c41.552842 0 80.842105 39.289263 80.842106 80.842105v27.513263c248.697263 10.563368 592.842105 165.295158 592.842105 484.486737 0 185.451789-131.018105 377.263158-350.315789 377.263158z m-13.473685-323.368421c-36.513684 0-67.368421 49.367579-67.368421 107.789474 0 85.746526 68.096 145.084632 89.465263 161.549473 91.540211-2.533053 164.378947-45.487158 213.827369-107.654737H700.631579v-53.894736h230.238316c8.919579-17.273263 16.357053-35.354947 22.285473-53.894737h-239.885473l-6.467369-17.650527C706.290526 735.582316 692.439579 700.631579 660.210526 700.631579zM485.052632 931.112421c33.926737 14.066526 70.521263 26.597053 114.607157 33.468632C569.424842 928.309895 538.947368 875.223579 538.947368 808.421053c0-90.650947 53.274947-161.684211 121.263158-161.684211 44.759579 0 73.835789 28.779789 88.68379 53.894737h217.007158c2.775579-17.866105 4.203789-35.920842 4.203789-53.894737 0-38.938947-5.658947-74.752-15.925895-107.627789l-126.706526 126.679579-38.103579-38.103579L932.001684 485.052632a367.939368 367.939368 0 0 0-57.775158-81.596632l-154.543158 154.543158-38.103579-38.103579 153.573053-153.573053a537.869474 537.869474 0 0 0-82.593684-56.751158l-140.665263 140.638316-38.103579-38.103579 128.134737-128.134737A794.731789 794.731789 0 0 0 538.947368 231.046737V323.368421c0 50.149053-11.102316 156.698947-95.932631 236.328421 18.378105 23.417263 42.037895 63.407158 42.037895 113.987369v257.42821zM215.578947 431.157895v-53.894737c39.774316 0 53.894737-29.022316 53.894737-53.894737h53.894737c0 53.571368-37.025684 107.789474-107.789474 107.789474z" fill="#231F20" ></path></symbol><symbol id="icon-boar" viewBox="0 0 1024 1024"><path d="M732.079158 377.263158c-107.789474 0-186.421895 31.393684-281.869474 126.841263L180.331789 773.982316C257.724632 807.909053 348.725895 808.421053 485.052632 808.421053h96.013473c55.834947-34.411789 133.551158-53.894737 227.354948-53.894737h121.344L970.105263 680.555789V572.631579c0-94.315789-130.236632-195.368421-238.026105-195.368421z" fill="#FFBDD8" ></path><path d="M808.421053 700.631579v53.894737c-196.446316 0-323.368421 84.641684-323.368421 215.578947h-53.894737c0-163.705263 148.075789-269.473684 377.263158-269.473684z m-323.368421 107.789474v-53.894737c-158.342737 0-245.598316 0-319.649685-49.367579L158.612211 700.631579H80.842105c-21.692632 0-26.624-14.821053-26.947368-26.947368v-82.620632c84.156632-11.183158 161.684211-74.913684 161.68421-186.853053V215.578947H161.684211v161.684211H134.736842c-66.964211 0-134.736842 37.025684-134.736842 107.789474h53.894737c0-42.630737 52.870737-53.894737 80.842105-53.894737h24.629895C147.132632 504.912842 85.153684 538.947368 26.947368 538.947368H0v134.736843c0 32.498526 21.530947 80.842105 80.842105 80.842105h61.682527c32.687158 20.506947 67.125895 33.145263 105.957052 41.013895A232.879158 232.879158 0 0 0 215.578947 916.210526h53.894737c0-41.930105 14.012632-80.303158 39.424-112.505263C358.885053 808.151579 415.959579 808.421053 485.052632 808.421053z m-72.946527-342.420211L323.368421 554.738526V431.157895h-53.894737v253.682526l180.736-180.736-38.103579-38.103579zM323.368421 161.684211h-53.894737v190.032842a769.536 769.536 0 0 1 53.894737-49.098106V161.684211z m323.368421-53.894737c-72.623158 0-146.809263 23.336421-215.578947 58.637473V107.789474h-53.894737v154.138947C458.832842 205.392842 555.331368 161.684211 646.736842 161.684211c148.587789 0 269.473684 120.885895 269.473684 269.473684v235.654737L809.579789 862.315789h61.359158L970.105263 680.555789V431.157895c0-178.310737-145.057684-323.368421-323.368421-323.368421z" fill="#231F20" ></path></symbol><symbol id="icon-rat" viewBox="0 0 1024 1024"><path d="M727.659789 431.157895c-132.581053 0-220.348632 47.454316-285.803789 154.354526-19.779368 32.309895-15.845053 76.503579-9.404632 96.579368 3.260632 10.159158 7.760842 18.647579 12.422737 25.546106C464.761263 737.010526 499.927579 754.526316 538.947368 754.526316h66.829474c1.158737 17.893053-1.967158 34.762105-15.144421 53.975579-12.692211 18.539789-37.807158 40.151579-56.32 54.810947 25.249684-0.673684 52.709053-0.997053 83.240421-0.997053C877.487158 862.315789 970.105263 711.922526 970.105263 571.176421 936.421053 512 882.364632 431.157895 727.659789 431.157895z" fill="#85C3DE" ></path><path d="M210.432 1012.897684l-43.573895-31.690105c106.954105-147.051789 185.317053-171.196632 423.828211-172.705684 21.396211-31.258947 16.249263-56.266105 9.377684-89.70779-3.557053-17.138526-7.221895-34.842947-7.221895-54.433684 0-68.958316 25.330526-104.636632 63.407158-136.973474l34.896842 41.040842c-29.453474 25.061053-44.409263 46.780632-44.409263 95.932632 0 14.093474 2.937263 28.402526 6.063158 43.546947 5.901474 28.510316 12.8 62.032842-1.131789 99.462737 166.373053-10.24 264.542316-96.902737 264.542315-236.193684C916.210526 418.330947 827.580632 323.368421 684.921263 323.368421c-83.644632 0-153.303579 29.696-174.187789 39.612632a224.875789 224.875789 0 0 1-20.533895 31.339789l-41.741474-34.115368 20.884211 17.057684-20.911158-16.976842C448.781474 359.828211 485.052632 314.287158 485.052632 262.736842c0-34.816-8.946526-60.766316-26.570106-77.069474-17.515789-16.249263-44.786526-24.602947-81.219368-24.953263V323.368421h-53.894737V109.783579l24.872421-1.913263c64.700632-4.931368 114.095158 7.895579 146.863158 38.238316C524.207158 173.056 538.947368 212.291368 538.947368 262.736842c0 11.102316-1.131789 21.908211-3.072 32.202105 37.268211-12.584421 89.842526-25.465263 149.045895-25.465263C858.165895 269.473684 970.105263 387.907368 970.105263 571.176421 970.105263 711.922526 877.487158 862.315789 617.552842 862.315789c-258.667789 0-311.942737 19.698526-407.120842 150.581895z m19.105684-256.835368c-12.045474 0-24.387368-0.565895-37.025684-1.64379l-22.096842-1.859368-2.425263-22.016C167.747368 728.144842 161.684211 672.444632 161.684211 631.026526c0-103.585684 21.450105-178.903579 53.894736-259.045052V107.789474h53.894737v274.782315l-2.021052 4.904422C235.439158 465.758316 215.578947 533.800421 215.578947 631.026526c0 22.878316 2.101895 51.442526 3.826527 70.979369 99.678316 2.802526 172.813474-35.408842 222.450526-116.493474l48.020211 24.090947c-11.237053 28.133053-11.371789 51.577263-0.377264 67.853474 9.701053 14.282105 28.645053 23.174737 49.448421 23.174737v53.894737c-39.019789 0-74.186105-17.515789-94.073263-46.888421a100.244211 100.244211 0 0 1-12.422737-25.546106c-53.221053 49.178947-121.128421 73.943579-202.913684 73.970527zM379.957895 525.473684c0-34.223158-13.231158-44.463158-29.642106-44.463158s-29.642105 10.24-29.642105 44.463158c0 34.250105 13.231158 44.463158 29.642105 44.463158s29.642105-10.213053 29.642106-44.463158z" fill="#231F20" ></path></symbol><symbol id="icon-customerservice-fill1" viewBox="0 0 1024 1024"><path d="M512 128c-212.1 0-384 171.9-384 384v360c0 13.3 10.7 24 24 24h184c35.3 0 64-28.7 64-64V624c0-35.3-28.7-64-64-64H200v-48c0-172.3 139.7-312 312-312s312 139.7 312 312v48H688c-35.3 0-64 28.7-64 64v208c0 35.3 28.7 64 64 64h184c13.3 0 24-10.7 24-24V512c0-212.1-171.9-384-384-384z" fill="#1296DB" ></path></symbol><symbol id="icon-home1" viewBox="0 0 1024 1024"><path d="M947 484.1L530.7 75.9c-12.6-12.4-32.8-12.3-45.3 0.2L73.5 488c-13.4 13.4-13.2 35.1 0.3 48.3l23.9 23.3c13.3 13 34.5 12.9 47.7-0.2l343-341.4c10.8-10.7 28.2-10.7 39 0l343.2 341.6c13.1 13 34.1 13.2 47.4 0.5l28.6-27.3c14-13.1 14.1-35.2 0.4-48.7zM814.3 101.6c0-13.5-10.9-24.4-24.4-24.4H701c-13.5 0-24.4 10.9-24.4 24.4v49.9l137.8 137.8V101.6z" fill="#00AEEF" ></path><path d="M492.4 280.4l-343.5 339v305.1c0 19.7 16 35.7 35.7 35.7h167.9c19.7 0 35.7-16 35.7-35.7V678.1c0-10.4 8.5-18.9 18.9-18.9h203.3c10.4 0 18.9 8.5 18.9 18.9v246.3c0 19.7 16 35.7 35.7 35.7h166c19.7 0 35.7-16 35.7-35.7V619.3l-338.1-339c-9.8-10-26.1-10-36.2 0.1z" fill="#00AEEF" ></path></symbol><symbol id="icon-QQ" viewBox="0 0 1024 1024"><path d="M512 0C229.003636 0 0 229.003636 0 512s229.003636 512 512 512 512-229.003636 512-512S794.996364 0 512 0z m210.385455 641.396364c-7.447273 9.309091-26.996364-1.861818-41.89091-32.581819-3.723636 13.963636-13.032727 36.305455-34.443636 64.232728 35.374545 8.378182 44.683636 42.821818 33.512727 61.44-8.378182 13.032727-26.996364 24.203636-59.578181 24.203636-58.647273 0-83.781818-15.825455-95.883637-26.996364-1.861818-2.792727-5.585455-3.723636-10.24-3.723636-4.654545 0-7.447273 0.930909-10.24 3.723636-11.170909 11.170909-37.236364 26.996364-95.883636 26.996364-32.581818 0-52.130909-11.170909-59.578182-24.203636-12.101818-18.618182-1.861818-53.061818 33.512727-61.44-20.48-27.927273-29.789091-50.269091-34.443636-64.232728-13.963636 30.72-34.443636 42.821818-41.890909 32.581819-5.585455-8.378182-8.378182-26.065455-7.447273-38.167273 3.723636-46.545455 34.443636-85.643636 53.061818-106.123636-2.792727-5.585455-8.378182-40.029091 14.894546-63.301819v-1.861818c0-92.16 65.163636-158.254545 148.014545-158.254545 81.92 0 148.014545 66.094545 148.014546 158.254545v1.861818c23.272727 23.272727 17.687273 57.716364 14.894545 63.301819 17.687273 20.48 49.338182 59.578182 53.061818 106.123636 0.930909 12.101818-0.930909 29.789091-7.447272 38.167273z" fill="#30A5DD" ></path></symbol><symbol id="icon-icon--" viewBox="0 0 1024 1024"><path d="M832 194.56h-614.4c-56.32 0-102.4 46.08-102.4 102.4v409.6c0 56.32 46.08 102.4 102.4 102.4h614.4c56.32 0 102.4-46.08 102.4-102.4v-409.6c0-56.32-46.08-102.4-102.4-102.4z m25.6 51.2l-332.8 256-332.8-256h665.6z m-691.2 460.8v-409.6l230.4 179.2-227.84 245.76c-2.56-5.12-2.56-10.24-2.56-15.36z m40.96 48.64l230.4-245.76 87.04 66.56 84.48-66.56 235.52 245.76H207.36z m675.84-48.64c0 5.12 0 10.24-2.56 15.36l-227.84-245.76 230.4-179.2v409.6z" fill="#00AAC1" ></path></symbol><symbol id="icon-shijianzhoujiedian" viewBox="0 0 1024 1024"><path d="M512 51.2c256 0 460.8 204.8 460.8 460.8s-204.8 460.8-460.8 460.8-460.8-204.8-460.8-460.8 204.8-460.8 460.8-460.8z" fill="#FFFFFF" ></path><path d="M512 153.6c199.68 0 358.4 158.72 358.4 358.4s-158.72 358.4-358.4 358.4-358.4-158.72-358.4-358.4 158.72-358.4 358.4-358.4z" fill="#10C2F8" ></path><path d="M716.8 563.2h-204.8c-30.72 0-51.2-20.48-51.2-51.2V358.4c0-30.72 20.48-51.2 51.2-51.2s51.2 20.48 51.2 51.2v102.4h153.6c30.72 0 51.2 20.48 51.2 51.2s-20.48 51.2-51.2 51.2z" fill="#FFFFFF" ></path></symbol><symbol id="icon-liaotian" viewBox="0 0 1024 1024"><path d="M291.55 206h441.552c58.286 0 105.549 53.196 105.549 118.797v323.639c0 65.6-47.263 118.796-105.549 118.796H512.325l-172.01 107.352c-5.623 3.51-13.025 1.796-16.534-3.826a12 12 0 0 1-0.697-11.422L366 767.232h-74.45c-58.287 0-105.55-53.196-105.55-118.796v-323.64C186 259.145 233.263 206 291.55 206zM321 536c24.853 0 45-20.147 45-45s-20.147-45-45-45-45 20.147-45 45 20.147 45 45 45z m180 0c24.853 0 45-20.147 45-45s-20.147-45-45-45-45 20.147-45 45 20.147 45 45 45z m180 0c24.853 0 45-20.147 45-45s-20.147-45-45-45-45 20.147-45 45 20.147 45 45 45z" fill="#1AA5FF" ></path></symbol><symbol id="icon-icon-lianjie" viewBox="0 0 1024 1024"><path d="M447.8976 787.6608l-73.728 73.728a145.408 145.408 0 0 1-105.7792 44.8512 150.8352 150.8352 0 0 1-105.7792-256.4096L338.944 473.4976a145.408 145.408 0 0 1 105.7792-44.8512c38.4 0 76.8 16.0768 105.7792 44.8512 22.4256 22.528 60.8256 22.528 86.528 0 22.4256-22.4256 22.4256-60.8256 0-86.528a268.9024 268.9024 0 0 0-381.44 0L79.36 563.3024a268.9024 268.9024 0 0 0 0 381.3376 268.9024 268.9024 0 0 0 381.3376 0l73.728-73.728c22.528-22.4256 22.528-60.8256 0-86.528-25.6-19.1488-64.1024-19.1488-86.528 3.2768zM944.64 79.36a268.9024 268.9024 0 0 0-381.3376 0l-73.728 73.728c-22.528 22.4256-22.528 60.8256 0 86.528 22.4256 22.4256 60.928 22.4256 86.528 0l73.728-73.728a145.408 145.408 0 0 1 105.7792-44.9536 150.8352 150.8352 0 0 1 105.7792 256.4096L685.056 553.6768a145.408 145.408 0 0 1-105.7792 44.8512c-38.4 0-76.8-15.9744-105.7792-44.8512-22.4256-22.528-60.8256-22.528-86.528 0a59.2896 59.2896 0 0 0-3.1744 80.0768l3.1744 3.2768a268.9024 268.9024 0 0 0 381.44 0l176.2304-176.3328c105.7792-105.7792 105.7792-278.8352 0-381.3376z" fill="#0052CC" ></path></symbol><symbol id="icon-RSS" viewBox="0 0 1024 1024"><path d="M245.323116 913.111046a110.883142 110.883142 0 1 1-110.883141-110.883142A110.883142 110.883142 0 0 1 245.323116 913.111046zM155.901228 1.007785A118.484002 118.484002 0 0 0 61.114026 30.517008 115.801345 115.801345 0 0 0 21.768395 117.25624a117.589783 117.589783 0 0 0 104.1765 114.907126c327.731221 41.581178 603.597746 337.567629 641.15494 688.548541a114.460017 114.460017 0 0 0 114.907126 102.835171 118.036893 118.036893 0 0 0 89.421889-38.898521 113.118689 113.118689 0 0 0 28.615004-89.421889C949.520487 440.963475 586.46762 56.449355 155.901228 1.007785z m7.60086 381.831463A110.883142 110.883142 0 0 0 66.479339 403.406282a117.142674 117.142674 0 0 0-44.710944 92.551655 114.460017 114.460017 0 0 0 89.421889 112.22447c134.132833 32.19188 250.381287 163.642056 279.89051 318.789032a116.248455 116.248455 0 0 0 112.22447 93.445873 116.695564 116.695564 0 0 0 89.421888-42.028287 112.671579 112.671579 0 0 0 24.59102-93.445874C571.713009 643.056943 383.927043 436.492381 161.266541 383.733467z" fill="#FFAD08" ></path><path d="M62.008245 997.614731l155.146976-155.146977A109.541813 109.541813 0 0 1 245.323116 913.111046a110.883142 110.883142 0 0 1-110.883141 110.883142 109.541813 109.541813 0 0 1-72.43173-26.379457z m513.728749-513.28164a804.796995 804.796995 0 0 1 191.362841 436.378816 114.460017 114.460017 0 0 0 114.907126 102.835171 118.036893 118.036893 0 0 0 89.421889-38.898521 113.118689 113.118689 0 0 0 28.615004-89.421889A1035.058358 1035.058358 0 0 0 737.143502 320.691036z m-185.997528 444.426785a116.248455 116.248455 0 0 0 112.22447 93.445874 116.695564 116.695564 0 0 0 89.421888-42.028288 112.671579 112.671579 0 0 0 24.591019-93.445873 670.664163 670.664163 0 0 0-143.52213-301.351764l-162.747837 164.983384a439.061472 439.061472 0 0 1 80.03259 178.396667z" fill="#D68650" ></path></symbol><symbol id="icon-github" viewBox="0 0 1024 1024"><path d="M512 0C229.283787 0 0.142041 234.942803 0.142041 524.867683c0 231.829001 146.647305 428.553077 350.068189 497.952484 25.592898 4.819996 34.976961-11.38884 34.976961-25.294314 0-12.45521-0.469203-45.470049-0.725133-89.276559-142.381822 31.735193-172.453477-70.380469-172.453477-70.380469-23.246882-60.569859-56.816233-76.693384-56.816234-76.693385-46.493765-32.58829 3.540351-31.948468 3.540351-31.948467 51.356415 3.71097 78.356923 54.086324 78.356923 54.086324 45.683323 80.19108 119.817417 57.072162 148.993321 43.593236 4.649376-33.91059 17.915029-57.029508 32.50298-70.167195-113.675122-13.222997-233.151301-58.223843-233.1513-259.341366 0-57.285437 19.919806-104.163095 52.678715-140.846248-5.246544-13.265652-22.820334-66.626844 4.990615-138.884127 0 0 42.996069-14.076094 140.760939 53.787741 40.863327-11.644769 84.627183-17.445825 128.177764-17.6591 43.465272 0.213274 87.271782 6.014331 128.135109 17.6591 97.679561-67.906489 140.59032-53.787741 140.59032-53.787741 27.938914 72.257282 10.407779 125.618474 5.118579 138.884127 32.844219 36.683154 52.593405 83.560812 52.593405 140.846248 0 201.586726-119.646798 245.990404-233.663158 258.957473 18.341577 16.208835 34.721032 48.199958 34.721032 97.210357 0 70.167195-0.639822 126.7275-0.639823 143.960051 0 14.033439 9.213443 30.370239 35.190235 25.209005 203.250265-69.527373 349.769606-266.123484 349.769605-497.867175C1023.857959 234.942803 794.673558 0 512 0" fill="#3E75C3" ></path></symbol><symbol id="icon-youxiang" viewBox="0 0 1024 1024"><path d="M586.72 992h-71.04c-8.8 0-16-7.2-16-16V613.76c0-8.8 7.2-16 16-16h71.04c8.8 0 16 7.2 16 16V976c0 8.8-7.2 16-16 16z" fill="#629FF9" ></path><path d="M284.96 152c-118.56 0-214.72 96-214.72 214.24v351.36h429.28V366.24c0.16-118.24-96-214.24-214.56-214.24z" fill="#2166CC" ></path><path d="M520.32 632H204.16c-26.56 0-48-21.44-48-48V388.64c0-26.56 21.44-48 48-48h316.16c26.56 0 48 21.44 48 48V584c0 26.56-21.44 48-48 48z" fill="#D2E4FF" ></path><path d="M568.32 392a51.36 51.36 0 0 0-51.52-51.36H207.68c-28.48 0-51.52 23.04-51.52 51.36v10.72l187.2 98.72c11.84 6.24 25.92 6.24 37.76 0l187.2-98.72v-10.72z" fill="#FFFFFF" ></path><path d="M740 152h-446.4v0.48c114.56 4.48 206.08 98.4 206.08 213.92v351.36h429.28c28.48 0 51.52-23.04 51.52-51.36V392c0-132.48-107.68-240-240.48-240z" fill="#4E8DF6" ></path><path d="M860.32 32H688.48c-9.44 0-17.12 7.68-17.12 17.12v351.36a25.744 25.744 0 1 0 51.52 0V117.76h137.44c9.44 0 17.12-7.68 17.12-17.12V49.12c0-9.44-7.68-17.12-17.12-17.12z" fill="#2166CC" ></path><path d="M912.96 666.24h-36.64c-8.8 0-16-7.2-16-16v-36.64c0-8.8 7.2-16 16-16h36.64c8.8 0 16 7.2 16 16v36.64c0 8.96-7.2 16-16 16z" fill="#FFFFFF" ></path><path d="M70.4 717.76l-25.28 137.12c-10.08 56.8 28 102.88 84.8 102.88h223.2c56.96 0 111.2-46.08 121.28-102.88l24.16-137.12H70.4z" fill="#2974CE" ></path></symbol><symbol id="icon-icon_bilibili-circle" viewBox="0 0 1024 1024"><path d="M767.92894674 350.21337767H263.30043777c-15.32600262 0-28.23249502 11.68799034-28.23249501 27.38858015v334.55432976c0 15.69913199 12.90503329 27.22387831 28.23249501 27.2238796h504.62850897c15.32746044 0 26.83325893-11.5232885 26.83325893-27.2238796V377.60195782c0-15.70204764-11.50871284-27.38858016-26.83325893-27.38858015z m-470.27144319 123.61226676l142.21481359-27.2297083 10.74642064 53.37500984-140.78496964 27.22679394-12.17626459-53.37209548z m219.23399082 162.63490936c-43.70425162 47.64397409-89.55399678-15.0446981-89.5539968-15.04469808l23.28415586-15.04469809s31.1650586 56.24052773 65.91420158-18.27022879c33.31492688 72.36088953 70.21247906 18.98733621 70.21248035 19.34297556l21.13720319 13.61631196c-0.00291565-0.00437217-39.40743199 63.0428537-90.99404418 15.40033744z m210.99599215-109.26135605l-141.14060899-27.22387959 11.10643217-53.37646768 141.85625987 27.2297096-11.82208305 53.37063767z" fill="#1296db" ></path><path d="M512 4.01186763c-280.55403732 0-507.98813237 227.43555287-507.98813237 507.98667455 0 280.55403732 227.43555287 507.98959019 507.98813237 507.98959019S1019.98813237 792.55257951 1019.98813237 512c0-280.55403732-227.43409505-507.98813237-507.98813237-507.98813237z m267.51782442 803.08839008c-35.50997738-1.12376157-47.47344226 0-47.47344225 0s-2.61627903 40.74545108-37.37708205 41.49170983c-35.13684802 0.37312935-40.37086389-28.41031341-41.49462545-39.24856017-21.30482069 0-277.3605723 1.11938809-277.3605723 1.11938812s-4.4848415 37.75312705-39.24856017 37.75312703c-35.13684802 0-37.00832614-31.39972307-39.24856015-37.75312703-22.80462597 0-53.45663249-0.74917438-53.45663252-0.74917439s-77.00314503-16.06643135-87.09513175-116.24733172c1.12084592-100.17944255 0-298.29955145 0-298.29955146s-7.10257834-92.32623328 84.85489775-118.86798421c28.40448341-1.11938809 89.71286861-1.49543311 160.73427994-1.49543311l-65.41718173-63.54716142s-10.09198674-12.70972358 7.10257836-26.91342375c17.57206793-14.20224234 18.31395447-8.41436177 24.29714472-4.30264964 5.98173243 4.11025431 97.56462134 94.37698762 97.56462135 94.37698762h-12.3351377c35.13539021 0 71.39599978 0.56989689 106.15826063 0.56989688 13.45452579-13.45744015 90.08599799-88.49728221 95.31855605-92.23149281 5.9802746-3.73858277 7.09966398-10.04534541 24.29860253 4.15689565 17.1945651 14.20369888 7.10112053 26.93820159 7.10112053 26.9382016l-63.92174862 61.68880241c87.84430615 0.74917438 155.50172317 1.1252181 155.5017219 1.12521811s86.71908676 19.06895886 88.96369551 118.49631268c-1.12084592 99.43318382 0.37312935 299.42039738 0.37312939 299.42039735s-4.8535987 97.18857634-87.83993397 112.51895243z" fill="#1296db" ></path></symbol><symbol id="icon-zhifeiji1" viewBox="0 0 1167 1024"><path d="M98.21248349 469.394958L1038.17046641 88.47058818c9.07562988-3.6554625 19.28571416 0.75630234 22.94117666 9.70588213 1.2605045 3.27731133 1.63865566 6.80672286 0.88235243 10.21008428L896.11164248 922.29411729c-1.89075674 9.57983203-11.21848769 15.75630263-20.79831885 13.73949579-2.39495801-0.50420127-4.66386592-1.51260469-6.68067275-2.89915927L619.93517187 756.15966406l-143.31932753 117.73109268c-14.49579815 11.97479004-35.92437011 9.8319331-47.89915928-4.66386592-2.64705908-3.27731133-4.66386592-6.93277295-6.05042051-10.96638662l-90.50420127-275.16806719-233.06722734-80.67226904c-9.20168086-3.15126035-14.11764697-13.23529453-10.84033565-22.43697451 1.63865566-4.78991602 5.29411729-8.69747871 9.9579832-10.58823546z" fill="#FCFDFC" ></path><path d="M878.84273516 961.62184883c-2.77310918 0-5.67226934-0.25210107-8.57142862-0.88235333-5.92436953-1.2605045-11.34453779-3.52941152-16.26050391-7.05882303L620.94357529 787.92436953l-128.44537822 105.50420156c-12.22689112 10.0840333-27.6050417 14.74789922-43.36134434 13.23529453-15.75630263-1.51260469-29.99999971-9.07562988-39.95798291-21.30252099-4.66386592-5.67226934-8.19327744-12.10084013-10.46218534-19.15966406l-86.59663859-263.31932725-221.2184874-76.63865625c-10.84033653-3.7815126-19.53781523-11.47058789-24.57983144-21.80672227s-5.67226934-21.93277325-1.89075674-32.77310888c4.03361367-11.72268896 12.98319346-21.05041992 24.45378222-25.71428584L1028.71668447 65.15126036c21.93277325-8.82352969 46.89075674 1.76470576 55.84033652 23.5714289 3.15126035 7.81512627 3.9075627 16.38655489 2.26890792 24.70588242L920.8175249 927.33613438c-4.15966377 20.29411758-22.05882334 34.28571445-41.97478974 34.28571445z m-258.90756329-205.46218477l248.69747901 176.97478975c2.01680684 1.38655459 4.28571387 2.39495801 6.68067276 2.89915928 9.57983203 1.89075674 18.90756299-4.28571387 20.79831884-13.7394958L1062.12004648 108.38655459c0.75630234-3.40336143 0.37815117-6.93277295-0.88235332-10.21008428-3.6554625-9.07562988-13.99159687-13.36134463-22.94117665-9.70588213L98.21248349 469.394958c-4.66386592 1.89075674-8.31932754 5.79831943-10.08403417 10.58823546-1.51260469 4.41176484-1.2605045 9.20168086 0.75630322 13.48739472 2.01680684 4.28571387 5.67226934 7.4369751 10.0840333 8.94957979l233.06722647 80.67226904L422.54021445 858.2605042c1.2605045 4.03361367 3.40336143 7.68907529 6.05041963 10.96638662 5.79831943 7.05882393 13.99159687 11.34453779 22.94117667 12.22689111 9.07562988 0.88235332 17.89915957-1.76470576 24.95798349-7.56302519l143.44537763-117.73109268z" fill="#0077ff" ></path><path d="M331.90996221 582.96638692l92.89915927 277.81512538c5.54621836 16.51260498 23.31932783 25.46218477 39.83193282 19.91596642 3.6554625-1.2605045 6.93277295-3.02521026 9.8319331-5.42016739l144.8319331-117.73109268-145.33613437-104.49579814c261.05042021-253.10924385 393.27731104-381.42857109 396.55462148-384.8319334 0.50420127-0.50420127 2.26890791-3.02521026 0.37815118-6.1764706-1.13445352-1.38655459-2.89915927-2.89915927-6.17647061-1.89075586-177.73109209 105.75630263-355.33613408 213.40336113-532.81512597 322.81512626z" fill="#0077ff" ></path><path d="M454.68307109 883.59663887c-5.04201709 0-9.9579832-1.13445352-14.62184823-3.40336143-7.81512627-3.9075627-13.7394958-10.58823545-16.51260499-18.90756299L330.39735752 582.58823487l0.88235244-0.50420128C507.87634854 473.0504205 687.24609628 364.39495771 864.09483594 259.01680713l0.25210107-0.12605098c3.15126035-1.00840342 5.54621836-0.25210107 7.5630252 2.26890791l0.12605009 0.1260501c2.14285693 3.52941152 0.50420127 6.55462177-0.50420126 7.68907617-3.40336143 3.52941152-136.38655459 132.60504199-395.54621895 383.8235291l145.46218535 104.62184825-146.09243671 118.73949609c-3.02521026 2.5210081-6.55462177 4.41176484-10.33613526 5.67226933-3.27731133 1.13445352-6.80672286 1.76470576-10.33613438 1.76470576z m-121.26050419-300.00000059l92.52100898 276.80672286c2.5210081 7.68907529 7.94117637 13.86554589 15.12605039 17.52100839 7.18487402 3.6554625 15.37815146 4.15966377 23.06722676 1.63865567 3.40336143-1.13445352 6.68067187-2.89915927 9.45378105-5.16806719l143.57142861-116.72268926L471.9519793 653.1764706l1.13445351-1.00840341C732.87634854 400.31932783 866.23769287 270.86554619 869.5150042 267.33613467c0 0 1.76470576-2.01680684 0.25210107-4.66386592-0.88235332-1.13445352-2.14285693-2.14285693-4.66386592-1.38655459-176.47058847 105.12605039-355.33613408 213.52941211-531.68067245 322.31092412z" fill="#CAE0EE" ></path><path d="M467.03601231 874.89915927l6.55462177-222.85714218 145.84033652 105.37815059-148.23529453 119.49579844c-1.13445352 0.88235332-2.64705908 0.75630234-3.52941152-0.37815118-0.37815117-0.37815117-0.63025224-1.00840342-0.63025224-1.63865566z" fill="#94C3E2" ></path><path d="M469.55702128 878.80672285c-1.13445352 0-2.14285693-0.50420127-2.89916015-1.38655459-0.50420127-0.75630234-0.88235332-1.63865566-0.88235244-2.52100899l6.68067188-225.25210019 148.99159687 107.7731086-1.26050449 1.00840341-148.23529365 119.49579844c-0.75630234 0.63025224-1.51260469 0.88235332-2.39495802 0.88235333z m5.29411729-224.36974775l-6.55462177 220.46218417c0 0.25210107 0.1260501 0.63025224 0.25210107 0.88235333 0.37815117 0.50420127 1.2605045 0.63025224 1.76470576 0.25210107l146.97479004-118.48739502-142.4369751-103.10924355z" fill="#94C3E2" ></path></symbol><symbol id="icon-cloud" viewBox="0 0 1024 1024"><path d="M811.4 418.7C765.6 297.9 648.9 212 512.2 212S258.8 297.8 213 418.6C127.3 441.1 64 519.1 64 612c0 110.5 89.5 200 199.9 200h496.2C870.5 812 960 722.5 960 612c0-92.7-63.1-170.7-148.6-193.3z m36.3 281c-23.4 23.4-54.5 36.3-87.6 36.3H263.9c-33.1 0-64.2-12.9-87.6-36.3-23.4-23.4-36.3-54.6-36.3-87.7 0-28 9.1-54.3 26.2-76.3 16.7-21.3 40.2-36.8 66.1-43.7l37.9-9.9 13.9-36.6c8.6-22.8 20.6-44.1 35.7-63.4 14.9-19.2 32.6-35.9 52.4-49.9 41.1-28.9 89.5-44.2 140-44.2s98.9 15.3 140 44.2c19.9 14 37.5 30.8 52.4 49.9 15.1 19.3 27.1 40.7 35.7 63.4l13.8 36.5 37.8 10c54.3 14.5 92.1 63.8 92.1 120 0 33.1-12.9 64.3-36.3 87.7z"  ></path></symbol><symbol id="icon-edit" viewBox="0 0 1024 1024"><path d="M257.7 752c2 0 4-0.2 6-0.5L431.9 722c2-0.4 3.9-1.3 5.3-2.8l423.9-423.9c3.9-3.9 3.9-10.2 0-14.1L694.9 114.9c-1.9-1.9-4.4-2.9-7.1-2.9s-5.2 1-7.1 2.9L256.8 538.8c-1.5 1.5-2.4 3.3-2.8 5.3l-29.5 168.2c-1.9 11.1 1.5 21.9 9.4 29.8 6.6 6.4 14.9 9.9 23.8 9.9z m67.4-174.4L687.8 215l73.3 73.3-362.7 362.6-88.9 15.7 15.6-89zM880 836H144c-17.7 0-32 14.3-32 32v36c0 4.4 3.6 8 8 8h784c4.4 0 8-3.6 8-8v-36c0-17.7-14.3-32-32-32z"  ></path></symbol><symbol id="icon-link" viewBox="0 0 1024 1024"><path d="M574 665.4c-3.1-3.1-8.2-3.1-11.3 0L446.5 781.6c-53.8 53.8-144.6 59.5-204 0-59.5-59.5-53.8-150.2 0-204l116.2-116.2c3.1-3.1 3.1-8.2 0-11.3l-39.8-39.8c-3.1-3.1-8.2-3.1-11.3 0L191.4 526.5c-84.6 84.6-84.6 221.5 0 306s221.5 84.6 306 0l116.2-116.2c3.1-3.1 3.1-8.2 0-11.3L574 665.4zM832.6 191.4c-84.6-84.6-221.5-84.6-306 0L410.3 307.6c-3.1 3.1-3.1 8.2 0 11.3l39.7 39.7c3.1 3.1 8.2 3.1 11.3 0l116.2-116.2c53.8-53.8 144.6-59.5 204 0 59.5 59.5 53.8 150.2 0 204L665.3 562.6c-3.1 3.1-3.1 8.2 0 11.3l39.8 39.8c3.1 3.1 8.2 3.1 11.3 0l116.2-116.2c84.5-84.6 84.5-221.5 0-306.1z"  ></path><path d="M610.1 372.3c-3.1-3.1-8.2-3.1-11.3 0L372.3 598.7c-3.1 3.1-3.1 8.2 0 11.3l39.6 39.6c3.1 3.1 8.2 3.1 11.3 0l226.4-226.4c3.1-3.1 3.1-8.2 0-11.3l-39.5-39.6z"  ></path></symbol><symbol id="icon-tag" viewBox="0 0 1024 1024"><path d="M938 458.8l-29.6-312.6c-1.5-16.2-14.4-29-30.6-30.6L565.2 86h-0.4c-3.2 0-5.7 1-7.6 2.9L88.9 557.2c-3.9 3.9-3.9 10.2 0 14.1l363.8 363.8c1.9 1.9 4.4 2.9 7.1 2.9s5.2-1 7.1-2.9l468.3-468.3c2-2.1 3-5 2.8-8zM459.7 834.7L189.3 564.3 589 164.6 836 188l23.4 247-399.7 399.7z"  ></path><path d="M680 256c-48.5 0-88 39.5-88 88s39.5 88 88 88 88-39.5 88-88-39.5-88-88-88z m0 120c-17.7 0-32-14.3-32-32s14.3-32 32-32 32 14.3 32 32-14.3 32-32 32z"  ></path></symbol><symbol id="icon-indent" viewBox="0 0 1024 1024"><path d="M408 442h480c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8H408c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8zM400 646c0 4.4 3.6 8 8 8h480c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8H408c-4.4 0-8 3.6-8 8v56zM904 160H120c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8h784c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8zM904 792H120c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8h784c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8zM142.4 642.1L298.7 519c4.5-3.5 4.5-10.3 0-13.9L142.4 381.9c-5.8-4.6-14.4-0.5-14.4 6.9v246.3c0 7.4 8.5 11.6 14.4 7z"  ></path></symbol><symbol id="icon-align-right" viewBox="0 0 1024 1024"><path d="M904 158H408c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8h496c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8zM904 582H408c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8h496c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8zM904 794H120c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8h784c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8zM904 370H120c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8h784c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8z"  ></path></symbol><symbol id="icon-desktop" viewBox="0 0 1024 1024"><path d="M928 140H96c-17.7 0-32 14.3-32 32v496c0 17.7 14.3 32 32 32h380v112H304c-8.8 0-16 7.2-16 16v48c0 4.4 3.6 8 8 8h432c4.4 0 8-3.6 8-8v-48c0-8.8-7.2-16-16-16H548V700h380c17.7 0 32-14.3 32-32V172c0-17.7-14.3-32-32-32z m-40 488H136V212h752v416z"  ></path></symbol><symbol id="icon-detail-fill" viewBox="0 0 1024 1024"><path d="M880 112H144c-17.7 0-32 14.3-32 32v736c0 17.7 14.3 32 32 32h736c17.7 0 32-14.3 32-32V144c0-17.7-14.3-32-32-32zM380 696c-22.1 0-40-17.9-40-40s17.9-40 40-40 40 17.9 40 40-17.9 40-40 40z m0-144c-22.1 0-40-17.9-40-40s17.9-40 40-40 40 17.9 40 40-17.9 40-40 40z m0-144c-22.1 0-40-17.9-40-40s17.9-40 40-40 40 17.9 40 40-17.9 40-40 40z m304 272c0 4.4-3.6 8-8 8H492c-4.4 0-8-3.6-8-8v-48c0-4.4 3.6-8 8-8h184c4.4 0 8 3.6 8 8v48z m0-144c0 4.4-3.6 8-8 8H492c-4.4 0-8-3.6-8-8v-48c0-4.4 3.6-8 8-8h184c4.4 0 8 3.6 8 8v48z m0-144c0 4.4-3.6 8-8 8H492c-4.4 0-8-3.6-8-8v-48c0-4.4 3.6-8 8-8h184c4.4 0 8 3.6 8 8v48z"  ></path></symbol><symbol id="icon-sever-fill" viewBox="0 0 1024 1024"><path d="M832 64H192c-17.7 0-32 14.3-32 32v224h704V96c0-17.7-14.3-32-32-32zM456 216c0 4.4-3.6 8-8 8H264c-4.4 0-8-3.6-8-8v-48c0-4.4 3.6-8 8-8h184c4.4 0 8 3.6 8 8v48zM160 928c0 17.7 14.3 32 32 32h640c17.7 0 32-14.3 32-32V704H160v224z m576-136c22.1 0 40 17.9 40 40s-17.9 40-40 40-40-17.9-40-40 17.9-40 40-40zM160 640h704V384H160v256z m96-152c0-4.4 3.6-8 8-8h184c4.4 0 8 3.6 8 8v48c0 4.4-3.6 8-8 8H264c-4.4 0-8-3.6-8-8v-48z"  ></path></symbol><symbol id="icon-image-fill" viewBox="0 0 1024 1024"><path d="M928 160H96c-17.7 0-32 14.3-32 32v640c0 17.7 14.3 32 32 32h832c17.7 0 32-14.3 32-32V192c0-17.7-14.3-32-32-32zM338 304c35.3 0 64 28.7 64 64s-28.7 64-64 64-64-28.7-64-64 28.7-64 64-64z m513.9 437.1c-1.4 1.2-3.3 1.9-5.2 1.9H177.2c-4.4 0-8-3.6-8-8 0-1.9 0.7-3.7 1.9-5.2l170.3-202c2.8-3.4 7.9-3.8 11.3-1 0.3 0.3 0.7 0.6 1 1l99.4 118 158.1-187.5c2.8-3.4 7.9-3.8 11.3-1 0.3 0.3 0.7 0.6 1 1l229.6 271.6c2.6 3.3 2.2 8.4-1.2 11.2z"  ></path></symbol><symbol id="icon-idcard-fill" viewBox="0 0 1024 1024"><path d="M373 411c-28.5 0-51.7 23.3-51.7 52s23.2 52 51.7 52 51.7-23.3 51.7-52-23.2-52-51.7-52z"  ></path><path d="M928 160H96c-17.7 0-32 14.3-32 32v640c0 17.7 14.3 32 32 32h832c17.7 0 32-14.3 32-32V192c0-17.7-14.3-32-32-32zM608 420c0-4.4 1-8 2.3-8h123.4c1.3 0 2.3 3.6 2.3 8v48c0 4.4-1 8-2.3 8H610.3c-1.3 0-2.3-3.6-2.3-8v-48z m-86 253h-43.9c-4.2 0-7.6-3.3-7.9-7.5-3.8-50.5-46-90.5-97.2-90.5s-93.4 40-97.2 90.5c-0.3 4.2-3.7 7.5-7.9 7.5H224c-4.6 0-8.2-3.8-8-8.4 2.8-53.3 32-99.7 74.6-126.1-18.1-19.9-29.1-46.4-29.1-75.5 0-61.9 49.9-112 111.4-112s111.4 50.1 111.4 112c0 29.1-11 55.5-29.1 75.5 42.7 26.5 71.8 72.8 74.6 126.1 0.4 4.6-3.2 8.4-7.8 8.4z m278.9-53H615.1c-3.9 0-7.1-3.6-7.1-8v-48c0-4.4 3.2-8 7.1-8h185.7c3.9 0 7.1 3.6 7.1 8v48h0.1c0 4.4-3.2 8-7.1 8z"  ></path></symbol><symbol id="icon-cloud-fill" viewBox="0 0 1024 1024"><path d="M811.4 418.7C765.6 297.9 648.9 212 512.2 212S258.8 297.8 213 418.6C127.3 441.1 64 519.1 64 612c0 110.5 89.5 200 199.9 200h496.2C870.5 812 960 722.5 960 612c0-92.7-63.1-170.7-148.6-193.3z"  ></path></symbol><symbol id="icon-customerservice-fill" viewBox="0 0 1024 1024"><path d="M512 128c-212.1 0-384 171.9-384 384v360c0 13.3 10.7 24 24 24h184c35.3 0 64-28.7 64-64V624c0-35.3-28.7-64-64-64H200v-48c0-172.3 139.7-312 312-312s312 139.7 312 312v48H688c-35.3 0-64 28.7-64 64v208c0 35.3 28.7 64 64 64h184c13.3 0 24-10.7 24-24V512c0-212.1-171.9-384-384-384z"  ></path></symbol><symbol id="icon-github-fill" viewBox="0 0 1024 1024"><path d="M511.6 76.3C264.3 76.2 64 276.4 64 523.5 64 718.9 189.3 885 363.8 946c23.5 5.9 19.9-10.8 19.9-22.2v-77.5c-135.7 15.9-141.2-73.9-150.3-88.9C215 726 171.5 718 184.5 703c30.9-15.9 62.4 4 98.9 57.9 26.4 39.1 77.9 32.5 104 26 5.7-23.5 17.9-44.5 34.7-60.8-140.6-25.2-199.2-111-199.2-213 0-49.5 16.3-95 48.3-131.7-20.4-60.5 1.9-112.3 4.9-120 58.1-5.2 118.5 41.6 123.2 45.3 33-8.9 70.7-13.6 112.9-13.6 42.4 0 80.2 4.9 113.5 13.9 11.3-8.6 67.3-48.8 121.3-43.9 2.9 7.7 24.7 58.3 5.5 118 32.4 36.8 48.9 82.7 48.9 132.3 0 102.2-59 188.1-200 212.9 23.5 23.2 38.1 55.4 38.1 91v112.5c0.8 9 0 17.9 15 17.9 177.1-59.7 304.6-227 304.6-424.1 0-247.2-200.4-447.3-447.5-447.3z"  ></path></symbol><symbol id="icon-medium-circle-fill" viewBox="0 0 1024 1024"><path d="M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64z m256 253.7l-40.8 39.1c-3.6 2.7-5.3 7.1-4.6 11.4v287.7c-0.7 4.4 1 8.8 4.6 11.4l40 39.1v8.7H566.4v-8.3l41.3-40.1c4.1-4.1 4.1-5.3 4.1-11.4V422.5l-115 291.6h-15.5L347.5 422.5V618c-1.2 8.2 1.7 16.5 7.5 22.4l53.8 65.1v8.7H256v-8.7l53.8-65.1c5.8-5.9 8.3-14.3 7-22.4V392c0.7-6.3-1.7-12.4-6.5-16.7l-47.8-57.6V309H411l114.6 251.5 100.9-251.3H768v8.5z"  ></path></symbol><symbol id="icon-Console-SQL" viewBox="0 0 1024 1024"><path d="M301.3 496.7c-23.8 0-40.2-10.5-41.6-26.9H205c0.9 43.4 36.9 70.3 93.9 70.3 59.1 0 95-28.4 95-75.5 0-35.8-20-55.9-64.5-64.5l-29.1-5.6c-23.8-4.7-33.8-11.9-33.8-24.2 0-15 13.3-24.5 33.4-24.5 20.1 0 35.3 11.1 36.6 27h53c-0.9-41.7-37.5-70.3-90.3-70.3-54.4 0-89.7 28.9-89.7 73 0 35.5 21.2 58 62.5 65.8l29.7 5.9c25.8 5.2 35.6 11.9 35.6 24.4 0.1 14.7-14.5 25.1-36 25.1z"  ></path><path d="M928 140H96c-17.7 0-32 14.3-32 32v496c0 17.7 14.3 32 32 32h380v112H304c-8.8 0-16 7.2-16 16v48c0 4.4 3.6 8 8 8h432c4.4 0 8-3.6 8-8v-48c0-8.8-7.2-16-16-16H548V700h380c17.7 0 32-14.3 32-32V172c0-17.7-14.3-32-32-32z m-40 488H136V212h752v416z"  ></path><path d="M828.5 486.7h-95.8V308.5h-57.4V534h153.2zM529.9 540.1c14.1 0 27.2-2 39.1-5.8l13.3 20.3h53.3L607.9 511c21.1-20 33-51.1 33-89.8 0-73.3-43.3-118.8-110.9-118.8s-111.2 45.3-111.2 118.8c-0.1 73.7 43 118.9 111.1 118.9z m0-190c31.6 0 52.7 27.7 52.7 71.1 0 16.7-3.6 30.6-10 40.5l-5.2-6.9h-48.8L542 491c-3.9 0.9-8 1.4-12.2 1.4-31.7 0-52.8-27.5-52.8-71.2 0.1-43.6 21.2-71.1 52.9-71.1z"  ></path></symbol><symbol id="icon-send" viewBox="0 0 1024 1024"><path d="M931.4 498.9L94.9 79.5c-3.4-1.7-7.3-2.1-11-1.2-8.5 2.1-13.8 10.7-11.7 19.3l86.2 352.2c1.3 5.3 5.2 9.6 10.4 11.3l147.7 50.7-147.6 50.7c-5.2 1.8-9.1 6-10.3 11.3L72.2 926.5c-0.9 3.7-0.5 7.6 1.2 10.9 3.9 7.9 13.5 11.1 21.5 7.2l836.5-417c3.1-1.5 5.6-4.1 7.2-7.1 3.9-8 0.7-17.6-7.2-21.6zM170.8 826.3l50.3-205.6 295.2-101.3c2.3-0.8 4.2-2.6 5-5 1.4-4.2-0.8-8.7-5-10.2L221.1 403 171 198.2l628 314.9-628.2 313.2z"  ></path></symbol><symbol id="icon-time-circle" viewBox="0 0 1024 1024"><path d="M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64z m0 820c-205.4 0-372-166.6-372-372s166.6-372 372-372 372 166.6 372 372-166.6 372-372 372z"  ></path><path d="M686.7 638.6L544.1 535.5V288c0-4.4-3.6-8-8-8H488c-4.4 0-8 3.6-8 8v275.4c0 2.6 1.2 5 3.3 6.5l165.4 120.6c3.6 2.6 8.6 1.8 11.2-1.7l28.6-39c2.6-3.7 1.8-8.7-1.8-11.2z"  ></path></symbol><symbol id="icon-edit-square" viewBox="0 0 1024 1024"><path d="M904 512h-56c-4.4 0-8 3.6-8 8v320H184V184h320c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8H144c-17.7 0-32 14.3-32 32v736c0 17.7 14.3 32 32 32h736c17.7 0 32-14.3 32-32V520c0-4.4-3.6-8-8-8z"  ></path><path d="M355.9 534.9L354 653.8c-0.1 8.9 7.1 16.2 16 16.2h0.4l118-2.9c2-0.1 4-0.9 5.4-2.3l415.9-415c3.1-3.1 3.1-8.2 0-11.3L785.4 114.3c-1.6-1.6-3.6-2.3-5.7-2.3s-4.1 0.8-5.7 2.3l-415.8 415c-1.4 1.5-2.3 3.5-2.3 5.6z m63.5 23.6L779.7 199l45.2 45.1-360.5 359.7-45.7 1.1 0.7-46.4z"  ></path></symbol><symbol id="icon-experiment" viewBox="0 0 1024 1024"><path d="M552 472m-40 0a40 40 0 1 0 80 0 40 40 0 1 0-80 0Z"  ></path><path d="M879 824.9L696.3 352V178H768v-68H256v68h71.7v174L145 824.9c-2.8 7.4-4.3 15.2-4.3 23.1 0 35.3 28.7 64 64 64h614.6c7.9 0 15.7-1.5 23.1-4.3 33-12.7 49.4-49.8 36.6-82.8zM395.7 364.7V180h232.6v184.7L719.2 600c-20.7-5.3-42.1-8-63.9-8-61.2 0-119.2 21.5-165.3 60-33.9 28.2-76.3 43.9-121.3 43.9-32.7 0-64.1-8.3-91.8-23.7l118.8-307.5zM210.5 844l41.7-107.8c35.7 18.1 75.4 27.8 116.6 27.8 61.2 0 119.2-21.5 165.3-60 33.9-28.2 76.3-43.9 121.3-43.9 35 0 68.4 9.5 97.6 27.1L813.5 844h-603z"  ></path></symbol><symbol id="icon-trophy" viewBox="0 0 1024 1024"><path d="M868 160h-92v-40c0-4.4-3.6-8-8-8H256c-4.4 0-8 3.6-8 8v40h-92c-24.3 0-44 19.7-44 44v148c0 81.7 60 149.6 138.2 162C265.7 630.2 359 721.7 476 734.5v105.2H280c-17.7 0-32 14.3-32 32V904c0 4.4 3.6 8 8 8h512c4.4 0 8-3.6 8-8v-32.3c0-17.7-14.3-32-32-32H548V734.5C665 721.7 758.3 630.2 773.8 514 852 501.6 912 433.7 912 352V204c0-24.3-19.7-44-44-44zM184 352V232h64v207.6c-37.1-11.8-64-46.6-64-87.6z m520 128c0 49.1-19.1 95.4-53.9 130.1-34.8 34.8-81 53.9-130.1 53.9h-16c-49.1 0-95.4-19.1-130.1-53.9-34.8-34.8-53.9-81-53.9-130.1V184h384v296z m136-128c0 41-26.9 75.8-64 87.6V232h64v120z"  ></path></symbol><symbol id="icon-home" viewBox="0 0 1024 1024"><path d="M946.5 505L560.1 118.8l-25.9-25.9c-12.3-12.2-32.1-12.2-44.4 0L77.5 505c-12.3 12.3-18.9 28.6-18.8 46 0.4 35.2 29.7 63.3 64.9 63.3h42.5V940h691.8V614.3h43.4c17.1 0 33.2-6.7 45.3-18.8 12.1-12.1 18.7-28.2 18.7-45.3 0-17-6.7-33.1-18.8-45.2zM568 868H456V664h112v204z m217.9-325.7V868H632V640c0-22.1-17.9-40-40-40H432c-22.1 0-40 17.9-40 40v228H238.1V542.3h-96l370-369.7 23.1 23.1L882 542.3h-96.1z"  ></path></symbol><symbol id="icon-flag" viewBox="0 0 1024 1024"><path d="M880 305H624V192c0-17.7-14.3-32-32-32H184v-40c0-4.4-3.6-8-8-8h-56c-4.4 0-8 3.6-8 8v784c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8V640h248v113c0 17.7 14.3 32 32 32h416c17.7 0 32-14.3 32-32V337c0-17.7-14.3-32-32-32zM184 568V232h368v336H184z m656 145H504v-73h112c4.4 0 8-3.6 8-8V377h216v336z"  ></path></symbol><symbol id="icon-rocket" viewBox="0 0 1024 1024"><path d="M864 736c0-111.6-65.4-208-160-252.9V317.3c0-15.1-5.3-29.7-15.1-41.2L536.5 95.4C530.1 87.8 521 84 512 84s-18.1 3.8-24.5 11.4L335.1 276.1c-9.7 11.5-15.1 26.1-15.1 41.2v165.8C225.4 528 160 624.4 160 736h156.5c-2.3 7.2-3.5 15-3.5 23.8 0 22.1 7.6 43.7 21.4 60.8 11.3 14 26.2 24.6 43.1 30.6 23.1 54 75.6 88.8 134.5 88.8 29.1 0 57.3-8.6 81.4-24.8 23.6-15.8 41.9-37.9 53-64 16.9-6 31.8-16.5 43.1-30.5 13.8-17.2 21.4-38.8 21.4-60.8 0-8.4-1.1-16.4-3.1-23.8H864zM762.3 621.4c9.4 14.6 17 30.3 22.5 46.6H700V558.7c24.8 16.2 46.1 37.5 62.3 62.7zM388 483.1V318.8l124-147 124 147V668H388V483.1zM239.2 668c5.5-16.3 13.1-32 22.5-46.6 16.3-25.2 37.5-46.5 62.3-62.7V668h-84.8z m388.9 116.2c-5.2 3-11.2 4.2-17.1 3.4l-19.5-2.4-2.8 19.4c-5.4 37.9-38.4 66.5-76.7 66.5-38.3 0-71.3-28.6-76.7-66.5l-2.8-19.5-19.5 2.5c-1 0.1-2.1 0.2-3.3 0.2-4.9 0-9.6-1.3-13.8-3.7-8.7-5-14.1-14.3-14.1-24.4 0-10.6 5.9-19.4 14.6-23.8h231.3c8.8 4.5 14.6 13.3 14.6 23.8-0.1 10.2-5.5 19.6-14.2 24.5z"  ></path><path d="M512 400m-48 0a48 48 0 1 0 96 0 48 48 0 1 0-96 0Z"  ></path></symbol><symbol id="icon-calendar" viewBox="0 0 1024 1024"><path d="M880 184H712v-64c0-4.4-3.6-8-8-8h-56c-4.4 0-8 3.6-8 8v64H384v-64c0-4.4-3.6-8-8-8h-56c-4.4 0-8 3.6-8 8v64H144c-17.7 0-32 14.3-32 32v664c0 17.7 14.3 32 32 32h736c17.7 0 32-14.3 32-32V216c0-17.7-14.3-32-32-32z m-40 656H184V460h656v380zM184 392V256h128v48c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-48h256v48c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-48h128v136H184z"  ></path></symbol></svg>',(h=>{var c=(l=(l=document.getElementsByTagName("script"))[l.length-1]).getAttribute("data-injectcss"),l=l.getAttribute("data-disable-injectsvg");if(!l){var i,a,t,o,v,m=function(c,l){l.parentNode.insertBefore(c,l)};if(c&&!h.__iconfont__svg__cssinject__){h.__iconfont__svg__cssinject__=!0;try{document.write("<style>.svgfont {display: inline-block;width: 1em;height: 1em;fill: currentColor;vertical-align: -0.1em;font-size:16px;}</style>")}catch(c){console&&console.log(c)}}i=function(){var c,l=document.createElement("div");l.innerHTML=h._iconfont_svg_string_4902343,(l=l.getElementsByTagName("svg")[0])&&(l.setAttribute("aria-hidden","true"),l.style.position="absolute",l.style.width=0,l.style.height=0,l.style.overflow="hidden",l=l,(c=document.body).firstChild?m(l,c.firstChild):c.appendChild(l))},document.addEventListener?~["complete","loaded","interactive"].indexOf(document.readyState)?setTimeout(i,0):(a=function(){document.removeEventListener("DOMContentLoaded",a,!1),i()},document.addEventListener("DOMContentLoaded",a,!1)):document.attachEvent&&(t=i,o=h.document,v=!1,z(),o.onreadystatechange=function(){"complete"==o.readyState&&(o.onreadystatechange=null,s())})}function s(){v||(v=!0,t())}function z(){try{o.documentElement.doScroll("left")}catch(c){return void setTimeout(z,50)}s()}})(window);]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>music</title>
      <link href="/music/index.html"/>
      <url>/music/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
  
</search>
